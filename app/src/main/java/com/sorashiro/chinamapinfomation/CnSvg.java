package com.sorashiro.chinamapinfomation;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

import java.util.HashMap;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * <p>
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class CnSvg extends SVGRenderer {

    private String[] mProvince;
    private HashMap<String, CnMapConfig> mConfig;

    private float scaleX;
    private float scaleY;
    float minScale;
    private CnMap mCnMap;


    public CnSvg(Context context, CnMap cnMap) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(1369.0f);
        mHeight = dip2px(1141.0f);
        mProvince = cnMap.PROVINCE;
        mConfig = cnMap.config;
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        scaleX = w / 1369.0f;
        scaleY = h / 1141.0f;
        minScale = Math.min(scaleX, scaleY);

        mPath.reset();
        mRenderPath.reset();

        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);

        if (mStrokePaint == null) {
            mStrokePaint = new Paint();
            mStrokePaint.setStyle(Paint.Style.STROKE);
            mStrokePaint.setAntiAlias(true);
        }
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }

        for(int i = 0; i < 34; i++) {

            //TODO 需要重写
            CnMapConfig cnMapConfig = mConfig.get(mProvince[i]);
            mFillPaint.setColor(cnMapConfig.getFillColor());
            mFillPaint.setStrokeWidth(cnMapConfig.getStrokeWidth());
            mStrokePaint.setColor(cnMapConfig.getStrokeColor());
            mStrokePaint.setStrokeWidth(cnMapConfig.getStrokeWidth());

            renderGo(canvas, filter, mStrokePaint, i, cnMapConfig.getText());
            renderGo(canvas, filter, mFillPaint, i, cnMapConfig.getText());
        }

    }

    private void renderGo(Canvas canvas, ColorFilter filter, Paint paint, int i, String text) {
        if(i >= 0 && i <= 8) {
            renderByProvince1(i);

            mRenderPath.addPath(mPath, mFinalPathMatrix);
            paint.setStrokeJoin(Paint.Join.MITER);
            paint.setStrokeCap(Paint.Cap.BUTT);
            paint.setStrokeMiter(4.0f);
            paint.setColorFilter(filter);
            canvas.drawPath(mRenderPath, paint);

            mPath.reset();
            mRenderPath.reset();

            mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
            mFinalPathMatrix.postScale(scaleX, scaleY);
        } else if (i >= 9 && i <= 19) {
            renderByProvince2(i);

            mRenderPath.addPath(mPath, mFinalPathMatrix);
            paint.setStrokeJoin(Paint.Join.MITER);
            paint.setStrokeCap(Paint.Cap.BUTT);
            paint.setStrokeMiter(4.0f);
            paint.setColorFilter(filter);
            canvas.drawPath(mRenderPath, paint);
            mPath.reset();
            mRenderPath.reset();

            mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
            mFinalPathMatrix.postScale(scaleX, scaleY);
        } else if (i >= 20 && i <= 29) {
            renderByProvince3(i);

            mRenderPath.addPath(mPath, mFinalPathMatrix);
            paint.setStrokeJoin(Paint.Join.MITER);
            paint.setStrokeCap(Paint.Cap.BUTT);
            paint.setStrokeMiter(4.0f);
            paint.setColorFilter(filter);
            canvas.drawPath(mRenderPath, paint);
            mPath.reset();
            mRenderPath.reset();

            mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
            mFinalPathMatrix.postScale(scaleX, scaleY);
        } else if (i >= 29 && i <= 33) {
            renderByProvince4(i);

            mRenderPath.addPath(mPath, mFinalPathMatrix);
            paint.setStrokeJoin(Paint.Join.MITER);
            paint.setStrokeCap(Paint.Cap.BUTT);
            paint.setStrokeMiter(4.0f);
            paint.setColorFilter(filter);
            canvas.drawPath(mRenderPath, paint);
            mPath.reset();
            mRenderPath.reset();

            mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
            mFinalPathMatrix.postScale(scaleX, scaleY);
        }

    }


    //各个省份的路径绘制
    private void renderByProvince1(int index) {
        switch (index) {
            case 0:
                mPath.moveTo(1043.58f, 635.79f);
                mPath.cubicTo(1042.49f, 637.82f, 1037.89f, 639.08f, 1034.53f, 643.12f);
                mPath.cubicTo(1034.53f, 643.12f, 1027.08f, 636.08f, 1027.08f, 636.08f);
                mPath.cubicTo(1023.65f, 632.94f, 1018.77f, 633.69f, 1017.49f, 636.64f);
                mPath.cubicTo(1016.95f, 637.88f, 1017.19f, 642.44f, 1016.96f, 644.32f);
                mPath.cubicTo(1016.1f, 651.3f, 1014.28f, 650.64f, 1013.28f, 653.92f);
                mPath.cubicTo(1012.57f, 656.21f, 1013.61f, 658.24f, 1013.28f, 659.89f);
                mPath.cubicTo(1012.86f, 662.19f, 1009.08f, 664.98f, 1006.93f, 665.61f);
                mPath.cubicTo(1005.72f, 665.97f, 1004.02f, 665.91f, 1002.74f, 665.92f);
                mPath.cubicTo(1003.19f, 667.85f, 1003.69f, 670.01f, 1005.37f, 671.27f);
                mPath.cubicTo(1006.89f, 672.41f, 1009.48f, 672.59f, 1010.78f, 674.03f);
                mPath.cubicTo(1012.12f, 675.51f, 1012.29f, 679.55f, 1012.33f, 681.52f);
                mPath.cubicTo(1012.33f, 681.52f, 1018.93f, 682.55f, 1018.93f, 682.55f);
                mPath.cubicTo(1022.72f, 683.02f, 1025.57f, 682.28f, 1029.1f, 684.57f);
                mPath.cubicTo(1031.31f, 686.0f, 1031.52f, 687.52f, 1032.02f, 689.92f);
                mPath.cubicTo(1032.8f, 693.75f, 1034.18f, 701.29f, 1032.02f, 704.79f);
                mPath.cubicTo(1030.76f, 706.85f, 1028.64f, 706.52f, 1026.79f, 707.51f);
                mPath.cubicTo(1023.82f, 709.11f, 1020.82f, 714.07f, 1021.18f, 717.53f);
                mPath.cubicTo(1022.13f, 726.61f, 1041.66f, 723.82f, 1035.94f, 734.33f);
                mPath.cubicTo(1035.27f, 735.57f, 1034.21f, 736.83f, 1033.33f, 737.93f);
                mPath.cubicTo(1033.33f, 737.93f, 1037.81f, 745.73f, 1037.81f, 745.73f);
                mPath.cubicTo(1037.81f, 745.73f, 1039.49f, 751.14f, 1039.49f, 751.14f);
                mPath.cubicTo(1039.49f, 751.14f, 1042.79f, 756.54f, 1042.79f, 756.54f);
                mPath.cubicTo(1042.79f, 756.54f, 1045.93f, 765.54f, 1045.93f, 765.54f);
                mPath.cubicTo(1045.93f, 765.54f, 1052.82f, 763.85f, 1052.82f, 763.85f);
                mPath.cubicTo(1052.82f, 763.85f, 1057.52f, 758.35f, 1057.52f, 758.35f);
                mPath.cubicTo(1057.52f, 758.35f, 1064.53f, 757.74f, 1064.53f, 757.74f);
                mPath.cubicTo(1064.53f, 767.96f, 1063.79f, 763.18f, 1061.53f, 770.34f);
                mPath.cubicTo(1064.92f, 771.28f, 1068.36f, 771.03f, 1070.54f, 767.74f);
                mPath.cubicTo(1072.08f, 765.41f, 1070.85f, 761.58f, 1076.52f, 761.97f);
                mPath.cubicTo(1080.34f, 762.24f, 1080.21f, 764.96f, 1083.18f, 766.55f);
                mPath.cubicTo(1083.18f, 766.55f, 1093.32f, 768.98f, 1093.32f, 768.98f);
                mPath.cubicTo(1093.32f, 768.98f, 1102.32f, 771.88f, 1102.32f, 771.88f);
                mPath.cubicTo(1105.41f, 772.08f, 1108.68f, 768.77f, 1110.71f, 766.73f);
                mPath.cubicTo(1113.75f, 763.68f, 1118.88f, 754.93f, 1118.89f, 750.53f);
                mPath.cubicTo(1118.91f, 748.58f, 1117.5f, 744.58f, 1116.72f, 742.73f);
                mPath.cubicTo(1122.94f, 740.66f, 1123.51f, 740.81f, 1129.31f, 737.33f);
                mPath.cubicTo(1129.31f, 737.33f, 1125.12f, 730.13f, 1125.12f, 730.13f);
                mPath.cubicTo(1125.12f, 730.13f, 1131.11f, 728.93f, 1131.11f, 728.93f);
                mPath.cubicTo(1132.44f, 719.52f, 1132.91f, 724.54f, 1132.91f, 712.73f);
                mPath.cubicTo(1132.91f, 712.73f, 1122.12f, 710.05f, 1122.12f, 710.05f);
                mPath.cubicTo(1122.12f, 710.05f, 1111.32f, 713.33f, 1111.32f, 713.33f);
                mPath.cubicTo(1111.68f, 708.89f, 1113.01f, 704.29f, 1109.7f, 700.44f);
                mPath.cubicTo(1106.55f, 696.79f, 1099.2f, 696.1f, 1098.76f, 690.52f);
                mPath.cubicTo(1098.31f, 684.94f, 1101.22f, 684.34f, 1102.48f, 680.92f);
                mPath.cubicTo(1102.48f, 680.92f, 1104.12f, 670.12f, 1104.12f, 670.12f);
                mPath.cubicTo(1106.01f, 670.63f, 1108.89f, 671.99f, 1110.72f, 671.51f);
                mPath.cubicTo(1114.59f, 670.5f, 1115.72f, 667.62f, 1114.51f, 664.13f);
                mPath.cubicTo(1114.13f, 663.02f, 1113.79f, 662.01f, 1112.81f, 661.28f);
                mPath.cubicTo(1105.51f, 655.8f, 1101.06f, 666.63f, 1095.72f, 666.24f);
                mPath.cubicTo(1091.65f, 665.94f, 1090.5f, 661.49f, 1088.55f, 658.78f);
                mPath.cubicTo(1086.46f, 655.9f, 1084.08f, 656.22f, 1082.45f, 652.71f);
                mPath.cubicTo(1080.99f, 649.57f, 1082.73f, 647.89f, 1083.4f, 644.92f);
                mPath.cubicTo(1083.86f, 642.91f, 1083.72f, 639.29f, 1083.72f, 637.11f);
                mPath.cubicTo(1082.01f, 637.11f, 1079.88f, 637.28f, 1078.32f, 636.5f);
                mPath.cubicTo(1076.03f, 635.35f, 1073.05f, 631.35f, 1069.92f, 629.94f);
                mPath.cubicTo(1067.75f, 629.07f, 1066.15f, 629.87f, 1063.93f, 629.94f);
                mPath.cubicTo(1061.63f, 629.87f, 1059.39f, 629.21f, 1057.33f, 628.23f);
                mPath.cubicTo(1052.3f, 625.87f, 1053.15f, 624.2f, 1050.95f, 621.83f);
                mPath.cubicTo(1049.83f, 620.62f, 1045.7f, 618.13f, 1044.13f, 617.23f);
                mPath.cubicTo(1041.05f, 615.48f, 1036.06f, 611.93f, 1032.84f, 614.75f);
                mPath.cubicTo(1031.52f, 615.9f, 1031.36f, 616.85f, 1031.57f, 618.51f);
                mPath.cubicTo(1032.48f, 625.86f, 1039.47f, 623.77f, 1042.58f, 630.51f);
                mPath.cubicTo(1043.26f, 632.02f, 1044.43f, 634.18f, 1043.58f, 635.79f);
                mPath.cubicTo(1043.58f, 635.79f, 1043.58f, 635.79f, 1043.58f, 635.79f);
                mPath.close();
                mPath.moveTo(1043.58f, 635.79f);
                break;
            case 1:
                mPath.moveTo(996.44f, 443.41f);
                mPath.cubicTo(995.21f, 445.8f, 995.54f, 452.94f, 995.54f, 455.88f);
                mPath.cubicTo(995.54f, 455.88f, 1005.14f, 457.53f, 1005.14f, 457.53f);
                mPath.cubicTo(1005.14f, 457.53f, 1011.13f, 457.53f, 1011.13f, 457.53f);
                mPath.cubicTo(1013.41f, 457.9f, 1015.09f, 459.95f, 1017.13f, 459.31f);
                mPath.cubicTo(1018.88f, 458.76f, 1020.45f, 456.11f, 1021.99f, 454.87f);
                mPath.cubicTo(1024.74f, 452.65f, 1027.06f, 454.22f, 1027.61f, 451.6f);
                mPath.cubicTo(1028.02f, 449.69f, 1025.56f, 444.92f, 1024.93f, 442.68f);
                mPath.cubicTo(1024.93f, 442.68f, 1034.53f, 436.9f, 1034.53f, 436.9f);
                mPath.cubicTo(1035.49f, 436.19f, 1037.01f, 434.89f, 1037.33f, 433.7f);
                mPath.cubicTo(1037.91f, 431.52f, 1035.14f, 430.86f, 1034.55f, 428.27f);
                mPath.cubicTo(1033.77f, 424.86f, 1036.38f, 421.83f, 1038.13f, 419.28f);
                mPath.cubicTo(1034.22f, 419.28f, 1028.99f, 419.92f, 1025.53f, 418.04f);
                mPath.cubicTo(1019.22f, 414.63f, 1020.97f, 411.38f, 1017.11f, 411.77f);
                mPath.cubicTo(1011.81f, 412.3f, 1013.5f, 416.37f, 1010.37f, 419.6f);
                mPath.cubicTo(1008.55f, 421.47f, 1003.86f, 424.16f, 1002.75f, 426.06f);
                mPath.cubicTo(1001.79f, 427.7f, 1002.15f, 433.34f, 1002.14f, 435.48f);
                mPath.cubicTo(1002.12f, 436.96f, 1002.27f, 438.7f, 1001.18f, 439.86f);
                mPath.cubicTo(999.89f, 441.25f, 997.59f, 441.17f, 996.44f, 443.41f);
                mPath.cubicTo(996.44f, 443.41f, 996.44f, 443.41f, 996.44f, 443.41f);
                mPath.close();
                mPath.moveTo(996.44f, 443.41f);
                break;
            case 2:
                mPath.moveTo(855.06f, 715.1f);
                mPath.cubicTo(855.06f, 715.1f, 838.36f, 706.13f, 838.36f, 706.13f);
                mPath.cubicTo(837.28f, 707.22f, 835.43f, 708.94f, 834.83f, 710.33f);
                mPath.cubicTo(833.28f, 713.92f, 836.21f, 719.43f, 838.96f, 721.73f);
                mPath.cubicTo(834.92f, 725.79f, 832.86f, 727.81f, 830.48f, 733.13f);
                mPath.cubicTo(830.48f, 733.13f, 828.11f, 739.13f, 828.11f, 739.13f);
                mPath.cubicTo(826.74f, 743.8f, 827.32f, 746.69f, 822.77f, 749.44f);
                mPath.cubicTo(819.96f, 751.12f, 819.75f, 750.83f, 816.77f, 750.56f);
                mPath.cubicTo(810.16f, 749.99f, 812.14f, 755.88f, 810.95f, 759.54f);
                mPath.cubicTo(810.35f, 761.39f, 806.8f, 767.1f, 805.62f, 769.14f);
                mPath.cubicTo(804.19f, 771.6f, 803.24f, 773.88f, 800.54f, 775.23f);
                mPath.cubicTo(794.38f, 778.3f, 788.39f, 770.05f, 786.17f, 769.28f);
                mPath.cubicTo(784.14f, 768.57f, 782.66f, 770.28f, 781.02f, 770.06f);
                mPath.cubicTo(779.36f, 769.84f, 777.69f, 767.52f, 774.77f, 766.27f);
                mPath.cubicTo(769.75f, 764.12f, 769.24f, 765.72f, 766.1f, 768.96f);
                mPath.cubicTo(764.89f, 770.2f, 763.57f, 771.14f, 762.18f, 772.14f);
                mPath.cubicTo(763.56f, 774.86f, 765.22f, 775.51f, 765.01f, 777.55f);
                mPath.cubicTo(764.61f, 781.43f, 759.17f, 786.09f, 757.26f, 789.54f);
                mPath.cubicTo(756.44f, 791.01f, 755.13f, 793.24f, 755.71f, 794.94f);
                mPath.cubicTo(756.47f, 797.12f, 761.51f, 801.23f, 763.36f, 802.91f);
                mPath.cubicTo(767.6f, 806.76f, 767.09f, 808.84f, 768.59f, 809.95f);
                mPath.cubicTo(769.94f, 810.95f, 771.81f, 810.11f, 774.17f, 811.24f);
                mPath.cubicTo(779.31f, 813.68f, 781.2f, 818.23f, 783.17f, 823.15f);
                mPath.cubicTo(783.17f, 823.15f, 788.57f, 818.95f, 788.57f, 818.95f);
                mPath.cubicTo(788.57f, 818.95f, 792.17f, 825.55f, 792.17f, 825.55f);
                mPath.cubicTo(797.72f, 819.93f, 796.12f, 812.08f, 804.17f, 812.29f);
                mPath.cubicTo(804.17f, 812.29f, 809.57f, 813.55f, 809.57f, 813.55f);
                mPath.cubicTo(810.01f, 811.21f, 810.89f, 803.98f, 812.75f, 802.76f);
                mPath.cubicTo(816.27f, 800.45f, 819.81f, 805.01f, 822.77f, 805.54f);
                mPath.cubicTo(824.5f, 805.86f, 828.99f, 804.75f, 831.16f, 804.57f);
                mPath.cubicTo(831.16f, 804.57f, 836.56f, 804.57f, 836.56f, 804.57f);
                mPath.cubicTo(836.56f, 804.57f, 838.36f, 818.35f, 838.36f, 818.35f);
                mPath.cubicTo(839.92f, 818.27f, 842.84f, 817.65f, 844.0f, 818.73f);
                mPath.cubicTo(845.03f, 819.69f, 845.15f, 822.36f, 845.42f, 823.75f);
                mPath.cubicTo(846.1f, 827.07f, 848.02f, 830.06f, 851.56f, 830.74f);
                mPath.cubicTo(856.97f, 831.78f, 861.22f, 827.65f, 862.1f, 822.55f);
                mPath.cubicTo(862.1f, 822.55f, 861.16f, 810.55f, 861.16f, 810.55f);
                mPath.cubicTo(861.05f, 801.19f, 861.84f, 804.68f, 858.16f, 796.14f);
                mPath.cubicTo(858.16f, 796.14f, 852.16f, 797.34f, 852.16f, 797.34f);
                mPath.cubicTo(852.16f, 795.58f, 852.47f, 790.62f, 851.57f, 789.32f);
                mPath.cubicTo(850.73f, 788.13f, 848.24f, 787.29f, 846.82f, 786.16f);
                mPath.cubicTo(844.65f, 784.43f, 844.04f, 782.44f, 843.16f, 779.94f);
                mPath.cubicTo(843.16f, 779.94f, 838.36f, 784.14f, 838.36f, 784.14f);
                mPath.cubicTo(839.24f, 780.22f, 842.21f, 771.65f, 841.03f, 767.94f);
                mPath.cubicTo(840.47f, 766.22f, 838.27f, 763.6f, 837.16f, 761.94f);
                mPath.cubicTo(837.16f, 761.94f, 843.16f, 759.21f, 843.16f, 759.21f);
                mPath.cubicTo(843.16f, 759.21f, 848.51f, 759.21f, 848.51f, 759.21f);
                mPath.cubicTo(848.51f, 759.21f, 852.78f, 756.33f, 852.78f, 756.33f);
                mPath.cubicTo(852.78f, 756.33f, 856.96f, 757.18f, 856.96f, 757.18f);
                mPath.cubicTo(856.96f, 757.18f, 862.96f, 756.0f, 862.96f, 756.0f);
                mPath.cubicTo(862.96f, 756.0f, 872.56f, 749.11f, 872.56f, 749.11f);
                mPath.cubicTo(872.56f, 749.11f, 876.5f, 746.63f, 876.5f, 746.63f);
                mPath.cubicTo(876.5f, 746.63f, 880.96f, 748.13f, 880.96f, 748.13f);
                mPath.cubicTo(883.81f, 739.57f, 885.67f, 734.9f, 878.38f, 727.86f);
                mPath.cubicTo(876.53f, 726.07f, 875.17f, 725.73f, 873.16f, 724.37f);
                mPath.cubicTo(871.68f, 723.37f, 869.23f, 721.15f, 867.76f, 720.54f);
                mPath.cubicTo(865.36f, 719.76f, 862.75f, 721.45f, 860.61f, 720.54f);
                mPath.cubicTo(858.72f, 719.59f, 857.45f, 716.84f, 855.06f, 715.1f);
                mPath.cubicTo(855.06f, 715.1f, 855.06f, 715.1f, 855.06f, 715.1f);
                mPath.close();
                mPath.moveTo(855.06f, 715.1f);
                break;
            case 3:
                mPath.moveTo(1101.35f, 819.51f);
                mPath.cubicTo(1099.64f, 820.73f, 1098.73f, 823.03f, 1098.12f, 824.95f);
                mPath.cubicTo(1098.12f, 824.95f, 1092.12f, 820.15f, 1092.12f, 820.15f);
                mPath.cubicTo(1087.15f, 823.48f, 1086.85f, 824.45f, 1083.02f, 828.52f);
                mPath.cubicTo(1082.02f, 829.59f, 1079.68f, 831.4f, 1079.46f, 832.8f);
                mPath.cubicTo(1079.16f, 834.77f, 1081.59f, 836.56f, 1082.28f, 838.75f);
                mPath.cubicTo(1082.93f, 840.85f, 1081.81f, 845.22f, 1080.82f, 847.15f);
                mPath.cubicTo(1077.81f, 853.05f, 1072.8f, 851.64f, 1069.52f, 858.55f);
                mPath.cubicTo(1068.64f, 860.41f, 1068.12f, 861.91f, 1068.72f, 863.96f);
                mPath.cubicTo(1069.43f, 866.32f, 1071.26f, 867.92f, 1070.3f, 870.56f);
                mPath.cubicTo(1069.68f, 872.24f, 1067.79f, 874.08f, 1067.18f, 876.56f);
                mPath.cubicTo(1066.56f, 879.05f, 1067.41f, 881.91f, 1066.37f, 884.36f);
                mPath.cubicTo(1065.62f, 886.09f, 1062.2f, 890.03f, 1060.3f, 895.16f);
                mPath.cubicTo(1059.21f, 898.08f, 1057.11f, 912.58f, 1056.83f, 916.16f);
                mPath.cubicTo(1056.74f, 917.35f, 1056.66f, 918.92f, 1057.69f, 919.75f);
                mPath.cubicTo(1058.8f, 920.66f, 1063.36f, 920.71f, 1065.73f, 921.54f);
                mPath.cubicTo(1071.44f, 923.56f, 1073.56f, 927.06f, 1075.92f, 927.64f);
                mPath.cubicTo(1078.02f, 928.15f, 1080.97f, 926.44f, 1082.7f, 927.95f);
                mPath.cubicTo(1083.63f, 928.75f, 1084.63f, 931.7f, 1085.31f, 932.97f);
                mPath.cubicTo(1085.31f, 932.97f, 1088.92f, 938.97f, 1088.92f, 938.97f);
                mPath.cubicTo(1090.87f, 943.66f, 1091.01f, 948.49f, 1094.65f, 952.77f);
                mPath.cubicTo(1095.59f, 953.88f, 1097.33f, 955.7f, 1098.72f, 956.16f);
                mPath.cubicTo(1100.41f, 956.73f, 1105.35f, 955.41f, 1106.18f, 953.72f);
                mPath.cubicTo(1106.7f, 952.64f, 1106.52f, 947.66f, 1106.52f, 946.17f);
                mPath.cubicTo(1106.52f, 946.17f, 1109.52f, 950.37f, 1109.52f, 950.37f);
                mPath.cubicTo(1109.52f, 950.37f, 1112.18f, 944.97f, 1112.18f, 944.97f);
                mPath.cubicTo(1115.25f, 940.69f, 1119.56f, 937.71f, 1119.09f, 931.79f);
                mPath.cubicTo(1119.0f, 930.78f, 1118.92f, 930.1f, 1118.17f, 929.35f);
                mPath.cubicTo(1117.41f, 928.57f, 1115.91f, 928.0f, 1114.92f, 927.57f);
                mPath.cubicTo(1114.92f, 927.57f, 1122.12f, 924.98f, 1122.12f, 924.98f);
                mPath.cubicTo(1122.12f, 924.98f, 1130.51f, 920.61f, 1130.51f, 920.61f);
                mPath.cubicTo(1130.51f, 920.61f, 1134.87f, 919.17f, 1134.87f, 919.17f);
                mPath.cubicTo(1134.87f, 919.17f, 1136.72f, 913.76f, 1136.72f, 913.76f);
                mPath.cubicTo(1136.72f, 913.76f, 1140.64f, 906.56f, 1140.64f, 906.56f);
                mPath.cubicTo(1140.64f, 906.56f, 1140.11f, 899.36f, 1140.11f, 899.36f);
                mPath.cubicTo(1144.86f, 901.35f, 1144.66f, 901.43f, 1149.11f, 898.76f);
                mPath.cubicTo(1149.11f, 898.76f, 1145.51f, 893.36f, 1145.51f, 893.36f);
                mPath.cubicTo(1151.87f, 890.93f, 1150.39f, 888.59f, 1158.11f, 888.56f);
                mPath.cubicTo(1157.95f, 886.57f, 1157.46f, 884.56f, 1157.7f, 882.56f);
                mPath.cubicTo(1157.97f, 880.25f, 1159.27f, 877.41f, 1159.13f, 875.36f);
                mPath.cubicTo(1158.91f, 872.37f, 1156.51f, 870.57f, 1157.01f, 867.56f);
                mPath.cubicTo(1157.99f, 861.58f, 1158.49f, 864.48f, 1155.11f, 858.55f);
                mPath.cubicTo(1155.11f, 858.55f, 1158.71f, 857.35f, 1158.71f, 857.35f);
                mPath.cubicTo(1158.71f, 857.35f, 1153.91f, 856.15f, 1153.91f, 856.15f);
                mPath.cubicTo(1153.91f, 856.15f, 1153.91f, 849.55f, 1153.91f, 849.55f);
                mPath.cubicTo(1158.46f, 851.21f, 1160.14f, 850.76f, 1164.71f, 849.55f);
                mPath.cubicTo(1164.71f, 849.55f, 1162.91f, 855.55f, 1162.91f, 855.55f);
                mPath.cubicTo(1164.9f, 854.06f, 1168.13f, 851.02f, 1168.24f, 848.35f);
                mPath.cubicTo(1168.3f, 846.76f, 1167.1f, 845.24f, 1167.48f, 843.55f);
                mPath.cubicTo(1167.77f, 842.29f, 1169.26f, 840.66f, 1169.95f, 839.35f);
                mPath.cubicTo(1170.83f, 837.66f, 1171.48f, 835.22f, 1171.91f, 833.35f);
                mPath.cubicTo(1171.91f, 833.35f, 1166.51f, 832.15f, 1166.51f, 832.15f);
                mPath.cubicTo(1166.51f, 832.15f, 1172.51f, 832.15f, 1172.51f, 832.15f);
                mPath.cubicTo(1172.51f, 832.15f, 1168.31f, 826.15f, 1168.31f, 826.15f);
                mPath.cubicTo(1165.99f, 826.81f, 1163.75f, 827.82f, 1161.71f, 829.12f);
                mPath.cubicTo(1160.61f, 829.83f, 1158.78f, 831.54f, 1157.51f, 831.53f);
                mPath.cubicTo(1154.25f, 831.48f, 1150.85f, 824.59f, 1149.71f, 821.95f);
                mPath.cubicTo(1146.71f, 824.2f, 1143.59f, 829.02f, 1140.11f, 829.99f);
                mPath.cubicTo(1137.97f, 830.59f, 1131.2f, 829.03f, 1129.87f, 827.18f);
                mPath.cubicTo(1128.8f, 825.69f, 1129.04f, 823.66f, 1127.7f, 821.35f);
                mPath.cubicTo(1126.54f, 819.37f, 1124.51f, 817.75f, 1124.26f, 815.35f);
                mPath.cubicTo(1124.14f, 814.15f, 1124.87f, 810.7f, 1125.12f, 809.35f);
                mPath.cubicTo(1125.12f, 809.35f, 1121.52f, 807.13f, 1121.52f, 807.13f);
                mPath.cubicTo(1120.02f, 806.4f, 1118.94f, 806.35f, 1117.32f, 806.35f);
                mPath.cubicTo(1110.81f, 806.35f, 1114.54f, 810.56f, 1107.72f, 816.46f);
                mPath.cubicTo(1104.72f, 819.06f, 1103.24f, 818.15f, 1101.35f, 819.51f);
                mPath.cubicTo(1101.35f, 819.51f, 1101.35f, 819.51f, 1101.35f, 819.51f);
                mPath.close();
                mPath.moveTo(1101.35f, 819.51f);
                break;
            case 4:
                mPath.moveTo(469.68f, 427.11f);
                mPath.cubicTo(469.68f, 427.11f, 462.22f, 425.28f, 462.22f, 425.28f);
                mPath.cubicTo(462.22f, 425.28f, 460.62f, 437.28f, 460.62f, 437.28f);
                mPath.cubicTo(460.62f, 437.28f, 456.73f, 445.08f, 456.73f, 445.08f);
                mPath.cubicTo(456.73f, 445.08f, 458.52f, 457.68f, 458.52f, 457.68f);
                mPath.cubicTo(458.52f, 457.68f, 457.43f, 467.28f, 457.43f, 467.28f);
                mPath.cubicTo(465.39f, 469.56f, 466.04f, 465.32f, 473.02f, 465.16f);
                mPath.cubicTo(473.02f, 465.16f, 482.02f, 466.9f, 482.02f, 466.9f);
                mPath.cubicTo(484.8f, 467.05f, 486.87f, 465.41f, 489.22f, 465.57f);
                mPath.cubicTo(490.67f, 465.68f, 495.31f, 467.82f, 497.02f, 468.48f);
                mPath.cubicTo(497.02f, 468.48f, 508.42f, 472.34f, 508.42f, 472.34f);
                mPath.cubicTo(512.09f, 473.91f, 516.21f, 476.11f, 519.11f, 478.87f);
                mPath.cubicTo(519.11f, 478.87f, 529.41f, 490.01f, 529.41f, 490.01f);
                mPath.cubicTo(532.96f, 493.12f, 535.89f, 493.09f, 539.01f, 495.28f);
                mPath.cubicTo(543.83f, 498.65f, 542.97f, 500.68f, 550.41f, 502.69f);
                mPath.cubicTo(550.41f, 502.69f, 553.76f, 482.29f, 553.76f, 482.29f);
                mPath.cubicTo(554.41f, 480.63f, 557.21f, 477.28f, 559.06f, 477.08f);
                mPath.cubicTo(560.21f, 476.96f, 563.2f, 478.44f, 564.21f, 479.05f);
                mPath.cubicTo(569.31f, 482.13f, 572.87f, 487.89f, 579.2f, 487.68f);
                mPath.cubicTo(580.8f, 487.62f, 581.68f, 487.54f, 582.84f, 486.31f);
                mPath.cubicTo(583.62f, 485.49f, 584.09f, 484.48f, 584.6f, 483.49f);
                mPath.cubicTo(586.1f, 484.21f, 589.11f, 486.07f, 590.6f, 486.07f);
                mPath.cubicTo(592.29f, 486.08f, 593.46f, 484.83f, 594.8f, 484.5f);
                mPath.cubicTo(596.85f, 484.0f, 599.22f, 485.68f, 600.8f, 486.85f);
                mPath.cubicTo(606.86f, 491.36f, 607.75f, 494.85f, 611.79f, 499.69f);
                mPath.cubicTo(615.45f, 504.07f, 620.18f, 507.63f, 625.4f, 509.89f);
                mPath.cubicTo(625.4f, 509.89f, 627.2f, 503.29f, 627.2f, 503.29f);
                mPath.cubicTo(627.2f, 503.29f, 631.58f, 507.73f, 631.58f, 507.73f);
                mPath.cubicTo(631.58f, 507.73f, 636.56f, 511.32f, 636.56f, 511.32f);
                mPath.cubicTo(636.56f, 511.32f, 640.03f, 515.92f, 640.03f, 515.92f);
                mPath.cubicTo(640.03f, 515.92f, 649.39f, 521.61f, 649.39f, 521.61f);
                mPath.cubicTo(649.39f, 521.61f, 654.19f, 525.64f, 654.19f, 525.64f);
                mPath.cubicTo(654.19f, 525.64f, 660.19f, 529.89f, 660.19f, 529.89f);
                mPath.cubicTo(660.19f, 529.89f, 667.99f, 536.3f, 667.99f, 536.3f);
                mPath.cubicTo(667.99f, 536.3f, 670.99f, 530.9f, 670.99f, 530.9f);
                mPath.cubicTo(672.2f, 538.69f, 674.22f, 537.53f, 677.49f, 540.62f);
                mPath.cubicTo(681.7f, 544.61f, 679.96f, 544.74f, 686.59f, 547.7f);
                mPath.cubicTo(686.59f, 547.7f, 684.16f, 553.1f, 684.16f, 553.1f);
                mPath.cubicTo(684.16f, 553.1f, 687.85f, 559.7f, 687.85f, 559.7f);
                mPath.cubicTo(687.85f, 559.7f, 690.61f, 570.5f, 690.61f, 570.5f);
                mPath.cubicTo(690.61f, 570.5f, 694.16f, 577.1f, 694.16f, 577.1f);
                mPath.cubicTo(694.16f, 577.1f, 693.83f, 583.11f, 693.83f, 583.11f);
                mPath.cubicTo(693.83f, 583.11f, 694.99f, 590.91f, 694.99f, 590.91f);
                mPath.cubicTo(694.99f, 590.91f, 688.99f, 592.11f, 688.99f, 592.11f);
                mPath.cubicTo(689.22f, 593.24f, 689.92f, 595.77f, 689.65f, 596.78f);
                mPath.cubicTo(688.9f, 599.63f, 680.86f, 601.18f, 679.45f, 603.74f);
                mPath.cubicTo(678.43f, 605.61f, 680.26f, 607.43f, 678.87f, 611.31f);
                mPath.cubicTo(677.13f, 616.12f, 673.97f, 616.54f, 671.82f, 618.74f);
                mPath.cubicTo(668.34f, 622.3f, 670.19f, 625.24f, 663.79f, 626.31f);
                mPath.cubicTo(667.05f, 628.14f, 672.79f, 632.15f, 674.03f, 635.81f);
                mPath.cubicTo(674.58f, 637.46f, 673.21f, 638.47f, 672.17f, 639.54f);
                mPath.cubicTo(669.96f, 641.81f, 667.74f, 644.63f, 664.39f, 644.88f);
                mPath.cubicTo(660.17f, 645.19f, 657.3f, 642.83f, 653.59f, 641.24f);
                mPath.cubicTo(648.15f, 638.9f, 645.63f, 638.32f, 639.8f, 638.32f);
                mPath.cubicTo(639.84f, 640.3f, 640.2f, 644.3f, 640.81f, 646.12f);
                mPath.cubicTo(642.26f, 650.41f, 648.19f, 657.21f, 652.39f, 658.94f);
                mPath.cubicTo(653.65f, 659.27f, 654.15f, 659.1f, 655.39f, 658.94f);
                mPath.cubicTo(658.85f, 659.06f, 659.55f, 660.65f, 661.99f, 662.82f);
                mPath.cubicTo(666.54f, 666.85f, 667.67f, 666.22f, 667.99f, 673.12f);
                mPath.cubicTo(667.99f, 673.12f, 673.14f, 672.78f, 673.14f, 672.78f);
                mPath.cubicTo(673.14f, 672.78f, 675.38f, 669.52f, 675.38f, 669.52f);
                mPath.cubicTo(675.38f, 669.52f, 678.68f, 662.32f, 678.68f, 662.32f);
                mPath.cubicTo(678.68f, 662.32f, 673.39f, 650.32f, 673.39f, 650.32f);
                mPath.cubicTo(673.39f, 650.32f, 679.99f, 645.97f, 679.99f, 645.97f);
                mPath.cubicTo(684.56f, 643.45f, 686.31f, 645.14f, 690.79f, 638.92f);
                mPath.cubicTo(692.23f, 640.6f, 698.19f, 648.13f, 699.0f, 649.72f);
                mPath.cubicTo(700.3f, 652.24f, 699.73f, 654.79f, 701.32f, 656.34f);
                mPath.cubicTo(703.38f, 658.35f, 710.62f, 660.26f, 713.58f, 660.47f);
                mPath.cubicTo(715.57f, 660.6f, 717.72f, 660.28f, 719.58f, 661.08f);
                mPath.cubicTo(725.04f, 663.44f, 727.28f, 670.36f, 729.21f, 675.52f);
                mPath.cubicTo(729.79f, 677.07f, 731.15f, 679.88f, 730.66f, 681.47f);
                mPath.cubicTo(730.24f, 682.83f, 728.43f, 684.19f, 727.38f, 685.12f);
                mPath.cubicTo(731.81f, 690.48f, 745.1f, 696.53f, 751.97f, 693.27f);
                mPath.cubicTo(755.47f, 691.6f, 756.58f, 687.25f, 759.28f, 685.74f);
                mPath.cubicTo(761.45f, 684.52f, 766.13f, 686.13f, 768.77f, 681.47f);
                mPath.cubicTo(769.7f, 679.82f, 770.14f, 676.13f, 769.54f, 674.32f);
                mPath.cubicTo(769.06f, 672.9f, 767.89f, 671.6f, 767.79f, 670.12f);
                mPath.cubicTo(767.68f, 668.57f, 769.85f, 664.59f, 770.57f, 662.92f);
                mPath.cubicTo(776.13f, 664.95f, 780.44f, 662.93f, 786.17f, 662.92f);
                mPath.cubicTo(786.17f, 662.92f, 783.46f, 656.32f, 783.46f, 656.32f);
                mPath.cubicTo(783.46f, 656.32f, 783.77f, 650.32f, 783.77f, 650.32f);
                mPath.cubicTo(783.77f, 650.32f, 784.38f, 643.17f, 784.38f, 643.17f);
                mPath.cubicTo(784.38f, 643.17f, 789.77f, 638.32f, 789.77f, 638.32f);
                mPath.cubicTo(787.0f, 635.18f, 783.61f, 632.87f, 779.57f, 631.71f);
                mPath.cubicTo(781.82f, 628.54f, 784.34f, 626.25f, 784.84f, 622.11f);
                mPath.cubicTo(784.84f, 622.11f, 784.37f, 615.51f, 784.37f, 615.51f);
                mPath.cubicTo(784.37f, 615.51f, 789.17f, 615.02f, 789.17f, 615.02f);
                mPath.cubicTo(795.68f, 614.56f, 796.6f, 618.09f, 799.97f, 618.93f);
                mPath.cubicTo(803.62f, 619.83f, 813.01f, 618.74f, 814.61f, 614.73f);
                mPath.cubicTo(815.27f, 613.09f, 814.28f, 609.39f, 813.77f, 607.73f);
                mPath.cubicTo(822.06f, 609.38f, 817.74f, 608.56f, 825.16f, 607.73f);
                mPath.cubicTo(825.16f, 607.73f, 829.96f, 607.73f, 829.96f, 607.73f);
                mPath.cubicTo(832.11f, 607.59f, 834.97f, 607.47f, 835.94f, 605.23f);
                mPath.cubicTo(838.73f, 598.82f, 834.15f, 594.29f, 834.83f, 587.91f);
                mPath.cubicTo(835.18f, 584.62f, 836.78f, 583.59f, 837.53f, 581.3f);
                mPath.cubicTo(838.12f, 579.49f, 837.16f, 574.71f, 836.17f, 573.08f);
                mPath.cubicTo(835.23f, 571.5f, 833.29f, 571.72f, 831.76f, 571.03f);
                mPath.cubicTo(831.76f, 571.03f, 826.96f, 568.23f, 826.96f, 568.23f);
                mPath.cubicTo(826.96f, 568.23f, 822.79f, 566.97f, 822.79f, 566.97f);
                mPath.cubicTo(819.48f, 565.55f, 819.51f, 562.49f, 817.14f, 561.19f);
                mPath.cubicTo(815.99f, 560.57f, 809.32f, 559.65f, 806.14f, 557.0f);
                mPath.cubicTo(803.15f, 554.51f, 801.73f, 549.88f, 795.17f, 549.52f);
                mPath.cubicTo(790.43f, 549.27f, 787.73f, 551.19f, 786.9f, 556.1f);
                mPath.cubicTo(786.6f, 557.92f, 787.02f, 560.41f, 786.42f, 562.08f);
                mPath.cubicTo(785.83f, 563.67f, 784.68f, 564.38f, 784.07f, 565.8f);
                mPath.cubicTo(783.61f, 567.14f, 783.68f, 571.47f, 784.07f, 572.9f);
                mPath.cubicTo(785.07f, 577.54f, 788.47f, 577.35f, 790.84f, 579.29f);
                mPath.cubicTo(794.9f, 582.61f, 795.92f, 588.05f, 792.09f, 591.93f);
                mPath.cubicTo(791.35f, 592.68f, 789.48f, 594.17f, 788.57f, 594.69f);
                mPath.cubicTo(786.51f, 595.88f, 784.85f, 595.7f, 782.57f, 595.71f);
                mPath.cubicTo(782.57f, 595.71f, 783.05f, 602.31f, 783.05f, 602.31f);
                mPath.cubicTo(783.05f, 602.31f, 781.37f, 609.51f, 781.37f, 609.51f);
                mPath.cubicTo(776.02f, 604.18f, 776.57f, 604.71f, 769.37f, 604.71f);
                mPath.cubicTo(769.37f, 604.71f, 772.37f, 602.31f, 772.37f, 602.31f);
                mPath.cubicTo(767.3f, 599.88f, 757.44f, 595.74f, 755.21f, 590.31f);
                mPath.cubicTo(754.14f, 587.68f, 755.88f, 586.08f, 756.12f, 582.51f);
                mPath.cubicTo(756.25f, 580.58f, 755.65f, 575.86f, 754.93f, 574.1f);
                mPath.cubicTo(754.22f, 572.36f, 752.7f, 570.5f, 752.41f, 568.7f);
                mPath.cubicTo(751.87f, 566.46f, 753.17f, 564.19f, 752.41f, 561.5f);
                mPath.cubicTo(751.13f, 556.06f, 748.35f, 554.72f, 744.96f, 551.2f);
                mPath.cubicTo(743.67f, 549.87f, 742.76f, 548.24f, 741.08f, 547.36f);
                mPath.cubicTo(741.08f, 547.36f, 735.78f, 545.9f, 735.78f, 545.9f);
                mPath.cubicTo(735.78f, 545.9f, 738.78f, 541.7f, 738.78f, 541.7f);
                mPath.cubicTo(732.76f, 541.64f, 724.59f, 539.15f, 719.59f, 535.81f);
                mPath.cubicTo(716.73f, 533.89f, 715.02f, 530.45f, 712.81f, 529.08f);
                mPath.cubicTo(711.23f, 528.1f, 708.81f, 527.98f, 706.98f, 527.9f);
                mPath.cubicTo(705.9f, 519.7f, 704.82f, 519.6f, 710.58f, 517.09f);
                mPath.cubicTo(710.58f, 517.09f, 709.85f, 511.69f, 709.85f, 511.69f);
                mPath.cubicTo(709.85f, 511.69f, 717.65f, 502.69f, 717.65f, 502.69f);
                mPath.cubicTo(717.65f, 502.69f, 722.29f, 493.69f, 722.29f, 493.69f);
                mPath.cubicTo(722.29f, 493.69f, 725.68f, 487.69f, 725.68f, 487.69f);
                mPath.cubicTo(725.68f, 487.69f, 721.38f, 476.29f, 721.38f, 476.29f);
                mPath.cubicTo(718.34f, 476.43f, 709.47f, 478.29f, 706.98f, 479.8f);
                mPath.cubicTo(704.34f, 481.4f, 700.93f, 485.9f, 697.99f, 486.53f);
                mPath.cubicTo(695.89f, 486.98f, 691.91f, 484.78f, 689.59f, 484.32f);
                mPath.cubicTo(687.9f, 483.98f, 679.86f, 483.97f, 678.19f, 484.32f);
                mPath.cubicTo(676.85f, 484.6f, 675.27f, 485.35f, 673.99f, 485.89f);
                mPath.cubicTo(674.45f, 487.26f, 675.72f, 490.59f, 675.57f, 491.89f);
                mPath.cubicTo(675.4f, 493.39f, 674.36f, 494.44f, 673.37f, 495.49f);
                mPath.cubicTo(672.29f, 496.63f, 670.7f, 498.21f, 669.19f, 498.72f);
                mPath.cubicTo(665.84f, 499.87f, 660.41f, 496.54f, 657.79f, 494.67f);
                mPath.cubicTo(654.21f, 492.11f, 648.58f, 489.44f, 646.75f, 485.29f);
                mPath.cubicTo(645.57f, 482.6f, 647.34f, 480.09f, 646.33f, 478.39f);
                mPath.cubicTo(645.71f, 477.34f, 643.86f, 476.74f, 642.79f, 476.21f);
                mPath.cubicTo(641.12f, 475.38f, 637.71f, 473.21f, 636.26f, 472.06f);
                mPath.cubicTo(633.22f, 469.66f, 633.69f, 468.0f, 632.18f, 466.26f);
                mPath.cubicTo(630.77f, 464.64f, 629.34f, 464.89f, 627.2f, 463.38f);
                mPath.cubicTo(625.39f, 462.09f, 623.63f, 459.81f, 621.8f, 458.9f);
                mPath.cubicTo(620.03f, 458.01f, 616.08f, 458.28f, 614.0f, 458.28f);
                mPath.cubicTo(615.49f, 456.26f, 617.43f, 453.55f, 619.42f, 452.06f);
                mPath.cubicTo(621.91f, 450.19f, 623.93f, 450.16f, 626.13f, 447.42f);
                mPath.cubicTo(626.13f, 447.42f, 630.8f, 440.28f, 630.8f, 440.28f);
                mPath.cubicTo(631.48f, 439.22f, 632.39f, 437.92f, 632.67f, 436.68f);
                mPath.cubicTo(633.08f, 434.89f, 631.82f, 430.02f, 630.46f, 428.78f);
                mPath.cubicTo(629.45f, 427.86f, 625.66f, 426.75f, 624.2f, 426.28f);
                mPath.cubicTo(623.02f, 425.9f, 621.85f, 425.51f, 620.6f, 425.44f);
                mPath.cubicTo(617.49f, 425.28f, 605.25f, 428.28f, 602.63f, 429.98f);
                mPath.cubicTo(600.18f, 431.57f, 598.43f, 434.93f, 596.43f, 436.07f);
                mPath.cubicTo(595.13f, 436.81f, 593.27f, 436.68f, 591.8f, 436.68f);
                mPath.cubicTo(591.8f, 436.68f, 587.0f, 436.68f, 587.0f, 436.68f);
                mPath.cubicTo(587.83f, 434.8f, 590.41f, 428.26f, 590.05f, 426.48f);
                mPath.cubicTo(589.73f, 424.85f, 587.75f, 422.97f, 586.67f, 421.68f);
                mPath.cubicTo(586.67f, 421.68f, 579.73f, 413.28f, 579.73f, 413.28f);
                mPath.cubicTo(578.66f, 412.03f, 576.79f, 410.13f, 576.55f, 408.47f);
                mPath.cubicTo(576.13f, 405.67f, 580.03f, 402.34f, 579.58f, 398.27f);
                mPath.cubicTo(579.58f, 398.27f, 572.41f, 376.67f, 572.41f, 376.67f);
                mPath.cubicTo(572.41f, 376.67f, 568.07f, 364.24f, 568.07f, 364.24f);
                mPath.cubicTo(566.93f, 362.52f, 564.84f, 362.87f, 563.01f, 362.87f);
                mPath.cubicTo(557.04f, 362.85f, 548.84f, 361.76f, 543.99f, 365.84f);
                mPath.cubicTo(541.69f, 367.78f, 541.59f, 373.21f, 541.36f, 376.07f);
                mPath.cubicTo(540.87f, 382.18f, 540.58f, 385.86f, 534.81f, 389.57f);
                mPath.cubicTo(531.3f, 391.73f, 526.08f, 389.44f, 522.21f, 389.57f);
                mPath.cubicTo(516.36f, 389.9f, 507.33f, 393.86f, 503.02f, 397.73f);
                mPath.cubicTo(503.02f, 397.73f, 486.24f, 413.28f, 486.24f, 413.28f);
                mPath.cubicTo(479.92f, 419.93f, 482.0f, 423.37f, 474.22f, 426.15f);
                mPath.cubicTo(473.03f, 426.57f, 470.93f, 427.14f, 469.68f, 427.11f);
                mPath.cubicTo(469.68f, 427.11f, 469.68f, 427.11f, 469.68f, 427.11f);
                mPath.close();
                mPath.moveTo(469.68f, 427.11f);
                break;
            case 5:
                mPath.moveTo(975.74f, 914.02f);
                mPath.cubicTo(973.77f, 915.29f, 971.42f, 915.46f, 969.14f, 915.56f);
                mPath.cubicTo(972.31f, 922.07f, 973.45f, 920.67f, 974.54f, 928.77f);
                mPath.cubicTo(972.46f, 928.77f, 968.07f, 929.2f, 966.53f, 927.81f);
                mPath.cubicTo(965.03f, 926.45f, 965.06f, 924.03f, 963.01f, 923.13f);
                mPath.cubicTo(961.62f, 922.51f, 952.69f, 922.77f, 950.54f, 922.77f);
                mPath.cubicTo(950.54f, 924.96f, 950.76f, 928.59f, 950.06f, 930.57f);
                mPath.cubicTo(949.33f, 932.6f, 947.6f, 934.46f, 947.29f, 936.57f);
                mPath.cubicTo(947.29f, 936.57f, 947.86f, 944.97f, 947.86f, 944.97f);
                mPath.cubicTo(947.5f, 947.36f, 945.46f, 949.84f, 945.06f, 952.17f);
                mPath.cubicTo(944.73f, 954.58f, 946.07f, 956.35f, 945.06f, 958.77f);
                mPath.cubicTo(943.56f, 962.16f, 939.8f, 964.22f, 938.38f, 966.15f);
                mPath.cubicTo(937.15f, 967.83f, 937.32f, 969.6f, 936.49f, 971.37f);
                mPath.cubicTo(935.35f, 973.82f, 933.29f, 975.02f, 932.13f, 977.38f);
                mPath.cubicTo(929.88f, 981.97f, 932.13f, 986.06f, 932.63f, 990.58f);
                mPath.cubicTo(932.97f, 993.71f, 931.04f, 995.66f, 928.92f, 997.72f);
                mPath.cubicTo(925.4f, 1001.16f, 916.09f, 1006.26f, 914.62f, 1009.78f);
                mPath.cubicTo(913.82f, 1011.7f, 915.22f, 1014.41f, 915.75f, 1016.38f);
                mPath.cubicTo(915.75f, 1016.38f, 907.35f, 1020.07f, 907.35f, 1020.07f);
                mPath.cubicTo(907.35f, 1020.07f, 903.49f, 1022.62f, 903.49f, 1022.62f);
                mPath.cubicTo(903.49f, 1022.62f, 903.15f, 1028.98f, 903.15f, 1028.98f);
                mPath.cubicTo(901.45f, 1028.98f, 897.37f, 1028.82f, 895.95f, 1029.34f);
                mPath.cubicTo(893.25f, 1030.35f, 889.16f, 1036.18f, 886.95f, 1038.59f);
                mPath.cubicTo(886.95f, 1038.59f, 892.35f, 1046.39f, 892.35f, 1046.39f);
                mPath.cubicTo(892.35f, 1046.39f, 888.15f, 1046.99f, 888.15f, 1046.99f);
                mPath.cubicTo(888.15f, 1046.99f, 886.31f, 1054.19f, 886.31f, 1054.19f);
                mPath.cubicTo(886.02f, 1056.7f, 887.42f, 1059.58f, 888.13f, 1061.99f);
                mPath.cubicTo(888.13f, 1061.99f, 889.81f, 1067.99f, 889.81f, 1067.99f);
                mPath.cubicTo(890.79f, 1070.1f, 895.32f, 1076.0f, 897.18f, 1077.23f);
                mPath.cubicTo(898.68f, 1078.24f, 903.17f, 1078.97f, 904.95f, 1078.61f);
                mPath.cubicTo(909.52f, 1077.68f, 911.19f, 1072.28f, 909.75f, 1070.17f);
                mPath.cubicTo(908.89f, 1068.91f, 905.23f, 1067.43f, 903.75f, 1066.79f);
                mPath.cubicTo(903.75f, 1066.79f, 904.95f, 1060.79f, 904.95f, 1060.79f);
                mPath.cubicTo(898.54f, 1058.22f, 899.87f, 1058.54f, 900.15f, 1052.39f);
                mPath.cubicTo(904.47f, 1056.55f, 904.64f, 1055.99f, 910.35f, 1055.99f);
                mPath.cubicTo(910.35f, 1055.99f, 906.76f, 1049.99f, 906.76f, 1049.99f);
                mPath.cubicTo(906.76f, 1049.99f, 907.35f, 1043.39f, 907.35f, 1043.39f);
                mPath.cubicTo(907.35f, 1043.39f, 907.95f, 1048.79f, 907.95f, 1048.79f);
                mPath.cubicTo(907.95f, 1048.79f, 922.95f, 1041.62f, 922.95f, 1041.62f);
                mPath.cubicTo(922.95f, 1041.62f, 934.95f, 1038.63f, 934.95f, 1038.63f);
                mPath.cubicTo(934.95f, 1038.63f, 946.34f, 1034.39f, 946.34f, 1034.39f);
                mPath.cubicTo(946.34f, 1034.39f, 943.35f, 1029.58f, 943.35f, 1029.58f);
                mPath.cubicTo(943.35f, 1029.58f, 948.14f, 1029.58f, 948.14f, 1029.58f);
                mPath.cubicTo(948.14f, 1029.58f, 948.14f, 1034.39f, 948.14f, 1034.39f);
                mPath.cubicTo(950.26f, 1032.54f, 953.78f, 1028.07f, 956.54f, 1027.89f);
                mPath.cubicTo(957.87f, 1027.8f, 960.62f, 1029.06f, 961.94f, 1029.58f);
                mPath.cubicTo(961.94f, 1029.58f, 964.94f, 1023.58f, 964.94f, 1023.58f);
                mPath.cubicTo(964.94f, 1023.58f, 972.14f, 1027.18f, 972.14f, 1027.18f);
                mPath.cubicTo(972.14f, 1027.18f, 975.14f, 1021.18f, 975.14f, 1021.18f);
                mPath.cubicTo(975.14f, 1021.18f, 981.14f, 1022.38f, 981.14f, 1022.38f);
                mPath.cubicTo(981.14f, 1022.38f, 982.34f, 1014.58f, 982.34f, 1014.58f);
                mPath.cubicTo(982.34f, 1014.58f, 988.34f, 1018.78f, 988.34f, 1018.78f);
                mPath.cubicTo(991.19f, 1014.42f, 991.43f, 1013.03f, 996.74f, 1011.58f);
                mPath.cubicTo(996.74f, 1011.58f, 996.16f, 1003.78f, 996.16f, 1003.78f);
                mPath.cubicTo(996.16f, 1003.78f, 996.16f, 994.78f, 996.16f, 994.78f);
                mPath.cubicTo(996.16f, 994.78f, 1002.14f, 993.58f, 1002.14f, 993.58f);
                mPath.cubicTo(1002.87f, 995.11f, 1004.03f, 997.57f, 1005.36f, 998.62f);
                mPath.cubicTo(1008.53f, 1001.11f, 1016.49f, 997.03f, 1020.13f, 996.61f);
                mPath.cubicTo(1022.41f, 996.36f, 1024.55f, 997.27f, 1026.73f, 997.78f);
                mPath.cubicTo(1026.73f, 997.78f, 1024.93f, 992.38f, 1024.93f, 992.38f);
                mPath.cubicTo(1024.93f, 992.38f, 1030.16f, 991.89f, 1030.16f, 991.89f);
                mPath.cubicTo(1030.16f, 991.89f, 1035.73f, 995.98f, 1035.73f, 995.98f);
                mPath.cubicTo(1036.37f, 994.64f, 1037.14f, 993.01f, 1038.07f, 991.86f);
                mPath.cubicTo(1041.58f, 987.54f, 1049.58f, 990.37f, 1051.8f, 989.79f);
                mPath.cubicTo(1054.14f, 989.19f, 1053.84f, 986.74f, 1056.75f, 985.96f);
                mPath.cubicTo(1056.75f, 985.96f, 1065.73f, 985.65f, 1065.73f, 985.65f);
                mPath.cubicTo(1068.02f, 985.3f, 1070.42f, 983.93f, 1072.32f, 982.64f);
                mPath.cubicTo(1072.32f, 982.64f, 1081.58f, 976.8f, 1081.58f, 976.8f);
                mPath.cubicTo(1084.09f, 974.22f, 1080.27f, 970.7f, 1086.72f, 970.17f);
                mPath.cubicTo(1085.37f, 968.07f, 1083.55f, 967.53f, 1081.32f, 966.57f);
                mPath.cubicTo(1081.32f, 966.57f, 1087.13f, 965.36f, 1087.13f, 965.36f);
                mPath.cubicTo(1087.13f, 965.36f, 1091.63f, 960.13f, 1091.63f, 960.13f);
                mPath.cubicTo(1091.63f, 960.13f, 1098.12f, 956.97f, 1098.12f, 956.97f);
                mPath.cubicTo(1098.12f, 956.97f, 1091.79f, 948.57f, 1091.79f, 948.57f);
                mPath.cubicTo(1091.79f, 948.57f, 1088.07f, 937.77f, 1088.07f, 937.77f);
                mPath.cubicTo(1088.07f, 937.77f, 1085.04f, 932.97f, 1085.04f, 932.97f);
                mPath.cubicTo(1085.04f, 932.97f, 1082.64f, 928.53f, 1082.64f, 928.53f);
                mPath.cubicTo(1082.64f, 928.53f, 1075.92f, 927.9f, 1075.92f, 927.9f);
                mPath.cubicTo(1075.92f, 927.9f, 1067.53f, 922.65f, 1067.53f, 922.65f);
                mPath.cubicTo(1067.53f, 922.65f, 1056.13f, 920.37f, 1056.13f, 920.37f);
                mPath.cubicTo(1053.46f, 926.71f, 1054.69f, 925.47f, 1056.13f, 931.77f);
                mPath.cubicTo(1048.39f, 931.13f, 1048.02f, 928.33f, 1044.73f, 927.93f);
                mPath.cubicTo(1044.73f, 927.93f, 1033.94f, 930.48f, 1033.94f, 930.48f);
                mPath.cubicTo(1030.37f, 931.52f, 1030.55f, 933.47f, 1028.35f, 934.76f);
                mPath.cubicTo(1026.44f, 935.87f, 1024.77f, 934.8f, 1021.33f, 936.18f);
                mPath.cubicTo(1019.82f, 936.78f, 1017.56f, 938.33f, 1015.93f, 937.97f);
                mPath.cubicTo(1012.26f, 937.18f, 1011.01f, 933.12f, 1011.91f, 929.97f);
                mPath.cubicTo(1013.52f, 924.36f, 1017.77f, 920.84f, 1022.53f, 917.96f);
                mPath.cubicTo(1022.32f, 916.85f, 1021.98f, 914.8f, 1021.51f, 913.83f);
                mPath.cubicTo(1020.9f, 912.54f, 1020.17f, 912.0f, 1018.91f, 911.4f);
                mPath.cubicTo(1013.77f, 908.95f, 1010.88f, 913.26f, 1006.34f, 913.12f);
                mPath.cubicTo(1004.12f, 913.04f, 1002.06f, 911.42f, 1000.34f, 910.16f);
                mPath.cubicTo(998.68f, 911.53f, 996.78f, 913.93f, 994.94f, 914.6f);
                mPath.cubicTo(992.52f, 915.49f, 987.6f, 914.13f, 985.34f, 913.06f);
                mPath.cubicTo(984.06f, 912.44f, 981.88f, 910.88f, 980.54f, 910.94f);
                mPath.cubicTo(978.76f, 911.02f, 977.23f, 913.05f, 975.74f, 914.02f);
                mPath.cubicTo(975.74f, 914.02f, 975.74f, 914.02f, 975.74f, 914.02f);
                mPath.close();
                mPath.moveTo(975.74f, 914.02f);
                break;
            case 6:
                mPath.moveTo(877.36f, 902.96f);
                mPath.cubicTo(876.05f, 903.02f, 873.19f, 900.74f, 871.96f, 899.96f);
                mPath.cubicTo(871.96f, 899.96f, 868.96f, 910.16f, 868.96f, 910.16f);
                mPath.cubicTo(867.1f, 910.16f, 862.92f, 909.87f, 861.42f, 910.76f);
                mPath.cubicTo(859.68f, 911.79f, 858.57f, 914.3f, 856.34f, 915.58f);
                mPath.cubicTo(856.34f, 915.58f, 846.16f, 918.77f, 846.16f, 918.77f);
                mPath.cubicTo(842.68f, 919.67f, 840.05f, 917.25f, 836.74f, 920.33f);
                mPath.cubicTo(834.85f, 922.08f, 835.36f, 925.2f, 835.36f, 927.57f);
                mPath.cubicTo(835.36f, 927.57f, 828.87f, 929.23f, 828.87f, 929.23f);
                mPath.cubicTo(827.13f, 929.51f, 817.89f, 926.2f, 816.29f, 925.12f);
                mPath.cubicTo(812.84f, 922.78f, 812.78f, 917.93f, 807.17f, 917.68f);
                mPath.cubicTo(805.96f, 917.62f, 805.13f, 917.99f, 804.2f, 918.76f);
                mPath.cubicTo(799.96f, 922.23f, 804.28f, 925.17f, 801.56f, 927.57f);
                mPath.cubicTo(800.65f, 928.38f, 797.07f, 929.69f, 795.77f, 930.21f);
                mPath.cubicTo(795.77f, 930.21f, 786.17f, 934.35f, 786.17f, 934.35f);
                mPath.cubicTo(784.55f, 934.94f, 780.51f, 935.73f, 779.57f, 936.99f);
                mPath.cubicTo(778.7f, 938.15f, 778.97f, 942.22f, 778.97f, 943.77f);
                mPath.cubicTo(774.34f, 943.77f, 765.87f, 942.89f, 761.58f, 941.36f);
                mPath.cubicTo(759.14f, 940.5f, 758.2f, 939.27f, 756.18f, 938.27f);
                mPath.cubicTo(754.48f, 937.44f, 752.06f, 937.07f, 750.18f, 936.57f);
                mPath.cubicTo(749.44f, 937.98f, 748.34f, 940.68f, 747.39f, 941.73f);
                mPath.cubicTo(746.07f, 943.22f, 740.14f, 946.31f, 738.18f, 946.15f);
                mPath.cubicTo(736.83f, 946.04f, 734.16f, 944.43f, 732.78f, 943.77f);
                mPath.cubicTo(732.78f, 943.77f, 733.39f, 950.62f, 733.39f, 950.62f);
                mPath.cubicTo(733.39f, 950.62f, 738.18f, 952.29f, 738.18f, 952.29f);
                mPath.cubicTo(738.18f, 952.29f, 750.18f, 954.57f, 750.18f, 954.57f);
                mPath.cubicTo(750.3f, 956.15f, 750.64f, 959.66f, 751.48f, 960.94f);
                mPath.cubicTo(752.8f, 962.95f, 756.91f, 963.75f, 759.18f, 964.09f);
                mPath.cubicTo(759.18f, 964.09f, 763.97f, 964.72f, 763.97f, 964.72f);
                mPath.cubicTo(766.5f, 964.89f, 773.57f, 964.47f, 775.37f, 965.13f);
                mPath.cubicTo(776.73f, 965.63f, 777.93f, 966.73f, 778.92f, 967.76f);
                mPath.cubicTo(779.65f, 968.52f, 780.45f, 969.35f, 780.65f, 970.43f);
                mPath.cubicTo(781.0f, 972.44f, 778.07f, 980.65f, 774.72f, 981.99f);
                mPath.cubicTo(773.32f, 982.55f, 770.87f, 981.86f, 769.37f, 981.58f);
                mPath.cubicTo(769.37f, 981.58f, 761.58f, 991.78f, 761.58f, 991.78f);
                mPath.cubicTo(763.65f, 993.16f, 771.25f, 998.73f, 772.97f, 999.08f);
                mPath.cubicTo(772.97f, 999.08f, 779.57f, 998.62f, 779.57f, 998.62f);
                mPath.cubicTo(779.57f, 998.62f, 787.97f, 1000.73f, 787.97f, 1000.73f);
                mPath.cubicTo(789.93f, 1000.88f, 793.27f, 1000.34f, 794.75f, 1001.74f);
                mPath.cubicTo(795.98f, 1002.9f, 797.27f, 1006.66f, 796.43f, 1008.23f);
                mPath.cubicTo(795.61f, 1009.79f, 793.31f, 1010.99f, 793.32f, 1013.38f);
                mPath.cubicTo(793.32f, 1013.38f, 795.0f, 1018.78f, 795.0f, 1018.78f);
                mPath.cubicTo(795.96f, 1022.33f, 796.36f, 1025.32f, 796.37f, 1029.02f);
                mPath.cubicTo(797.94f, 1028.91f, 800.39f, 1028.46f, 801.77f, 1029.02f);
                mPath.cubicTo(804.13f, 1030.06f, 807.55f, 1034.91f, 811.37f, 1036.92f);
                mPath.cubicTo(813.05f, 1037.81f, 822.55f, 1039.59f, 824.56f, 1039.58f);
                mPath.cubicTo(824.56f, 1039.58f, 828.76f, 1039.09f, 828.76f, 1039.09f);
                mPath.cubicTo(831.61f, 1039.16f, 834.5f, 1041.42f, 837.16f, 1041.77f);
                mPath.cubicTo(841.0f, 1042.26f, 846.57f, 1039.55f, 848.37f, 1036.13f);
                mPath.cubicTo(849.11f, 1034.73f, 849.54f, 1031.26f, 849.76f, 1029.58f);
                mPath.cubicTo(854.19f, 1034.73f, 853.52f, 1034.61f, 859.96f, 1037.39f);
                mPath.cubicTo(859.96f, 1037.39f, 858.76f, 1031.98f, 858.76f, 1031.98f);
                mPath.cubicTo(858.76f, 1031.98f, 863.56f, 1038.59f, 863.56f, 1038.59f);
                mPath.cubicTo(863.56f, 1038.59f, 868.36f, 1037.39f, 868.36f, 1037.39f);
                mPath.cubicTo(868.36f, 1037.39f, 869.56f, 1044.59f, 869.56f, 1044.59f);
                mPath.cubicTo(872.37f, 1043.84f, 877.42f, 1043.19f, 879.2f, 1040.75f);
                mPath.cubicTo(880.12f, 1039.48f, 880.52f, 1036.1f, 880.96f, 1034.39f);
                mPath.cubicTo(880.96f, 1034.39f, 886.35f, 1038.59f, 886.35f, 1038.59f);
                mPath.cubicTo(886.35f, 1038.59f, 895.95f, 1029.0f, 895.95f, 1029.0f);
                mPath.cubicTo(895.95f, 1029.0f, 902.55f, 1028.38f, 902.55f, 1028.38f);
                mPath.cubicTo(902.55f, 1028.38f, 903.16f, 1022.51f, 903.16f, 1022.51f);
                mPath.cubicTo(903.16f, 1022.51f, 915.15f, 1015.78f, 915.15f, 1015.78f);
                mPath.cubicTo(914.83f, 1014.57f, 913.87f, 1012.08f, 914.02f, 1010.98f);
                mPath.cubicTo(914.29f, 1009.12f, 916.78f, 1006.89f, 918.15f, 1005.69f);
                mPath.cubicTo(922.35f, 1002.0f, 928.19f, 999.82f, 931.43f, 994.78f);
                mPath.cubicTo(934.26f, 990.06f, 928.67f, 983.8f, 931.43f, 977.98f);
                mPath.cubicTo(932.6f, 975.81f, 934.45f, 974.57f, 935.59f, 972.57f);
                mPath.cubicTo(936.9f, 970.27f, 936.34f, 968.37f, 938.2f, 966.08f);
                mPath.cubicTo(939.74f, 964.19f, 943.02f, 962.4f, 944.45f, 959.37f);
                mPath.cubicTo(946.12f, 955.81f, 943.29f, 954.64f, 945.31f, 950.32f);
                mPath.cubicTo(946.03f, 948.77f, 946.97f, 947.27f, 947.3f, 945.57f);
                mPath.cubicTo(947.8f, 942.97f, 947.33f, 937.28f, 944.48f, 936.28f);
                mPath.cubicTo(940.54f, 934.91f, 939.3f, 937.01f, 936.15f, 938.56f);
                mPath.cubicTo(934.36f, 939.44f, 932.11f, 939.8f, 930.15f, 940.17f);
                mPath.cubicTo(930.15f, 940.17f, 928.95f, 926.37f, 928.95f, 926.37f);
                mPath.cubicTo(919.57f, 929.49f, 923.87f, 928.2f, 916.35f, 932.97f);
                mPath.cubicTo(916.35f, 932.97f, 916.86f, 925.17f, 916.86f, 925.17f);
                mPath.cubicTo(916.86f, 925.17f, 924.05f, 914.96f, 924.05f, 914.96f);
                mPath.cubicTo(924.05f, 914.96f, 925.01f, 908.36f, 925.01f, 908.36f);
                mPath.cubicTo(925.01f, 908.36f, 928.35f, 902.33f, 928.35f, 902.33f);
                mPath.cubicTo(927.12f, 902.51f, 925.41f, 902.88f, 924.28f, 902.33f);
                mPath.cubicTo(921.24f, 900.72f, 920.52f, 892.34f, 919.95f, 889.16f);
                mPath.cubicTo(911.41f, 889.17f, 912.69f, 890.88f, 908.55f, 891.45f);
                mPath.cubicTo(906.51f, 891.52f, 904.55f, 890.56f, 902.61f, 891.45f);
                mPath.cubicTo(899.42f, 893.25f, 898.62f, 897.72f, 893.01f, 899.02f);
                mPath.cubicTo(889.67f, 899.79f, 888.47f, 895.93f, 885.81f, 896.31f);
                mPath.cubicTo(883.49f, 896.63f, 880.13f, 902.83f, 877.36f, 902.96f);
                mPath.cubicTo(877.36f, 902.96f, 877.36f, 902.96f, 877.36f, 902.96f);
                mPath.close();
                mPath.moveTo(877.36f, 902.96f);
                break;
            case 7:
                mPath.moveTo(817.97f, 803.3f);
                mPath.cubicTo(817.97f, 803.3f, 811.97f, 802.74f, 811.97f, 802.74f);
                mPath.cubicTo(811.97f, 802.74f, 810.17f, 814.15f, 810.17f, 814.15f);
                mPath.cubicTo(808.15f, 813.78f, 805.26f, 812.56f, 803.57f, 812.68f);
                mPath.cubicTo(797.62f, 813.13f, 798.1f, 816.59f, 795.97f, 820.75f);
                mPath.cubicTo(795.97f, 820.75f, 792.77f, 826.15f, 792.77f, 826.15f);
                mPath.cubicTo(792.77f, 826.15f, 787.97f, 819.55f, 787.97f, 819.55f);
                mPath.cubicTo(786.81f, 820.37f, 784.38f, 822.51f, 783.17f, 822.72f);
                mPath.cubicTo(780.65f, 823.14f, 776.87f, 818.89f, 774.17f, 818.76f);
                mPath.cubicTo(772.24f, 818.67f, 768.03f, 821.74f, 766.4f, 822.95f);
                mPath.cubicTo(765.77f, 823.42f, 764.99f, 823.96f, 764.59f, 824.66f);
                mPath.cubicTo(763.8f, 826.03f, 764.51f, 829.97f, 765.62f, 831.06f);
                mPath.cubicTo(765.62f, 831.06f, 769.27f, 833.09f, 769.27f, 833.09f);
                mPath.cubicTo(770.76f, 834.2f, 771.7f, 835.97f, 773.58f, 836.49f);
                mPath.cubicTo(774.99f, 836.88f, 778.61f, 836.03f, 780.17f, 835.75f);
                mPath.cubicTo(780.53f, 838.06f, 781.98f, 841.6f, 781.5f, 843.55f);
                mPath.cubicTo(779.97f, 849.78f, 776.34f, 848.25f, 771.77f, 849.41f);
                mPath.cubicTo(769.94f, 849.87f, 767.63f, 851.0f, 765.77f, 850.78f);
                mPath.cubicTo(763.83f, 850.55f, 761.47f, 848.79f, 759.78f, 848.45f);
                mPath.cubicTo(755.53f, 847.63f, 754.11f, 851.68f, 752.2f, 854.35f);
                mPath.cubicTo(750.57f, 856.61f, 744.84f, 861.91f, 742.38f, 863.04f);
                mPath.cubicTo(738.41f, 864.87f, 733.78f, 860.04f, 728.58f, 858.55f);
                mPath.cubicTo(724.42f, 865.01f, 723.79f, 860.77f, 718.98f, 861.13f);
                mPath.cubicTo(714.64f, 861.46f, 709.1f, 866.19f, 708.25f, 870.56f);
                mPath.cubicTo(707.72f, 873.3f, 710.13f, 874.37f, 711.16f, 876.56f);
                mPath.cubicTo(712.63f, 879.68f, 709.4f, 882.99f, 713.62f, 885.29f);
                mPath.cubicTo(716.69f, 886.97f, 718.54f, 884.06f, 721.38f, 883.55f);
                mPath.cubicTo(723.0f, 883.27f, 731.31f, 884.75f, 732.73f, 885.56f);
                mPath.cubicTo(733.79f, 886.18f, 734.43f, 886.98f, 735.12f, 887.97f);
                mPath.cubicTo(738.24f, 892.39f, 736.35f, 892.12f, 733.57f, 898.16f);
                mPath.cubicTo(731.6f, 902.42f, 729.43f, 908.52f, 728.84f, 913.16f);
                mPath.cubicTo(728.18f, 918.35f, 731.07f, 916.9f, 733.6f, 919.46f);
                mPath.cubicTo(735.41f, 921.3f, 737.42f, 926.19f, 737.56f, 928.77f);
                mPath.cubicTo(737.84f, 934.23f, 734.87f, 938.31f, 732.78f, 943.17f);
                mPath.cubicTo(734.25f, 944.12f, 736.41f, 945.68f, 738.18f, 945.81f);
                mPath.cubicTo(739.67f, 945.92f, 741.08f, 945.15f, 742.38f, 944.51f);
                mPath.cubicTo(747.26f, 942.14f, 748.14f, 941.28f, 749.58f, 935.97f);
                mPath.cubicTo(751.46f, 936.47f, 753.88f, 936.84f, 755.58f, 937.67f);
                mPath.cubicTo(757.6f, 938.67f, 758.54f, 939.9f, 760.98f, 940.76f);
                mPath.cubicTo(765.27f, 942.29f, 773.74f, 943.17f, 778.37f, 943.17f);
                mPath.cubicTo(778.37f, 943.17f, 778.37f, 935.97f, 778.37f, 935.97f);
                mPath.cubicTo(785.61f, 934.85f, 789.29f, 932.4f, 795.77f, 929.85f);
                mPath.cubicTo(799.53f, 928.36f, 802.17f, 928.42f, 801.91f, 923.97f);
                mPath.cubicTo(801.65f, 919.66f, 805.23f, 916.06f, 809.57f, 918.0f);
                mPath.cubicTo(813.48f, 919.75f, 813.49f, 922.3f, 815.76f, 924.26f);
                mPath.cubicTo(817.6f, 925.85f, 827.05f, 929.11f, 829.36f, 928.68f);
                mPath.cubicTo(830.58f, 928.45f, 833.41f, 927.55f, 834.17f, 926.55f);
                mPath.cubicTo(834.95f, 925.51f, 834.63f, 923.98f, 834.95f, 922.79f);
                mPath.cubicTo(835.46f, 920.89f, 837.2f, 919.42f, 838.96f, 918.65f);
                mPath.cubicTo(841.76f, 917.44f, 843.31f, 919.14f, 846.76f, 918.18f);
                mPath.cubicTo(846.76f, 918.18f, 856.86f, 914.98f, 856.86f, 914.98f);
                mPath.cubicTo(858.83f, 913.78f, 859.99f, 911.21f, 861.86f, 910.18f);
                mPath.cubicTo(864.09f, 908.93f, 866.77f, 910.3f, 868.31f, 908.62f);
                mPath.cubicTo(868.95f, 907.92f, 869.44f, 906.28f, 869.76f, 905.36f);
                mPath.cubicTo(871.89f, 899.1f, 871.36f, 897.98f, 871.36f, 891.56f);
                mPath.cubicTo(871.36f, 891.56f, 865.96f, 890.36f, 865.96f, 890.36f);
                mPath.cubicTo(868.33f, 884.42f, 868.43f, 885.31f, 865.96f, 879.56f);
                mPath.cubicTo(867.64f, 879.1f, 870.31f, 878.41f, 871.35f, 876.91f);
                mPath.cubicTo(873.55f, 873.74f, 872.18f, 867.24f, 868.3f, 866.0f);
                mPath.cubicTo(866.89f, 865.54f, 864.91f, 866.57f, 863.56f, 867.04f);
                mPath.cubicTo(861.03f, 867.92f, 858.39f, 868.28f, 855.76f, 868.76f);
                mPath.cubicTo(856.75f, 865.29f, 859.81f, 859.57f, 862.08f, 856.78f);
                mPath.cubicTo(864.4f, 853.9f, 866.61f, 853.62f, 867.49f, 850.13f);
                mPath.cubicTo(868.8f, 845.03f, 866.34f, 844.17f, 865.14f, 839.95f);
                mPath.cubicTo(864.55f, 837.9f, 864.87f, 835.53f, 864.58f, 833.35f);
                mPath.cubicTo(864.58f, 833.35f, 862.96f, 823.75f, 862.96f, 823.75f);
                mPath.cubicTo(860.92f, 825.79f, 860.16f, 828.58f, 857.54f, 830.03f);
                mPath.cubicTo(848.55f, 834.99f, 844.53f, 825.9f, 844.36f, 818.31f);
                mPath.cubicTo(844.36f, 818.31f, 839.15f, 818.31f, 839.15f, 818.31f);
                mPath.cubicTo(839.15f, 818.31f, 837.42f, 814.75f, 837.42f, 814.75f);
                mPath.cubicTo(837.42f, 814.75f, 835.96f, 805.17f, 835.96f, 805.17f);
                mPath.cubicTo(835.96f, 805.17f, 830.56f, 805.17f, 830.56f, 805.17f);
                mPath.cubicTo(830.56f, 805.17f, 823.37f, 806.06f, 823.37f, 806.06f);
                mPath.cubicTo(823.37f, 806.06f, 817.97f, 803.3f, 817.97f, 803.3f);
                mPath.cubicTo(817.97f, 803.3f, 817.97f, 803.3f, 817.97f, 803.3f);
                mPath.close();
                mPath.moveTo(817.97f, 803.3f);
                break;
            case 8:
                mPath.moveTo(884.79f, 1087.61f);
                mPath.cubicTo(883.14f, 1088.3f, 882.14f, 1090.99f, 881.56f, 1092.6f);
                mPath.cubicTo(881.56f, 1092.6f, 874.96f, 1090.8f, 874.96f, 1090.8f);
                mPath.cubicTo(874.62f, 1092.04f, 874.24f, 1093.9f, 873.66f, 1095.0f);
                mPath.cubicTo(872.39f, 1097.38f, 864.28f, 1103.97f, 861.76f, 1106.15f);
                mPath.cubicTo(860.45f, 1107.27f, 857.11f, 1109.91f, 856.38f, 1111.3f);
                mPath.cubicTo(855.57f, 1112.85f, 856.2f, 1115.46f, 856.38f, 1117.2f);
                mPath.cubicTo(856.38f, 1117.2f, 858.31f, 1132.07f, 858.31f, 1132.07f);
                mPath.cubicTo(859.0f, 1134.05f, 861.78f, 1134.79f, 863.56f, 1135.55f);
                mPath.cubicTo(869.03f, 1137.89f, 873.67f, 1140.53f, 879.76f, 1140.7f);
                mPath.cubicTo(879.76f, 1140.7f, 887.55f, 1140.7f, 887.55f, 1140.7f);
                mPath.cubicTo(889.62f, 1140.4f, 892.17f, 1138.11f, 894.15f, 1137.02f);
                mPath.cubicTo(894.15f, 1137.02f, 900.75f, 1134.01f, 900.75f, 1134.01f);
                mPath.cubicTo(902.98f, 1132.62f, 910.88f, 1124.79f, 912.25f, 1122.6f);
                mPath.cubicTo(912.25f, 1122.6f, 917.81f, 1107.6f, 917.81f, 1107.6f);
                mPath.cubicTo(919.51f, 1104.49f, 920.42f, 1102.97f, 922.96f, 1100.4f);
                mPath.cubicTo(924.18f, 1099.17f, 926.84f, 1097.11f, 927.33f, 1095.54f);
                mPath.cubicTo(928.25f, 1092.66f, 924.87f, 1085.27f, 921.13f, 1084.39f);
                mPath.cubicTo(921.13f, 1084.39f, 910.35f, 1085.18f, 910.35f, 1085.18f);
                mPath.cubicTo(907.57f, 1085.09f, 906.85f, 1084.52f, 903.75f, 1085.18f);
                mPath.cubicTo(899.86f, 1085.77f, 895.11f, 1087.96f, 891.15f, 1087.61f);
                mPath.cubicTo(889.4f, 1087.56f, 886.41f, 1086.79f, 884.79f, 1087.61f);
                mPath.cubicTo(884.79f, 1087.61f, 884.79f, 1087.61f, 884.79f, 1087.61f);
                mPath.close();
                mPath.moveTo(884.79f, 1087.61f);
                break;

        }
    }

    private void renderByProvince2(int index) {
        switch (index) {
            case 9:
                mPath.moveTo(962.7f, 386.27f);
                mPath.cubicTo(959.57f, 392.37f, 959.54f, 394.7f, 959.54f, 401.27f);
                mPath.cubicTo(959.54f, 401.27f, 954.14f, 401.87f, 954.14f, 401.87f);
                mPath.cubicTo(954.14f, 401.87f, 954.14f, 412.68f, 954.14f, 412.68f);
                mPath.cubicTo(954.23f, 417.8f, 956.8f, 419.49f, 959.6f, 423.48f);
                mPath.cubicTo(959.6f, 423.48f, 964.23f, 432.37f, 964.23f, 432.37f);
                mPath.cubicTo(965.37f, 433.91f, 969.14f, 436.36f, 970.94f, 437.88f);
                mPath.cubicTo(970.94f, 437.88f, 965.54f, 440.87f, 965.54f, 440.87f);
                mPath.cubicTo(961.05f, 443.5f, 959.33f, 443.86f, 957.74f, 449.28f);
                mPath.cubicTo(957.74f, 449.28f, 967.81f, 452.47f, 967.81f, 452.47f);
                mPath.cubicTo(970.65f, 454.15f, 972.1f, 460.59f, 972.14f, 463.68f);
                mPath.cubicTo(972.21f, 469.1f, 973.18f, 474.55f, 967.34f, 477.47f);
                mPath.cubicTo(964.68f, 478.81f, 962.3f, 477.14f, 959.73f, 479.47f);
                mPath.cubicTo(956.02f, 482.85f, 958.78f, 485.38f, 957.73f, 488.29f);
                mPath.cubicTo(956.35f, 492.1f, 952.52f, 492.49f, 952.97f, 499.09f);
                mPath.cubicTo(953.43f, 505.6f, 959.07f, 505.21f, 961.52f, 509.9f);
                mPath.cubicTo(961.52f, 509.9f, 965.42f, 517.69f, 965.42f, 517.69f);
                mPath.cubicTo(966.27f, 519.12f, 968.71f, 522.91f, 969.02f, 524.29f);
                mPath.cubicTo(969.5f, 526.45f, 966.92f, 531.05f, 966.02f, 533.3f);
                mPath.cubicTo(966.02f, 533.3f, 964.29f, 538.1f, 964.29f, 538.1f);
                mPath.cubicTo(963.33f, 541.72f, 962.9f, 548.26f, 960.44f, 551.17f);
                mPath.cubicTo(959.33f, 552.49f, 958.05f, 553.01f, 956.54f, 553.7f);
                mPath.cubicTo(957.11f, 556.73f, 959.01f, 561.72f, 961.4f, 563.72f);
                mPath.cubicTo(964.24f, 566.07f, 967.19f, 564.52f, 970.34f, 565.41f);
                mPath.cubicTo(970.34f, 565.41f, 974.54f, 567.2f, 974.54f, 567.2f);
                mPath.cubicTo(974.54f, 567.2f, 979.94f, 567.89f, 979.94f, 567.89f);
                mPath.cubicTo(979.94f, 567.89f, 985.34f, 570.12f, 985.34f, 570.12f);
                mPath.cubicTo(986.95f, 570.55f, 988.52f, 570.01f, 990.14f, 570.12f);
                mPath.cubicTo(995.3f, 570.01f, 995.91f, 572.27f, 998.54f, 566.3f);
                mPath.cubicTo(998.54f, 566.3f, 1002.74f, 569.9f, 1002.74f, 569.9f);
                mPath.cubicTo(1003.67f, 569.2f, 1004.7f, 568.56f, 1005.25f, 567.48f);
                mPath.cubicTo(1007.23f, 563.58f, 999.66f, 560.35f, 1002.04f, 554.9f);
                mPath.cubicTo(1004.09f, 550.22f, 1008.31f, 547.01f, 1010.76f, 542.9f);
                mPath.cubicTo(1013.29f, 538.63f, 1012.18f, 535.37f, 1016.14f, 529.12f);
                mPath.cubicTo(1018.62f, 525.21f, 1022.42f, 525.24f, 1025.41f, 522.72f);
                mPath.cubicTo(1027.82f, 520.67f, 1030.07f, 514.06f, 1035.13f, 510.85f);
                mPath.cubicTo(1035.13f, 510.85f, 1044.13f, 508.49f, 1044.13f, 508.49f);
                mPath.cubicTo(1045.56f, 507.99f, 1047.66f, 507.25f, 1048.87f, 506.41f);
                mPath.cubicTo(1051.42f, 504.63f, 1055.52f, 498.72f, 1055.27f, 495.49f);
                mPath.cubicTo(1055.06f, 492.74f, 1051.66f, 485.4f, 1048.87f, 484.5f);
                mPath.cubicTo(1046.8f, 483.83f, 1041.36f, 485.86f, 1038.83f, 485.86f);
                mPath.cubicTo(1036.55f, 485.85f, 1031.93f, 482.65f, 1030.33f, 481.03f);
                mPath.cubicTo(1026.59f, 476.92f, 1030.5f, 470.44f, 1030.33f, 465.48f);
                mPath.cubicTo(1030.09f, 462.4f, 1028.23f, 460.69f, 1027.33f, 454.08f);
                mPath.cubicTo(1021.96f, 454.1f, 1020.07f, 455.65f, 1017.73f, 460.68f);
                mPath.cubicTo(1017.73f, 460.68f, 1011.73f, 458.08f, 1011.73f, 458.08f);
                mPath.cubicTo(1011.73f, 458.08f, 1005.14f, 458.08f, 1005.14f, 458.08f);
                mPath.cubicTo(1005.14f, 458.08f, 994.94f, 456.48f, 994.94f, 456.48f);
                mPath.cubicTo(994.94f, 453.32f, 994.61f, 446.58f, 995.84f, 443.9f);
                mPath.cubicTo(997.21f, 440.95f, 999.8f, 441.04f, 1000.92f, 439.39f);
                mPath.cubicTo(1001.62f, 438.36f, 1001.53f, 436.68f, 1001.54f, 435.48f);
                mPath.cubicTo(1001.55f, 433.31f, 1001.21f, 428.27f, 1002.15f, 426.53f);
                mPath.cubicTo(1003.33f, 424.34f, 1007.8f, 421.85f, 1009.78f, 419.94f);
                mPath.cubicTo(1013.19f, 416.67f, 1011.31f, 412.18f, 1016.53f, 411.4f);
                mPath.cubicTo(1021.18f, 410.72f, 1019.34f, 414.77f, 1025.53f, 417.76f);
                mPath.cubicTo(1028.6f, 419.24f, 1035.7f, 418.68f, 1039.33f, 418.68f);
                mPath.cubicTo(1038.24f, 419.8f, 1037.06f, 420.91f, 1036.24f, 422.28f);
                mPath.cubicTo(1035.63f, 423.31f, 1035.42f, 424.12f, 1035.19f, 425.28f);
                mPath.cubicTo(1033.76f, 432.44f, 1039.13f, 431.9f, 1043.53f, 434.32f);
                mPath.cubicTo(1045.53f, 435.42f, 1047.84f, 437.53f, 1049.53f, 439.08f);
                mPath.cubicTo(1049.53f, 439.08f, 1045.33f, 439.68f, 1045.33f, 439.68f);
                mPath.cubicTo(1045.35f, 446.01f, 1045.62f, 446.96f, 1048.93f, 452.28f);
                mPath.cubicTo(1048.93f, 452.28f, 1054.33f, 451.08f, 1054.33f, 451.08f);
                mPath.cubicTo(1054.84f, 457.31f, 1056.11f, 462.06f, 1062.73f, 463.76f);
                mPath.cubicTo(1063.78f, 464.03f, 1065.91f, 464.63f, 1066.93f, 464.52f);
                mPath.cubicTo(1069.45f, 464.25f, 1070.13f, 462.12f, 1073.52f, 461.12f);
                mPath.cubicTo(1076.69f, 460.17f, 1079.63f, 460.62f, 1082.35f, 458.12f);
                mPath.cubicTo(1087.33f, 453.53f, 1084.52f, 451.14f, 1085.9f, 446.28f);
                mPath.cubicTo(1087.55f, 440.48f, 1092.1f, 435.43f, 1097.52f, 433.08f);
                mPath.cubicTo(1096.73f, 431.24f, 1095.35f, 428.09f, 1094.14f, 426.58f);
                mPath.cubicTo(1091.27f, 423.0f, 1089.33f, 424.31f, 1087.32f, 416.75f);
                mPath.cubicTo(1085.83f, 416.88f, 1083.3f, 416.96f, 1081.92f, 416.75f);
                mPath.cubicTo(1080.5f, 416.28f, 1079.61f, 415.66f, 1078.32f, 415.09f);
                mPath.cubicTo(1075.22f, 413.73f, 1070.7f, 412.17f, 1070.67f, 407.87f);
                mPath.cubicTo(1070.67f, 406.34f, 1072.5f, 404.04f, 1073.21f, 402.47f);
                mPath.cubicTo(1074.3f, 400.08f, 1075.52f, 396.06f, 1075.92f, 393.47f);
                mPath.cubicTo(1068.48f, 394.05f, 1069.77f, 393.03f, 1065.73f, 393.08f);
                mPath.cubicTo(1062.71f, 393.11f, 1059.79f, 395.0f, 1056.23f, 392.01f);
                mPath.cubicTo(1054.51f, 390.57f, 1051.87f, 386.78f, 1051.89f, 384.47f);
                mPath.cubicTo(1051.92f, 382.12f, 1053.69f, 379.68f, 1053.09f, 376.67f);
                mPath.cubicTo(1051.71f, 369.77f, 1046.71f, 370.8f, 1043.32f, 366.41f);
                mPath.cubicTo(1040.78f, 363.12f, 1041.41f, 359.22f, 1036.33f, 357.86f);
                mPath.cubicTo(1032.91f, 356.94f, 1029.98f, 358.81f, 1027.33f, 360.68f);
                mPath.cubicTo(1027.33f, 360.68f, 1021.72f, 364.44f, 1021.72f, 364.44f);
                mPath.cubicTo(1020.5f, 365.67f, 1018.15f, 371.23f, 1017.4f, 373.07f);
                mPath.cubicTo(1016.65f, 374.93f, 1015.69f, 379.38f, 1014.43f, 380.51f);
                mPath.cubicTo(1013.18f, 381.63f, 1011.45f, 381.34f, 1009.93f, 381.76f);
                mPath.cubicTo(1007.46f, 382.46f, 1005.65f, 384.4f, 1003.68f, 384.39f);
                mPath.cubicTo(1001.43f, 384.36f, 999.21f, 382.17f, 996.14f, 383.46f);
                mPath.cubicTo(994.05f, 384.34f, 988.85f, 388.72f, 987.37f, 390.5f);
                mPath.cubicTo(986.2f, 391.89f, 984.67f, 394.95f, 983.14f, 395.54f);
                mPath.cubicTo(982.24f, 396.03f, 980.85f, 395.73f, 979.94f, 395.54f);
                mPath.cubicTo(973.8f, 393.53f, 973.83f, 385.89f, 972.73f, 383.89f);
                mPath.cubicTo(971.86f, 382.3f, 969.9f, 380.55f, 967.94f, 381.0f);
                mPath.cubicTo(965.66f, 381.51f, 963.71f, 384.32f, 962.7f, 386.27f);
                mPath.cubicTo(962.7f, 386.27f, 962.7f, 386.27f, 962.7f, 386.27f);
                mPath.close();
                mPath.moveTo(962.7f, 386.27f);
                break;
            case 10:
                mPath.moveTo(1093.92f, 4.18f);
                mPath.cubicTo(1085.64f, 7.23f, 1074.6f, 8.64f, 1067.53f, 13.0f);
                mPath.cubicTo(1068.96f, 15.8f, 1070.42f, 16.18f, 1071.42f, 18.41f);
                mPath.cubicTo(1074.78f, 25.98f, 1068.99f, 30.94f, 1065.13f, 36.41f);
                mPath.cubicTo(1067.49f, 37.3f, 1070.18f, 37.94f, 1072.27f, 39.39f);
                mPath.cubicTo(1074.77f, 41.12f, 1075.22f, 43.47f, 1078.86f, 42.93f);
                mPath.cubicTo(1081.63f, 42.52f, 1082.75f, 38.66f, 1083.72f, 36.41f);
                mPath.cubicTo(1085.41f, 37.09f, 1087.59f, 37.87f, 1089.12f, 38.8f);
                mPath.cubicTo(1093.61f, 41.52f, 1091.93f, 41.92f, 1097.52f, 41.21f);
                mPath.cubicTo(1097.03f, 42.38f, 1096.17f, 44.2f, 1096.01f, 45.41f);
                mPath.cubicTo(1095.52f, 49.14f, 1099.93f, 56.9f, 1101.53f, 60.41f);
                mPath.cubicTo(1102.7f, 62.96f, 1103.54f, 66.21f, 1105.95f, 67.85f);
                mPath.cubicTo(1107.74f, 69.07f, 1110.42f, 68.84f, 1112.52f, 68.81f);
                mPath.cubicTo(1118.83f, 68.72f, 1118.97f, 65.94f, 1122.72f, 64.82f);
                mPath.cubicTo(1124.91f, 64.08f, 1126.09f, 65.17f, 1128.71f, 64.82f);
                mPath.cubicTo(1131.37f, 64.6f, 1137.23f, 62.19f, 1139.49f, 60.73f);
                mPath.cubicTo(1143.33f, 58.25f, 1145.72f, 52.61f, 1149.11f, 52.08f);
                mPath.cubicTo(1150.5f, 51.86f, 1153.33f, 52.98f, 1154.51f, 53.72f);
                mPath.cubicTo(1155.73f, 54.48f, 1165.37f, 62.78f, 1166.35f, 64.01f);
                mPath.cubicTo(1170.29f, 68.57f, 1167.06f, 71.48f, 1166.35f, 74.22f);
                mPath.cubicTo(1165.76f, 76.69f, 1167.17f, 78.12f, 1166.35f, 80.82f);
                mPath.cubicTo(1166.35f, 80.82f, 1162.02f, 91.02f, 1162.02f, 91.02f);
                mPath.cubicTo(1161.02f, 92.93f, 1159.45f, 94.84f, 1159.21f, 97.02f);
                mPath.cubicTo(1158.65f, 102.26f, 1163.19f, 115.95f, 1163.46f, 119.82f);
                mPath.cubicTo(1163.78f, 124.6f, 1162.71f, 127.53f, 1157.51f, 127.02f);
                mPath.cubicTo(1157.51f, 127.02f, 1155.71f, 142.03f, 1155.71f, 142.03f);
                mPath.cubicTo(1155.71f, 142.03f, 1155.71f, 161.23f, 1155.71f, 161.23f);
                mPath.cubicTo(1151.1f, 156.4f, 1151.13f, 156.47f, 1149.11f, 150.43f);
                mPath.cubicTo(1143.45f, 153.38f, 1141.84f, 158.33f, 1138.75f, 163.63f);
                mPath.cubicTo(1135.75f, 168.76f, 1134.29f, 168.1f, 1132.31f, 170.93f);
                mPath.cubicTo(1130.74f, 173.18f, 1131.13f, 174.69f, 1128.06f, 178.03f);
                mPath.cubicTo(1123.9f, 182.53f, 1119.43f, 183.27f, 1118.83f, 190.04f);
                mPath.cubicTo(1118.23f, 196.86f, 1121.68f, 197.0f, 1125.72f, 200.86f);
                mPath.cubicTo(1128.64f, 203.66f, 1129.16f, 204.66f, 1131.11f, 208.04f);
                mPath.cubicTo(1136.26f, 207.07f, 1136.78f, 206.95f, 1138.91f, 202.04f);
                mPath.cubicTo(1138.91f, 202.04f, 1143.71f, 203.24f, 1143.71f, 203.24f);
                mPath.cubicTo(1142.77f, 207.23f, 1141.82f, 208.7f, 1138.9f, 211.63f);
                mPath.cubicTo(1137.8f, 212.75f, 1134.88f, 215.02f, 1134.65f, 216.49f);
                mPath.cubicTo(1134.38f, 218.22f, 1137.88f, 222.58f, 1138.91f, 224.24f);
                mPath.cubicTo(1138.91f, 224.24f, 1154.51f, 219.44f, 1154.51f, 219.44f);
                mPath.cubicTo(1154.51f, 219.44f, 1158.24f, 226.04f, 1158.24f, 226.04f);
                mPath.cubicTo(1159.66f, 229.3f, 1160.6f, 234.76f, 1163.07f, 237.22f);
                mPath.cubicTo(1164.03f, 238.17f, 1165.93f, 239.27f, 1167.11f, 240.05f);
                mPath.cubicTo(1169.93f, 241.94f, 1172.48f, 244.47f, 1176.08f, 242.66f);
                mPath.cubicTo(1178.03f, 241.67f, 1179.18f, 239.82f, 1180.31f, 238.04f);
                mPath.cubicTo(1181.42f, 239.14f, 1183.13f, 240.97f, 1184.51f, 241.62f);
                mPath.cubicTo(1189.15f, 243.83f, 1191.06f, 238.33f, 1198.3f, 236.84f);
                mPath.cubicTo(1198.66f, 238.39f, 1199.24f, 240.69f, 1200.24f, 241.94f);
                mPath.cubicTo(1202.17f, 244.37f, 1208.71f, 245.04f, 1211.5f, 244.03f);
                mPath.cubicTo(1214.31f, 243.01f, 1215.25f, 241.05f, 1218.7f, 240.65f);
                mPath.cubicTo(1219.92f, 240.51f, 1221.12f, 240.67f, 1222.3f, 241.01f);
                mPath.cubicTo(1230.43f, 243.31f, 1229.52f, 251.21f, 1232.49f, 254.56f);
                mPath.cubicTo(1235.08f, 257.46f, 1241.0f, 254.8f, 1243.65f, 257.01f);
                mPath.cubicTo(1245.83f, 258.83f, 1246.07f, 263.9f, 1249.92f, 267.36f);
                mPath.cubicTo(1250.48f, 267.86f, 1251.02f, 268.3f, 1251.69f, 268.64f);
                mPath.cubicTo(1258.57f, 272.08f, 1259.4f, 260.79f, 1259.49f, 256.65f);
                mPath.cubicTo(1261.58f, 256.74f, 1264.18f, 256.82f, 1265.58f, 258.63f);
                mPath.cubicTo(1267.04f, 260.52f, 1266.21f, 262.81f, 1268.2f, 265.65f);
                mPath.cubicTo(1268.2f, 265.65f, 1275.43f, 274.05f, 1275.43f, 274.05f);
                mPath.cubicTo(1277.63f, 277.12f, 1279.22f, 281.89f, 1283.92f, 279.52f);
                mPath.cubicTo(1285.73f, 278.62f, 1285.91f, 276.39f, 1286.73f, 274.65f);
                mPath.cubicTo(1287.81f, 272.35f, 1289.32f, 270.01f, 1291.31f, 268.41f);
                mPath.cubicTo(1295.22f, 265.26f, 1297.23f, 265.16f, 1299.69f, 260.25f);
                mPath.cubicTo(1299.69f, 260.25f, 1304.49f, 263.85f, 1304.49f, 263.85f);
                mPath.cubicTo(1304.49f, 263.85f, 1305.69f, 260.85f, 1305.69f, 260.85f);
                mPath.cubicTo(1305.69f, 260.85f, 1317.68f, 267.65f, 1317.68f, 267.65f);
                mPath.cubicTo(1317.68f, 267.65f, 1323.68f, 270.83f, 1323.68f, 270.83f);
                mPath.cubicTo(1323.68f, 270.83f, 1333.28f, 269.25f, 1333.28f, 269.25f);
                mPath.cubicTo(1333.28f, 269.25f, 1329.55f, 259.05f, 1329.55f, 259.05f);
                mPath.cubicTo(1329.55f, 259.05f, 1328.7f, 251.85f, 1328.7f, 251.85f);
                mPath.cubicTo(1328.7f, 251.85f, 1324.73f, 243.45f, 1324.73f, 243.45f);
                mPath.cubicTo(1323.07f, 240.12f, 1322.16f, 238.21f, 1320.08f, 235.04f);
                mPath.cubicTo(1319.3f, 233.86f, 1317.84f, 232.04f, 1317.88f, 230.59f);
                mPath.cubicTo(1318.0f, 225.81f, 1322.97f, 224.6f, 1325.54f, 221.72f);
                mPath.cubicTo(1328.83f, 218.02f, 1328.72f, 214.67f, 1331.04f, 212.62f);
                mPath.cubicTo(1333.28f, 210.65f, 1335.87f, 210.45f, 1338.68f, 210.44f);
                mPath.cubicTo(1338.68f, 210.44f, 1357.33f, 210.44f, 1357.33f, 210.44f);
                mPath.cubicTo(1357.16f, 205.15f, 1356.09f, 203.64f, 1357.33f, 197.84f);
                mPath.cubicTo(1358.09f, 194.69f, 1359.67f, 194.22f, 1360.52f, 191.84f);
                mPath.cubicTo(1361.23f, 189.86f, 1362.06f, 180.49f, 1362.08f, 178.03f);
                mPath.cubicTo(1362.13f, 170.47f, 1364.57f, 174.39f, 1364.48f, 165.43f);
                mPath.cubicTo(1364.48f, 165.43f, 1362.1f, 149.83f, 1362.1f, 149.83f);
                mPath.cubicTo(1361.94f, 144.78f, 1364.16f, 143.8f, 1363.91f, 141.43f);
                mPath.cubicTo(1363.69f, 139.34f, 1361.35f, 137.99f, 1361.82f, 135.86f);
                mPath.cubicTo(1362.45f, 133.01f, 1365.01f, 131.77f, 1366.44f, 129.83f);
                mPath.cubicTo(1367.39f, 128.54f, 1368.27f, 124.51f, 1368.57f, 122.82f);
                mPath.cubicTo(1369.56f, 117.33f, 1364.46f, 113.85f, 1363.01f, 109.62f);
                mPath.cubicTo(1361.61f, 105.54f, 1364.39f, 101.0f, 1366.28f, 97.62f);
                mPath.cubicTo(1366.28f, 97.62f, 1359.68f, 100.76f, 1359.68f, 100.76f);
                mPath.cubicTo(1356.06f, 102.24f, 1353.95f, 102.27f, 1350.68f, 105.02f);
                mPath.cubicTo(1347.36f, 107.82f, 1346.1f, 111.19f, 1342.28f, 114.26f);
                mPath.cubicTo(1338.6f, 117.21f, 1335.63f, 116.12f, 1332.99f, 118.79f);
                mPath.cubicTo(1332.99f, 118.79f, 1329.97f, 122.8f, 1329.97f, 122.8f);
                mPath.cubicTo(1329.97f, 122.8f, 1325.71f, 127.08f, 1325.71f, 127.08f);
                mPath.cubicTo(1320.51f, 133.13f, 1323.71f, 132.3f, 1315.28f, 135.95f);
                mPath.cubicTo(1311.74f, 137.48f, 1310.96f, 138.32f, 1306.89f, 139.14f);
                mPath.cubicTo(1306.89f, 139.14f, 1299.69f, 140.05f, 1299.69f, 140.05f);
                mPath.cubicTo(1297.34f, 140.81f, 1295.5f, 142.96f, 1293.14f, 141.61f);
                mPath.cubicTo(1290.35f, 140.01f, 1285.48f, 133.34f, 1284.56f, 130.02f);
                mPath.cubicTo(1283.81f, 127.31f, 1284.4f, 125.87f, 1283.48f, 124.02f);
                mPath.cubicTo(1282.25f, 121.57f, 1278.28f, 118.72f, 1276.64f, 116.22f);
                mPath.cubicTo(1275.36f, 114.27f, 1275.19f, 111.88f, 1275.09f, 109.62f);
                mPath.cubicTo(1273.02f, 109.79f, 1270.23f, 110.53f, 1268.32f, 110.11f);
                mPath.cubicTo(1262.97f, 108.92f, 1260.95f, 106.0f, 1257.09f, 103.61f);
                mPath.cubicTo(1257.09f, 103.61f, 1249.9f, 100.23f, 1249.9f, 100.23f);
                mPath.cubicTo(1245.56f, 98.55f, 1245.05f, 101.37f, 1240.9f, 100.93f);
                mPath.cubicTo(1236.07f, 100.42f, 1234.83f, 97.54f, 1231.9f, 97.3f);
                mPath.cubicTo(1228.68f, 97.03f, 1225.16f, 99.67f, 1222.3f, 100.72f);
                mPath.cubicTo(1218.63f, 102.06f, 1213.36f, 101.34f, 1210.48f, 98.62f);
                mPath.cubicTo(1204.9f, 93.37f, 1205.81f, 91.04f, 1203.21f, 85.04f);
                mPath.cubicTo(1201.67f, 81.47f, 1200.2f, 81.85f, 1198.91f, 79.56f);
                mPath.cubicTo(1197.97f, 77.89f, 1198.12f, 75.22f, 1197.01f, 73.01f);
                mPath.cubicTo(1194.56f, 68.1f, 1187.89f, 63.88f, 1184.16f, 57.41f);
                mPath.cubicTo(1180.36f, 50.83f, 1179.43f, 45.51f, 1178.34f, 43.67f);
                mPath.cubicTo(1176.64f, 40.8f, 1173.83f, 41.08f, 1171.65f, 37.01f);
                mPath.cubicTo(1170.05f, 34.03f, 1171.05f, 31.66f, 1168.72f, 28.61f);
                mPath.cubicTo(1167.55f, 27.07f, 1163.3f, 22.93f, 1161.71f, 21.78f);
                mPath.cubicTo(1160.61f, 21.0f, 1158.67f, 20.11f, 1157.86f, 19.23f);
                mPath.cubicTo(1156.3f, 17.52f, 1156.95f, 15.22f, 1155.36f, 13.32f);
                mPath.cubicTo(1154.58f, 12.37f, 1152.57f, 11.11f, 1151.51f, 10.35f);
                mPath.cubicTo(1149.92f, 9.21f, 1147.19f, 6.97f, 1145.51f, 6.31f);
                mPath.cubicTo(1145.51f, 6.31f, 1136.51f, 4.6f, 1136.51f, 4.6f);
                mPath.cubicTo(1135.78f, 5.75f, 1134.47f, 8.04f, 1133.11f, 8.47f);
                mPath.cubicTo(1132.06f, 8.81f, 1127.64f, 7.05f, 1126.32f, 6.66f);
                mPath.cubicTo(1126.32f, 6.66f, 1107.72f, 0.37f, 1107.72f, 0.37f);
                mPath.cubicTo(1106.22f, 0.17f, 1105.53f, 0.45f, 1104.12f, 0.7f);
                mPath.cubicTo(1096.49f, 2.08f, 1100.01f, 1.94f, 1093.92f, 4.18f);
                mPath.cubicTo(1093.92f, 4.18f, 1093.92f, 4.18f, 1093.92f, 4.18f);
                mPath.close();
                mPath.moveTo(1093.92f, 4.18f);
                break;
            case 11:
                mPath.moveTo(970.94f, 566.01f);
                mPath.cubicTo(969.33f, 565.55f, 965.03f, 565.7f, 963.14f, 565.7f);
                mPath.cubicTo(963.14f, 572.9f, 963.96f, 583.56f, 959.72f, 589.7f);
                mPath.cubicTo(958.72f, 591.16f, 953.93f, 595.4f, 952.34f, 596.81f);
                mPath.cubicTo(950.42f, 598.51f, 947.48f, 600.81f, 945.15f, 601.84f);
                mPath.cubicTo(938.83f, 604.6f, 932.46f, 602.72f, 928.45f, 605.27f);
                mPath.cubicTo(926.66f, 606.41f, 925.97f, 608.25f, 924.05f, 609.32f);
                mPath.cubicTo(922.26f, 610.32f, 920.57f, 609.92f, 918.15f, 611.62f);
                mPath.cubicTo(915.43f, 613.52f, 913.79f, 616.37f, 909.15f, 618.69f);
                mPath.cubicTo(905.56f, 620.48f, 904.09f, 619.1f, 901.35f, 620.27f);
                mPath.cubicTo(901.35f, 620.27f, 895.35f, 624.04f, 895.35f, 624.04f);
                mPath.cubicTo(891.85f, 625.92f, 887.87f, 626.96f, 883.96f, 627.51f);
                mPath.cubicTo(883.96f, 630.11f, 884.11f, 636.18f, 885.51f, 638.26f);
                mPath.cubicTo(886.63f, 639.91f, 888.73f, 640.98f, 890.04f, 643.12f);
                mPath.cubicTo(891.66f, 645.78f, 890.69f, 648.17f, 892.52f, 651.52f);
                mPath.cubicTo(894.92f, 655.92f, 898.53f, 657.78f, 899.79f, 659.5f);
                mPath.cubicTo(902.19f, 662.76f, 898.92f, 666.36f, 902.64f, 671.32f);
                mPath.cubicTo(902.64f, 671.32f, 911.42f, 680.92f, 911.42f, 680.92f);
                mPath.cubicTo(912.82f, 682.55f, 914.63f, 686.02f, 915.98f, 686.94f);
                mPath.cubicTo(915.98f, 686.94f, 923.55f, 689.34f, 923.55f, 689.34f);
                mPath.cubicTo(923.55f, 689.34f, 932.55f, 693.73f, 932.55f, 693.73f);
                mPath.cubicTo(934.78f, 694.41f, 940.09f, 694.03f, 942.75f, 694.15f);
                mPath.cubicTo(942.75f, 694.15f, 948.74f, 694.91f, 948.74f, 694.91f);
                mPath.cubicTo(951.76f, 694.69f, 955.63f, 691.32f, 959.44f, 691.21f);
                mPath.cubicTo(962.16f, 691.13f, 963.6f, 694.05f, 966.14f, 694.62f);
                mPath.cubicTo(968.23f, 695.09f, 972.62f, 692.72f, 974.54f, 691.72f);
                mPath.cubicTo(974.54f, 691.72f, 974.54f, 697.13f, 974.54f, 697.13f);
                mPath.cubicTo(974.61f, 700.97f, 977.35f, 706.9f, 981.14f, 708.46f);
                mPath.cubicTo(982.91f, 709.12f, 984.25f, 708.1f, 986.54f, 708.46f);
                mPath.cubicTo(986.54f, 708.46f, 991.34f, 710.04f, 991.34f, 710.04f);
                mPath.cubicTo(992.96f, 710.27f, 997.22f, 709.38f, 999.14f, 709.13f);
                mPath.cubicTo(999.14f, 709.13f, 999.14f, 716.33f, 999.14f, 716.33f);
                mPath.cubicTo(999.14f, 716.33f, 1006.93f, 716.66f, 1006.93f, 716.66f);
                mPath.cubicTo(1006.93f, 716.66f, 1015.33f, 715.49f, 1015.33f, 715.49f);
                mPath.cubicTo(1015.33f, 715.49f, 1020.13f, 718.13f, 1020.13f, 718.13f);
                mPath.cubicTo(1021.46f, 713.81f, 1022.21f, 710.63f, 1026.19f, 707.63f);
                mPath.cubicTo(1028.45f, 705.92f, 1030.36f, 706.48f, 1031.58f, 704.74f);
                mPath.cubicTo(1033.56f, 701.7f, 1032.32f, 693.96f, 1031.58f, 690.52f);
                mPath.cubicTo(1031.41f, 689.29f, 1031.04f, 686.95f, 1030.34f, 685.97f);
                mPath.cubicTo(1028.11f, 682.87f, 1020.75f, 683.39f, 1017.13f, 682.77f);
                mPath.cubicTo(1015.48f, 682.49f, 1013.36f, 682.27f, 1012.35f, 680.74f);
                mPath.cubicTo(1011.55f, 679.53f, 1011.21f, 675.28f, 1011.13f, 673.72f);
                mPath.cubicTo(1004.01f, 672.1f, 1004.58f, 671.18f, 1001.54f, 665.32f);
                mPath.cubicTo(1005.37f, 665.32f, 1011.56f, 665.28f, 1012.83f, 660.42f);
                mPath.cubicTo(1013.26f, 658.34f, 1011.91f, 656.43f, 1012.83f, 653.92f);
                mPath.cubicTo(1014.19f, 650.64f, 1016.49f, 650.58f, 1016.53f, 641.32f);
                mPath.cubicTo(1016.54f, 639.84f, 1016.35f, 637.4f, 1017.15f, 636.15f);
                mPath.cubicTo(1019.11f, 633.07f, 1023.43f, 633.01f, 1026.08f, 635.02f);
                mPath.cubicTo(1026.08f, 635.02f, 1033.93f, 642.52f, 1033.93f, 642.52f);
                mPath.cubicTo(1033.93f, 642.52f, 1044.13f, 635.91f, 1044.13f, 635.91f);
                mPath.cubicTo(1044.13f, 635.91f, 1040.71f, 627.89f, 1040.71f, 627.89f);
                mPath.cubicTo(1040.71f, 627.89f, 1032.91f, 622.44f, 1032.91f, 622.44f);
                mPath.cubicTo(1032.91f, 622.44f, 1029.05f, 616.3f, 1029.05f, 616.3f);
                mPath.cubicTo(1029.05f, 616.3f, 1020.13f, 617.18f, 1020.13f, 617.18f);
                mPath.cubicTo(1020.13f, 617.18f, 1011.73f, 617.18f, 1011.73f, 617.18f);
                mPath.cubicTo(1011.0f, 612.52f, 1009.06f, 607.75f, 1003.94f, 606.22f);
                mPath.cubicTo(1002.3f, 605.73f, 995.85f, 605.91f, 993.74f, 605.91f);
                mPath.cubicTo(994.59f, 603.36f, 996.88f, 595.81f, 998.36f, 594.08f);
                mPath.cubicTo(1000.4f, 591.66f, 1002.2f, 593.1f, 1005.17f, 589.09f);
                mPath.cubicTo(1007.84f, 585.51f, 1007.43f, 582.58f, 1009.59f, 580.34f);
                mPath.cubicTo(1012.59f, 577.21f, 1017.4f, 577.73f, 1019.53f, 570.5f);
                mPath.cubicTo(1013.28f, 571.82f, 1013.22f, 574.27f, 1009.93f, 574.4f);
                mPath.cubicTo(1008.34f, 574.46f, 1006.23f, 573.94f, 1005.74f, 572.22f);
                mPath.cubicTo(1005.74f, 572.22f, 1005.74f, 568.1f, 1005.74f, 568.1f);
                mPath.cubicTo(1005.74f, 568.1f, 1003.34f, 570.5f, 1003.34f, 570.5f);
                mPath.cubicTo(1003.34f, 570.5f, 998.54f, 566.9f, 998.54f, 566.9f);
                mPath.cubicTo(995.7f, 573.03f, 994.25f, 570.23f, 988.94f, 570.61f);
                mPath.cubicTo(982.84f, 571.03f, 985.17f, 569.88f, 980.54f, 568.49f);
                mPath.cubicTo(980.54f, 568.49f, 975.74f, 567.94f, 975.74f, 567.94f);
                mPath.cubicTo(973.71f, 567.53f, 972.73f, 566.51f, 970.94f, 566.01f);
                mPath.cubicTo(970.94f, 566.01f, 970.94f, 566.01f, 970.94f, 566.01f);
                mPath.close();
                mPath.moveTo(970.94f, 566.01f);
                break;
            case 12:
                mPath.moveTo(1016.53f, 999.48f);
                mPath.cubicTo(1016.53f, 999.48f, 1019.53f, 1006.78f, 1019.53f, 1006.78f);
                mPath.cubicTo(1014.2f, 1006.06f, 1013.83f, 1006.0f, 1011.13f, 1001.38f);
                mPath.cubicTo(1009.52f, 1002.1f, 1007.3f, 1003.01f, 1006.35f, 1004.58f);
                mPath.cubicTo(1004.54f, 1007.55f, 1006.08f, 1010.96f, 1009.33f, 1011.78f);
                mPath.cubicTo(1009.33f, 1011.78f, 1024.93f, 1010.98f, 1024.93f, 1010.98f);
                mPath.cubicTo(1024.93f, 1007.73f, 1024.94f, 1000.8f, 1021.1f, 999.48f);
                mPath.cubicTo(1020.23f, 999.05f, 1017.62f, 999.49f, 1016.53f, 999.48f);
                mPath.close();
                mPath.moveTo(1016.53f, 999.48f);
                break;
            case 13:
                mPath.moveTo(911.32f, 680.92f);
                mPath.cubicTo(909.69f, 678.88f, 902.14f, 670.98f, 900.15f, 669.52f);
                mPath.cubicTo(898.52f, 670.94f, 895.25f, 674.49f, 892.95f, 673.71f);
                mPath.cubicTo(891.68f, 673.27f, 890.45f, 671.57f, 888.75f, 671.31f);
                mPath.cubicTo(887.1f, 671.06f, 885.99f, 672.35f, 883.36f, 672.29f);
                mPath.cubicTo(883.36f, 672.29f, 878.56f, 671.8f, 878.56f, 671.8f);
                mPath.cubicTo(878.56f, 671.8f, 871.96f, 671.8f, 871.96f, 671.8f);
                mPath.cubicTo(870.29f, 671.42f, 866.91f, 670.58f, 865.41f, 671.1f);
                mPath.cubicTo(863.68f, 671.71f, 862.69f, 673.47f, 861.76f, 674.92f);
                mPath.cubicTo(864.04f, 675.03f, 866.91f, 675.13f, 868.58f, 676.91f);
                mPath.cubicTo(869.8f, 678.22f, 870.5f, 680.66f, 871.74f, 681.76f);
                mPath.cubicTo(873.27f, 683.13f, 874.82f, 682.33f, 876.53f, 683.68f);
                mPath.cubicTo(877.81f, 684.69f, 880.29f, 689.36f, 881.56f, 691.12f);
                mPath.cubicTo(880.03f, 691.78f, 877.73f, 693.0f, 876.16f, 693.11f);
                mPath.cubicTo(873.58f, 693.3f, 871.33f, 691.36f, 867.18f, 694.96f);
                mPath.cubicTo(861.92f, 699.68f, 866.68f, 701.41f, 867.18f, 705.53f);
                mPath.cubicTo(867.25f, 707.18f, 865.62f, 715.99f, 868.2f, 719.88f);
                mPath.cubicTo(871.02f, 724.12f, 875.29f, 723.75f, 881.0f, 730.73f);
                mPath.cubicTo(881.92f, 731.85f, 882.9f, 732.98f, 883.45f, 734.33f);
                mPath.cubicTo(885.26f, 738.83f, 882.25f, 744.25f, 881.56f, 748.73f);
                mPath.cubicTo(881.56f, 748.73f, 876.76f, 747.05f, 876.76f, 747.05f);
                mPath.cubicTo(876.76f, 747.05f, 871.96f, 749.71f, 871.96f, 749.71f);
                mPath.cubicTo(871.96f, 749.71f, 861.76f, 756.85f, 861.76f, 756.85f);
                mPath.cubicTo(861.76f, 756.85f, 856.71f, 757.62f, 856.71f, 757.62f);
                mPath.cubicTo(856.71f, 757.62f, 852.81f, 756.53f, 852.81f, 756.53f);
                mPath.cubicTo(852.81f, 756.53f, 847.95f, 759.69f, 847.95f, 759.69f);
                mPath.cubicTo(847.95f, 759.69f, 843.16f, 759.69f, 843.16f, 759.69f);
                mPath.cubicTo(843.16f, 759.69f, 837.76f, 762.54f, 837.76f, 762.54f);
                mPath.cubicTo(838.84f, 764.15f, 841.12f, 766.88f, 841.62f, 768.54f);
                mPath.cubicTo(842.51f, 771.51f, 840.04f, 778.94f, 839.56f, 782.34f);
                mPath.cubicTo(839.56f, 782.34f, 843.16f, 779.34f, 843.16f, 779.34f);
                mPath.cubicTo(843.16f, 779.34f, 846.4f, 785.56f, 846.4f, 785.56f);
                mPath.cubicTo(846.4f, 785.56f, 852.15f, 789.67f, 852.15f, 789.67f);
                mPath.cubicTo(852.15f, 789.67f, 852.76f, 796.74f, 852.76f, 796.74f);
                mPath.cubicTo(857.99f, 795.38f, 858.45f, 795.87f, 861.16f, 802.14f);
                mPath.cubicTo(864.8f, 797.55f, 864.19f, 792.7f, 866.81f, 789.72f);
                mPath.cubicTo(869.87f, 786.24f, 878.57f, 780.88f, 883.36f, 780.92f);
                mPath.cubicTo(886.02f, 780.94f, 887.07f, 782.36f, 889.35f, 782.53f);
                mPath.cubicTo(891.22f, 782.66f, 895.89f, 781.22f, 897.75f, 780.54f);
                mPath.cubicTo(897.15f, 779.18f, 895.59f, 776.48f, 895.68f, 775.14f);
                mPath.cubicTo(896.16f, 768.23f, 907.56f, 768.92f, 912.14f, 769.94f);
                mPath.cubicTo(915.78f, 770.75f, 915.79f, 773.17f, 918.25f, 774.18f);
                mPath.cubicTo(919.64f, 774.75f, 925.3f, 774.53f, 927.15f, 774.54f);
                mPath.cubicTo(934.14f, 774.59f, 933.21f, 777.93f, 938.55f, 780.89f);
                mPath.cubicTo(939.74f, 781.55f, 942.0f, 782.47f, 943.35f, 782.62f);
                mPath.cubicTo(946.06f, 782.89f, 953.06f, 781.23f, 955.22f, 779.52f);
                mPath.cubicTo(956.6f, 778.42f, 957.46f, 776.66f, 958.34f, 775.14f);
                mPath.cubicTo(958.9f, 777.06f, 959.86f, 783.67f, 961.6f, 784.34f);
                mPath.cubicTo(962.66f, 784.75f, 965.07f, 783.97f, 966.14f, 783.6f);
                mPath.cubicTo(967.3f, 783.2f, 968.01f, 782.92f, 968.95f, 782.08f);
                mPath.cubicTo(970.82f, 780.42f, 972.12f, 776.92f, 974.22f, 776.44f);
                mPath.cubicTo(978.71f, 775.4f, 982.19f, 782.0f, 982.21f, 784.49f);
                mPath.cubicTo(982.21f, 785.64f, 979.95f, 789.94f, 979.34f, 791.34f);
                mPath.cubicTo(979.34f, 791.34f, 989.54f, 796.74f, 989.54f, 796.74f);
                mPath.cubicTo(992.06f, 790.95f, 992.08f, 792.65f, 996.74f, 790.01f);
                mPath.cubicTo(999.21f, 788.61f, 1000.04f, 787.07f, 1002.74f, 785.82f);
                mPath.cubicTo(1002.74f, 785.82f, 1012.31f, 782.21f, 1012.31f, 782.21f);
                mPath.cubicTo(1014.72f, 780.78f, 1015.46f, 778.91f, 1017.74f, 777.36f);
                mPath.cubicTo(1019.95f, 775.85f, 1022.19f, 775.85f, 1024.23f, 774.23f);
                mPath.cubicTo(1026.08f, 772.77f, 1028.01f, 769.56f, 1029.83f, 768.59f);
                mPath.cubicTo(1032.37f, 767.15f, 1036.61f, 768.33f, 1039.33f, 768.59f);
                mPath.cubicTo(1048.92f, 769.63f, 1043.32f, 757.42f, 1040.74f, 753.54f);
                mPath.cubicTo(1039.86f, 752.22f, 1039.23f, 751.45f, 1038.65f, 749.93f);
                mPath.cubicTo(1036.82f, 745.15f, 1037.1f, 742.63f, 1032.73f, 738.53f);
                mPath.cubicTo(1036.53f, 733.75f, 1036.33f, 733.61f, 1036.33f, 727.73f);
                mPath.cubicTo(1033.8f, 727.05f, 1027.55f, 724.7f, 1025.53f, 723.23f);
                mPath.cubicTo(1022.7f, 721.18f, 1019.39f, 716.98f, 1015.93f, 716.04f);
                mPath.cubicTo(1013.36f, 715.34f, 1008.09f, 717.19f, 1005.14f, 717.42f);
                mPath.cubicTo(1005.14f, 717.42f, 998.54f, 716.93f, 998.54f, 716.93f);
                mPath.cubicTo(998.54f, 716.93f, 998.54f, 709.73f, 998.54f, 709.73f);
                mPath.cubicTo(996.6f, 709.99f, 993.1f, 710.76f, 991.34f, 710.45f);
                mPath.cubicTo(991.34f, 710.45f, 986.54f, 708.9f, 986.54f, 708.9f);
                mPath.cubicTo(984.68f, 708.61f, 982.9f, 709.46f, 981.14f, 708.59f);
                mPath.cubicTo(978.46f, 707.27f, 974.68f, 701.88f, 974.02f, 698.93f);
                mPath.cubicTo(974.02f, 698.93f, 974.02f, 692.92f, 974.02f, 692.92f);
                mPath.cubicTo(972.1f, 693.36f, 967.61f, 695.36f, 966.39f, 695.12f);
                mPath.cubicTo(963.99f, 694.64f, 962.76f, 691.36f, 958.94f, 691.74f);
                mPath.cubicTo(954.96f, 692.12f, 951.37f, 694.98f, 948.74f, 695.27f);
                mPath.cubicTo(948.74f, 695.27f, 942.15f, 694.73f, 942.15f, 694.73f);
                mPath.cubicTo(939.84f, 694.7f, 935.14f, 694.94f, 933.15f, 694.34f);
                mPath.cubicTo(933.15f, 694.34f, 924.15f, 689.94f, 924.15f, 689.94f);
                mPath.cubicTo(921.87f, 689.01f, 917.24f, 688.23f, 915.88f, 687.18f);
                mPath.cubicTo(914.29f, 685.96f, 912.76f, 682.71f, 911.32f, 680.92f);
                mPath.cubicTo(911.32f, 680.92f, 911.32f, 680.92f, 911.32f, 680.92f);
                mPath.close();
                mPath.moveTo(911.32f, 680.92f);
                break;
            case 14:
                mPath.moveTo(895.94f, 775.74f);
                mPath.cubicTo(896.13f, 777.35f, 897.99f, 779.83f, 898.95f, 781.14f);
                mPath.cubicTo(898.95f, 781.14f, 889.95f, 782.91f, 889.95f, 782.91f);
                mPath.cubicTo(887.86f, 782.89f, 886.91f, 781.96f, 885.15f, 781.54f);
                mPath.cubicTo(883.42f, 781.13f, 880.27f, 781.68f, 878.56f, 782.21f);
                mPath.cubicTo(876.35f, 782.91f, 874.46f, 784.27f, 872.56f, 785.54f);
                mPath.cubicTo(870.96f, 786.61f, 868.14f, 788.39f, 866.98f, 789.82f);
                mPath.cubicTo(865.63f, 791.49f, 865.09f, 794.63f, 864.34f, 796.74f);
                mPath.cubicTo(862.43f, 802.1f, 861.77f, 800.67f, 861.76f, 806.94f);
                mPath.cubicTo(861.74f, 817.36f, 863.01f, 822.21f, 864.88f, 832.15f);
                mPath.cubicTo(864.88f, 832.15f, 865.48f, 839.35f, 865.48f, 839.35f);
                mPath.cubicTo(865.98f, 842.57f, 868.5f, 845.18f, 868.36f, 847.92f);
                mPath.cubicTo(868.12f, 852.72f, 865.33f, 853.19f, 862.68f, 856.26f);
                mPath.cubicTo(860.43f, 858.84f, 857.31f, 864.84f, 856.36f, 868.16f);
                mPath.cubicTo(856.36f, 868.16f, 863.56f, 866.64f, 863.56f, 866.64f);
                mPath.cubicTo(864.73f, 866.27f, 866.93f, 865.18f, 868.09f, 865.52f);
                mPath.cubicTo(870.86f, 866.31f, 874.96f, 872.67f, 871.6f, 877.03f);
                mPath.cubicTo(870.54f, 878.4f, 868.13f, 879.34f, 866.56f, 880.16f);
                mPath.cubicTo(869.31f, 886.58f, 868.29f, 883.94f, 866.56f, 890.36f);
                mPath.cubicTo(866.56f, 890.36f, 871.96f, 890.96f, 871.96f, 890.96f);
                mPath.cubicTo(871.96f, 894.9f, 871.08f, 898.61f, 874.39f, 901.38f);
                mPath.cubicTo(875.68f, 902.45f, 876.88f, 903.32f, 878.56f, 902.52f);
                mPath.cubicTo(880.96f, 901.36f, 883.8f, 896.45f, 885.78f, 896.13f);
                mPath.cubicTo(888.34f, 895.71f, 889.46f, 899.63f, 893.55f, 898.46f);
                mPath.cubicTo(898.95f, 896.93f, 900.03f, 892.46f, 903.16f, 890.88f);
                mPath.cubicTo(905.11f, 890.08f, 906.49f, 891.15f, 909.15f, 890.88f);
                mPath.cubicTo(913.82f, 890.05f, 911.81f, 888.57f, 920.55f, 888.56f);
                mPath.cubicTo(920.77f, 891.33f, 921.7f, 900.84f, 924.39f, 901.88f);
                mPath.cubicTo(925.37f, 902.41f, 928.32f, 901.86f, 929.55f, 901.88f);
                mPath.cubicTo(929.55f, 901.88f, 925.61f, 907.76f, 925.61f, 907.76f);
                mPath.cubicTo(925.61f, 907.76f, 924.65f, 914.36f, 924.65f, 914.36f);
                mPath.cubicTo(924.65f, 914.36f, 917.46f, 924.57f, 917.46f, 924.57f);
                mPath.cubicTo(917.46f, 924.57f, 916.95f, 932.37f, 916.95f, 932.37f);
                mPath.cubicTo(924.47f, 927.6f, 920.17f, 928.89f, 929.55f, 925.77f);
                mPath.cubicTo(929.55f, 925.77f, 930.75f, 939.57f, 930.75f, 939.57f);
                mPath.cubicTo(932.71f, 939.2f, 934.95f, 938.84f, 936.75f, 937.96f);
                mPath.cubicTo(938.16f, 937.26f, 939.96f, 935.76f, 941.29f, 935.45f);
                mPath.cubicTo(943.31f, 934.98f, 945.22f, 936.58f, 947.08f, 935.01f);
                mPath.cubicTo(950.63f, 932.01f, 949.94f, 926.31f, 949.94f, 922.17f);
                mPath.cubicTo(952.17f, 922.17f, 961.59f, 921.9f, 963.02f, 922.53f);
                mPath.cubicTo(965.15f, 923.46f, 965.2f, 925.94f, 966.56f, 927.21f);
                mPath.cubicTo(968.02f, 928.57f, 971.98f, 928.17f, 973.94f, 928.17f);
                mPath.cubicTo(973.05f, 921.58f, 972.15f, 920.98f, 968.54f, 915.56f);
                mPath.cubicTo(970.57f, 915.05f, 974.1f, 914.66f, 975.74f, 913.78f);
                mPath.cubicTo(977.81f, 912.65f, 979.15f, 910.44f, 980.79f, 910.52f);
                mPath.cubicTo(981.64f, 910.55f, 983.81f, 912.01f, 984.74f, 912.46f);
                mPath.cubicTo(987.82f, 913.93f, 994.34f, 915.61f, 997.13f, 912.98f);
                mPath.cubicTo(1000.62f, 909.68f, 998.22f, 905.72f, 998.65f, 901.76f);
                mPath.cubicTo(999.12f, 897.43f, 1002.2f, 891.99f, 1003.94f, 887.96f);
                mPath.cubicTo(997.13f, 886.82f, 999.9f, 883.42f, 998.82f, 878.36f);
                mPath.cubicTo(997.52f, 872.22f, 994.83f, 871.14f, 994.22f, 868.76f);
                mPath.cubicTo(993.71f, 866.45f, 995.36f, 864.6f, 994.22f, 860.95f);
                mPath.cubicTo(993.65f, 859.3f, 992.2f, 855.9f, 991.04f, 854.67f);
                mPath.cubicTo(988.09f, 851.53f, 983.93f, 851.11f, 983.93f, 845.35f);
                mPath.cubicTo(983.93f, 843.7f, 984.97f, 841.55f, 985.52f, 839.95f);
                mPath.cubicTo(986.33f, 837.63f, 987.11f, 833.49f, 988.64f, 831.78f);
                mPath.cubicTo(988.64f, 831.78f, 992.41f, 828.91f, 992.41f, 828.91f);
                mPath.cubicTo(993.43f, 827.98f, 997.96f, 821.38f, 998.42f, 820.15f);
                mPath.cubicTo(999.48f, 817.34f, 997.17f, 815.65f, 996.44f, 812.95f);
                mPath.cubicTo(995.87f, 810.88f, 996.46f, 809.13f, 995.63f, 806.94f);
                mPath.cubicTo(995.15f, 805.67f, 993.92f, 803.91f, 993.14f, 802.74f);
                mPath.cubicTo(988.55f, 795.84f, 986.17f, 794.91f, 978.74f, 791.34f);
                mPath.cubicTo(981.22f, 786.99f, 982.94f, 785.29f, 980.38f, 780.55f);
                mPath.cubicTo(979.74f, 779.37f, 979.21f, 778.43f, 978.01f, 777.73f);
                mPath.cubicTo(977.05f, 777.16f, 974.55f, 776.66f, 973.34f, 776.34f);
                mPath.cubicTo(969.26f, 782.46f, 967.88f, 784.65f, 960.14f, 785.34f);
                mPath.cubicTo(960.14f, 785.34f, 958.34f, 776.34f, 958.34f, 776.34f);
                mPath.cubicTo(957.35f, 777.56f, 956.5f, 779.01f, 955.22f, 779.95f);
                mPath.cubicTo(951.01f, 783.01f, 943.72f, 784.03f, 939.15f, 781.49f);
                mPath.cubicTo(933.23f, 778.22f, 935.17f, 775.16f, 927.15f, 775.14f);
                mPath.cubicTo(924.98f, 775.13f, 919.95f, 775.46f, 918.2f, 774.53f);
                mPath.cubicTo(915.88f, 773.3f, 915.7f, 771.2f, 912.15f, 770.61f);
                mPath.cubicTo(908.64f, 769.74f, 902.89f, 769.31f, 899.56f, 770.61f);
                mPath.cubicTo(897.69f, 771.57f, 895.67f, 773.52f, 895.94f, 775.74f);
                mPath.cubicTo(895.94f, 775.74f, 895.94f, 775.74f, 895.94f, 775.74f);
                mPath.close();
                mPath.moveTo(895.94f, 775.74f);
                break;
            case 15:
                mPath.moveTo(1088.27f, 606.89f);
                mPath.cubicTo(1086.84f, 608.46f, 1086.76f, 611.68f, 1086.72f, 613.71f);
                mPath.cubicTo(1086.72f, 613.71f, 1075.92f, 608.9f, 1075.92f, 608.9f);
                mPath.cubicTo(1075.92f, 608.9f, 1066.93f, 614.4f, 1066.93f, 614.4f);
                mPath.cubicTo(1066.93f, 614.4f, 1060.33f, 612.35f, 1060.33f, 612.35f);
                mPath.cubicTo(1060.33f, 612.35f, 1054.33f, 613.71f, 1054.33f, 613.71f);
                mPath.cubicTo(1053.26f, 610.82f, 1049.97f, 604.7f, 1047.03f, 603.58f);
                mPath.cubicTo(1042.21f, 601.75f, 1034.88f, 604.77f, 1035.82f, 610.69f);
                mPath.cubicTo(1035.95f, 611.53f, 1036.11f, 612.07f, 1036.69f, 612.73f);
                mPath.cubicTo(1036.69f, 612.73f, 1048.33f, 619.6f, 1048.33f, 619.6f);
                mPath.cubicTo(1054.49f, 623.55f, 1051.3f, 625.27f, 1057.33f, 627.91f);
                mPath.cubicTo(1063.76f, 630.72f, 1066.64f, 628.07f, 1069.92f, 629.73f);
                mPath.cubicTo(1072.76f, 631.16f, 1075.56f, 634.82f, 1077.72f, 635.9f);
                mPath.cubicTo(1079.4f, 636.74f, 1082.41f, 636.51f, 1084.32f, 636.51f);
                mPath.cubicTo(1084.32f, 638.69f, 1084.46f, 642.31f, 1084.0f, 644.32f);
                mPath.cubicTo(1083.39f, 647.06f, 1081.6f, 649.24f, 1082.53f, 652.11f);
                mPath.cubicTo(1083.7f, 655.75f, 1086.11f, 655.52f, 1088.14f, 657.75f);
                mPath.cubicTo(1089.99f, 659.78f, 1090.41f, 662.92f, 1092.85f, 664.74f);
                mPath.cubicTo(1093.78f, 665.43f, 1095.14f, 666.06f, 1096.32f, 665.99f);
                mPath.cubicTo(1099.39f, 665.77f, 1105.22f, 660.81f, 1106.52f, 658.12f);
                mPath.cubicTo(1108.59f, 659.18f, 1112.57f, 660.28f, 1113.81f, 661.88f);
                mPath.cubicTo(1116.15f, 664.88f, 1116.04f, 667.95f, 1113.11f, 670.34f);
                mPath.cubicTo(1112.26f, 671.03f, 1111.22f, 671.79f, 1110.12f, 671.98f);
                mPath.cubicTo(1108.78f, 672.2f, 1106.16f, 671.11f, 1104.72f, 670.72f);
                mPath.cubicTo(1104.72f, 670.72f, 1103.08f, 680.32f, 1103.08f, 680.32f);
                mPath.cubicTo(1101.65f, 684.21f, 1099.04f, 683.61f, 1099.33f, 690.52f);
                mPath.cubicTo(1099.55f, 695.9f, 1105.7f, 696.41f, 1109.39f, 699.84f);
                mPath.cubicTo(1113.15f, 703.35f, 1112.52f, 707.69f, 1111.92f, 712.13f);
                mPath.cubicTo(1111.92f, 712.13f, 1122.12f, 709.66f, 1122.12f, 709.66f);
                mPath.cubicTo(1122.12f, 709.66f, 1133.51f, 712.36f, 1133.51f, 712.36f);
                mPath.cubicTo(1133.51f, 712.36f, 1141.31f, 711.14f, 1141.31f, 711.14f);
                mPath.cubicTo(1141.31f, 711.14f, 1147.31f, 715.72f, 1147.31f, 715.72f);
                mPath.cubicTo(1147.31f, 715.72f, 1158.71f, 719.33f, 1158.71f, 719.33f);
                mPath.cubicTo(1159.71f, 717.81f, 1161.1f, 715.36f, 1162.44f, 714.23f);
                mPath.cubicTo(1164.25f, 712.69f, 1166.32f, 712.67f, 1167.53f, 710.77f);
                mPath.cubicTo(1170.29f, 706.4f, 1168.22f, 699.81f, 1175.51f, 694.73f);
                mPath.cubicTo(1172.24f, 690.16f, 1169.92f, 689.09f, 1165.31f, 686.32f);
                mPath.cubicTo(1168.37f, 685.0f, 1172.12f, 682.7f, 1175.51f, 682.96f);
                mPath.cubicTo(1181.56f, 683.4f, 1181.88f, 687.2f, 1189.31f, 685.12f);
                mPath.cubicTo(1188.18f, 682.52f, 1186.52f, 678.85f, 1184.33f, 677.03f);
                mPath.cubicTo(1182.43f, 675.46f, 1181.31f, 676.04f, 1178.51f, 673.64f);
                mPath.cubicTo(1178.51f, 673.64f, 1170.11f, 665.63f, 1170.11f, 665.63f);
                mPath.cubicTo(1167.13f, 663.52f, 1163.23f, 663.75f, 1160.25f, 659.82f);
                mPath.cubicTo(1158.56f, 657.59f, 1159.28f, 655.73f, 1157.23f, 652.12f);
                mPath.cubicTo(1157.23f, 652.12f, 1149.77f, 640.72f, 1149.77f, 640.72f);
                mPath.cubicTo(1149.77f, 640.72f, 1146.49f, 632.91f, 1146.49f, 632.91f);
                mPath.cubicTo(1146.49f, 632.91f, 1142.13f, 625.71f, 1142.13f, 625.71f);
                mPath.cubicTo(1139.77f, 621.06f, 1137.78f, 614.09f, 1133.8f, 610.37f);
                mPath.cubicTo(1132.09f, 608.75f, 1128.63f, 608.24f, 1126.32f, 607.51f);
                mPath.cubicTo(1120.98f, 605.8f, 1113.86f, 603.84f, 1109.62f, 600.19f);
                mPath.cubicTo(1108.29f, 599.06f, 1104.98f, 595.4f, 1104.89f, 593.66f);
                mPath.cubicTo(1104.84f, 592.76f, 1106.15f, 589.56f, 1106.52f, 588.51f);
                mPath.cubicTo(1102.58f, 589.62f, 1098.01f, 591.13f, 1096.25f, 595.12f);
                mPath.cubicTo(1094.81f, 598.36f, 1095.23f, 600.89f, 1093.96f, 602.78f);
                mPath.cubicTo(1092.53f, 604.91f, 1089.69f, 605.34f, 1088.27f, 606.89f);
                mPath.cubicTo(1088.27f, 606.89f, 1088.27f, 606.89f, 1088.27f, 606.89f);
                mPath.close();
                mPath.moveTo(1088.27f, 606.89f);
                break;
            case 16:
                mPath.moveTo(998.06f, 874.76f);
                mPath.cubicTo(1000.03f, 879.05f, 999.74f, 882.23f, 999.74f, 886.76f);
                mPath.cubicTo(999.74f, 886.76f, 1004.54f, 887.96f, 1004.54f, 887.96f);
                mPath.cubicTo(1001.19f, 893.83f, 998.28f, 899.63f, 999.49f, 906.56f);
                mPath.cubicTo(1000.05f, 909.77f, 1001.81f, 911.92f, 1005.14f, 912.64f);
                mPath.cubicTo(1009.83f, 913.67f, 1013.26f, 908.52f, 1018.92f, 911.04f);
                mPath.cubicTo(1020.12f, 911.57f, 1021.07f, 912.13f, 1021.75f, 913.29f);
                mPath.cubicTo(1024.3f, 917.67f, 1020.47f, 919.01f, 1017.79f, 921.28f);
                mPath.cubicTo(1014.97f, 923.66f, 1010.86f, 930.33f, 1012.12f, 934.17f);
                mPath.cubicTo(1012.4f, 935.04f, 1012.96f, 935.84f, 1013.62f, 936.47f);
                mPath.cubicTo(1016.55f, 939.3f, 1018.89f, 936.8f, 1021.93f, 935.58f);
                mPath.cubicTo(1025.1f, 934.31f, 1026.58f, 935.17f, 1028.48f, 934.16f);
                mPath.cubicTo(1030.1f, 933.29f, 1030.91f, 931.6f, 1032.75f, 930.55f);
                mPath.cubicTo(1032.75f, 930.55f, 1043.53f, 927.55f, 1043.53f, 927.55f);
                mPath.cubicTo(1045.91f, 927.35f, 1047.48f, 928.91f, 1049.53f, 929.84f);
                mPath.cubicTo(1051.45f, 930.72f, 1053.45f, 931.0f, 1055.53f, 931.17f);
                mPath.cubicTo(1055.17f, 929.58f, 1054.09f, 926.53f, 1054.15f, 925.17f);
                mPath.cubicTo(1054.26f, 922.99f, 1055.66f, 921.97f, 1056.07f, 918.56f);
                mPath.cubicTo(1056.68f, 913.56f, 1058.17f, 899.87f, 1059.7f, 895.76f);
                mPath.cubicTo(1061.5f, 890.92f, 1065.43f, 886.11f, 1065.99f, 884.36f);
                mPath.cubicTo(1066.71f, 882.13f, 1065.92f, 879.04f, 1066.75f, 876.56f);
                mPath.cubicTo(1067.6f, 873.99f, 1070.12f, 871.74f, 1070.23f, 869.36f);
                mPath.cubicTo(1070.38f, 866.39f, 1067.41f, 864.5f, 1068.25f, 860.95f);
                mPath.cubicTo(1070.1f, 853.19f, 1077.61f, 852.66f, 1080.22f, 847.73f);
                mPath.cubicTo(1081.26f, 845.77f, 1082.58f, 840.25f, 1081.83f, 838.15f);
                mPath.cubicTo(1081.17f, 836.28f, 1078.94f, 834.61f, 1079.27f, 832.77f);
                mPath.cubicTo(1079.52f, 831.42f, 1081.47f, 830.02f, 1082.42f, 829.05f);
                mPath.cubicTo(1082.42f, 829.05f, 1085.8f, 825.12f, 1085.8f, 825.12f);
                mPath.cubicTo(1088.02f, 822.78f, 1089.27f, 822.43f, 1091.52f, 819.55f);
                mPath.cubicTo(1091.52f, 819.55f, 1098.12f, 823.75f, 1098.12f, 823.75f);
                mPath.cubicTo(1099.07f, 821.98f, 1100.02f, 820.02f, 1101.78f, 818.91f);
                mPath.cubicTo(1103.44f, 817.87f, 1105.19f, 818.08f, 1107.12f, 816.8f);
                mPath.cubicTo(1110.26f, 814.7f, 1113.53f, 808.36f, 1113.17f, 804.54f);
                mPath.cubicTo(1112.76f, 800.15f, 1111.3f, 792.42f, 1108.45f, 789.07f);
                mPath.cubicTo(1106.2f, 786.43f, 1102.93f, 786.19f, 1101.76f, 784.01f);
                mPath.cubicTo(1100.36f, 781.42f, 1103.69f, 775.21f, 1102.3f, 773.16f);
                mPath.cubicTo(1101.44f, 771.89f, 1096.69f, 770.44f, 1095.12f, 769.95f);
                mPath.cubicTo(1095.12f, 769.95f, 1084.32f, 767.41f, 1084.32f, 767.41f);
                mPath.cubicTo(1081.43f, 766.22f, 1080.88f, 764.22f, 1078.87f, 763.15f);
                mPath.cubicTo(1077.3f, 762.31f, 1074.15f, 762.54f, 1072.32f, 762.54f);
                mPath.cubicTo(1071.75f, 766.74f, 1071.41f, 768.15f, 1067.55f, 770.42f);
                mPath.cubicTo(1066.7f, 770.92f, 1065.88f, 771.39f, 1064.87f, 771.47f);
                mPath.cubicTo(1064.87f, 771.47f, 1060.93f, 770.94f, 1060.93f, 770.94f);
                mPath.cubicTo(1063.19f, 763.78f, 1063.93f, 768.56f, 1063.93f, 758.34f);
                mPath.cubicTo(1061.81f, 758.34f, 1058.65f, 757.99f, 1056.92f, 759.3f);
                mPath.cubicTo(1054.9f, 760.83f, 1054.35f, 763.74f, 1051.3f, 765.0f);
                mPath.cubicTo(1051.3f, 765.0f, 1045.93f, 766.37f, 1045.93f, 766.37f);
                mPath.cubicTo(1043.84f, 767.25f, 1042.57f, 768.74f, 1040.53f, 768.96f);
                mPath.cubicTo(1039.11f, 769.24f, 1032.42f, 767.84f, 1029.91f, 768.96f);
                mPath.cubicTo(1027.96f, 769.7f, 1026.04f, 772.87f, 1024.28f, 774.38f);
                mPath.cubicTo(1021.73f, 776.56f, 1019.5f, 776.3f, 1017.19f, 777.96f);
                mPath.cubicTo(1014.85f, 779.63f, 1014.57f, 781.39f, 1011.13f, 783.11f);
                mPath.cubicTo(1011.13f, 783.11f, 1001.54f, 786.7f, 1001.54f, 786.7f);
                mPath.cubicTo(1001.54f, 786.7f, 996.74f, 790.26f, 996.74f, 790.26f);
                mPath.cubicTo(994.18f, 791.89f, 991.48f, 792.15f, 990.44f, 795.54f);
                mPath.cubicTo(989.59f, 798.31f, 992.67f, 801.72f, 994.14f, 803.94f);
                mPath.cubicTo(998.51f, 810.58f, 995.67f, 809.73f, 997.22f, 814.15f);
                mPath.cubicTo(997.86f, 815.96f, 999.41f, 817.53f, 998.89f, 819.55f);
                mPath.cubicTo(998.57f, 820.78f, 993.43f, 828.42f, 992.34f, 829.37f);
                mPath.cubicTo(992.34f, 829.37f, 988.82f, 831.93f, 988.82f, 831.93f);
                mPath.cubicTo(987.81f, 833.11f, 987.32f, 835.45f, 986.89f, 836.95f);
                mPath.cubicTo(986.15f, 839.46f, 984.17f, 843.62f, 984.39f, 845.95f);
                mPath.cubicTo(984.98f, 852.2f, 990.23f, 852.13f, 992.73f, 856.76f);
                mPath.cubicTo(993.61f, 858.4f, 994.95f, 861.51f, 995.06f, 863.35f);
                mPath.cubicTo(995.16f, 865.35f, 994.27f, 867.71f, 994.75f, 869.36f);
                mPath.cubicTo(995.27f, 871.13f, 996.92f, 872.28f, 998.06f, 874.76f);
                mPath.cubicTo(998.06f, 874.76f, 998.06f, 874.76f, 998.06f, 874.76f);
                mPath.close();
                mPath.moveTo(998.06f, 874.76f);
                break;
            case 17:
                mPath.moveTo(1136.88f, 228.32f);
                mPath.cubicTo(1135.61f, 229.68f, 1133.91f, 230.52f, 1132.31f, 231.44f);
                mPath.cubicTo(1133.92f, 237.5f, 1133.24f, 236.23f, 1131.71f, 241.64f);
                mPath.cubicTo(1126.02f, 239.47f, 1125.06f, 235.51f, 1120.92f, 241.04f);
                mPath.cubicTo(1119.97f, 240.35f, 1119.06f, 239.56f, 1117.92f, 239.21f);
                mPath.cubicTo(1114.23f, 238.1f, 1110.48f, 241.76f, 1108.92f, 244.65f);
                mPath.cubicTo(1115.27f, 244.73f, 1113.91f, 246.53f, 1117.51f, 250.59f);
                mPath.cubicTo(1119.63f, 252.99f, 1122.57f, 254.57f, 1123.59f, 257.85f);
                mPath.cubicTo(1124.56f, 260.98f, 1122.19f, 263.32f, 1122.46f, 266.25f);
                mPath.cubicTo(1122.62f, 268.01f, 1124.51f, 271.53f, 1125.15f, 273.45f);
                mPath.cubicTo(1126.0f, 276.01f, 1125.51f, 277.35f, 1125.9f, 278.8f);
                mPath.cubicTo(1126.53f, 281.1f, 1128.31f, 281.5f, 1129.3f, 283.23f);
                mPath.cubicTo(1130.09f, 284.6f, 1129.91f, 286.88f, 1129.91f, 288.45f);
                mPath.cubicTo(1132.94f, 288.45f, 1135.71f, 288.87f, 1138.26f, 286.91f);
                mPath.cubicTo(1141.07f, 284.74f, 1142.43f, 280.73f, 1146.71f, 281.1f);
                mPath.cubicTo(1152.52f, 281.61f, 1154.06f, 290.25f, 1156.51f, 293.85f);
                mPath.cubicTo(1158.16f, 296.3f, 1160.52f, 298.49f, 1160.65f, 301.66f);
                mPath.cubicTo(1160.74f, 303.88f, 1159.04f, 305.63f, 1158.11f, 307.66f);
                mPath.cubicTo(1164.24f, 310.93f, 1165.16f, 312.41f, 1170.71f, 307.06f);
                mPath.cubicTo(1171.57f, 308.95f, 1172.86f, 311.33f, 1174.96f, 312.07f);
                mPath.cubicTo(1176.53f, 312.64f, 1177.94f, 311.79f, 1179.48f, 312.87f);
                mPath.cubicTo(1180.82f, 313.81f, 1182.27f, 316.99f, 1183.28f, 318.45f);
                mPath.cubicTo(1184.84f, 320.73f, 1186.43f, 321.81f, 1188.71f, 323.26f);
                mPath.cubicTo(1188.71f, 323.26f, 1190.5f, 316.66f, 1190.5f, 316.66f);
                mPath.cubicTo(1197.07f, 318.54f, 1196.26f, 321.12f, 1200.21f, 325.66f);
                mPath.cubicTo(1206.08f, 332.4f, 1204.15f, 331.22f, 1208.43f, 337.06f);
                mPath.cubicTo(1209.68f, 338.76f, 1212.85f, 342.56f, 1213.48f, 344.26f);
                mPath.cubicTo(1214.39f, 346.86f, 1212.98f, 349.15f, 1213.48f, 351.46f);
                mPath.cubicTo(1213.95f, 353.49f, 1215.7f, 354.96f, 1216.77f, 356.87f);
                mPath.cubicTo(1216.77f, 356.87f, 1218.42f, 360.41f, 1218.42f, 360.41f);
                mPath.cubicTo(1219.73f, 362.72f, 1222.1f, 363.92f, 1223.79f, 365.92f);
                mPath.cubicTo(1228.05f, 370.94f, 1228.84f, 374.46f, 1228.9f, 380.87f);
                mPath.cubicTo(1236.57f, 377.53f, 1236.15f, 374.59f, 1238.75f, 367.67f);
                mPath.cubicTo(1238.75f, 367.67f, 1243.91f, 353.86f, 1243.91f, 353.86f);
                mPath.cubicTo(1243.91f, 353.86f, 1248.1f, 346.06f, 1248.1f, 346.06f);
                mPath.cubicTo(1256.61f, 348.56f, 1254.33f, 350.29f, 1258.89f, 352.14f);
                mPath.cubicTo(1261.73f, 353.29f, 1269.18f, 353.71f, 1272.09f, 352.89f);
                mPath.cubicTo(1272.09f, 352.89f, 1276.29f, 351.15f, 1276.29f, 351.15f);
                mPath.cubicTo(1276.29f, 351.15f, 1281.69f, 349.66f, 1281.69f, 349.66f);
                mPath.cubicTo(1281.06f, 347.73f, 1280.12f, 344.02f, 1279.24f, 342.46f);
                mPath.cubicTo(1277.53f, 339.44f, 1274.33f, 336.92f, 1276.05f, 332.94f);
                mPath.cubicTo(1277.12f, 330.47f, 1281.2f, 330.62f, 1283.49f, 330.18f);
                mPath.cubicTo(1287.14f, 329.48f, 1291.5f, 327.35f, 1294.25f, 324.86f);
                mPath.cubicTo(1298.27f, 321.24f, 1295.53f, 319.27f, 1297.65f, 316.07f);
                mPath.cubicTo(1300.48f, 311.76f, 1303.58f, 314.19f, 1305.47f, 311.68f);
                mPath.cubicTo(1307.37f, 309.16f, 1306.88f, 304.15f, 1306.89f, 301.06f);
                mPath.cubicTo(1306.89f, 295.7f, 1307.44f, 295.68f, 1308.09f, 290.85f);
                mPath.cubicTo(1310.07f, 291.78f, 1312.85f, 292.67f, 1314.41f, 294.1f);
                mPath.cubicTo(1317.98f, 297.38f, 1318.53f, 301.81f, 1324.28f, 299.86f);
                mPath.cubicTo(1324.28f, 299.86f, 1324.28f, 298.65f, 1324.28f, 298.65f);
                mPath.cubicTo(1324.28f, 298.65f, 1320.68f, 297.45f, 1320.68f, 297.45f);
                mPath.cubicTo(1322.69f, 295.45f, 1324.8f, 293.18f, 1327.28f, 291.77f);
                mPath.cubicTo(1329.44f, 290.55f, 1331.61f, 290.57f, 1333.24f, 288.37f);
                mPath.cubicTo(1335.33f, 284.95f, 1333.75f, 280.3f, 1333.24f, 276.45f);
                mPath.cubicTo(1333.24f, 276.45f, 1333.24f, 269.85f, 1333.24f, 269.85f);
                mPath.cubicTo(1333.24f, 269.85f, 1323.08f, 271.09f, 1323.08f, 271.09f);
                mPath.cubicTo(1323.08f, 271.09f, 1311.68f, 264.69f, 1311.68f, 264.69f);
                mPath.cubicTo(1311.68f, 264.69f, 1306.39f, 262.54f, 1306.39f, 262.54f);
                mPath.cubicTo(1306.39f, 262.54f, 1303.29f, 265.05f, 1303.29f, 265.05f);
                mPath.cubicTo(1303.29f, 265.05f, 1300.89f, 260.85f, 1300.89f, 260.85f);
                mPath.cubicTo(1300.89f, 260.85f, 1299.69f, 260.85f, 1299.69f, 260.85f);
                mPath.cubicTo(1296.47f, 266.24f, 1293.45f, 266.3f, 1290.32f, 269.47f);
                mPath.cubicTo(1287.56f, 272.26f, 1286.21f, 276.23f, 1285.89f, 280.05f);
                mPath.cubicTo(1285.89f, 280.05f, 1279.29f, 281.25f, 1279.29f, 281.25f);
                mPath.cubicTo(1276.26f, 273.04f, 1268.92f, 267.32f, 1267.2f, 264.45f);
                mPath.cubicTo(1266.18f, 262.73f, 1265.86f, 259.86f, 1265.49f, 257.85f);
                mPath.cubicTo(1265.49f, 257.85f, 1260.09f, 257.25f, 1260.09f, 257.25f);
                mPath.cubicTo(1260.09f, 257.25f, 1259.39f, 262.65f, 1259.39f, 262.65f);
                mPath.cubicTo(1259.12f, 264.05f, 1258.78f, 264.96f, 1258.13f, 266.25f);
                mPath.cubicTo(1254.06f, 274.22f, 1247.93f, 266.29f, 1245.79f, 261.45f);
                mPath.cubicTo(1245.29f, 260.33f, 1244.43f, 257.95f, 1243.48f, 257.24f);
                mPath.cubicTo(1241.3f, 255.63f, 1235.35f, 258.16f, 1232.29f, 254.68f);
                mPath.cubicTo(1228.65f, 250.56f, 1230.33f, 243.36f, 1222.3f, 241.3f);
                mPath.cubicTo(1221.11f, 241.17f, 1219.93f, 241.04f, 1218.7f, 241.3f);
                mPath.cubicTo(1213.88f, 241.58f, 1213.39f, 244.54f, 1209.1f, 245.04f);
                mPath.cubicTo(1206.63f, 245.33f, 1201.59f, 244.06f, 1199.99f, 242.08f);
                mPath.cubicTo(1199.29f, 241.21f, 1198.24f, 238.61f, 1197.7f, 237.44f);
                mPath.cubicTo(1195.92f, 237.81f, 1194.49f, 238.08f, 1192.9f, 239.08f);
                mPath.cubicTo(1190.79f, 240.4f, 1188.56f, 243.11f, 1185.71f, 242.38f);
                mPath.cubicTo(1184.0f, 241.94f, 1182.15f, 239.87f, 1180.91f, 238.64f);
                mPath.cubicTo(1179.14f, 240.11f, 1177.35f, 242.73f, 1175.45f, 243.42f);
                mPath.cubicTo(1172.53f, 244.48f, 1170.56f, 242.59f, 1168.31f, 241.06f);
                mPath.cubicTo(1165.55f, 239.2f, 1162.67f, 238.11f, 1161.14f, 235.02f);
                mPath.cubicTo(1159.42f, 231.54f, 1157.64f, 222.11f, 1153.86f, 220.88f);
                mPath.cubicTo(1152.35f, 220.39f, 1149.49f, 221.84f, 1147.91f, 222.32f);
                mPath.cubicTo(1145.99f, 222.91f, 1141.1f, 223.82f, 1139.75f, 224.8f);
                mPath.cubicTo(1138.55f, 225.67f, 1137.94f, 227.19f, 1136.88f, 228.32f);
                mPath.cubicTo(1136.88f, 228.32f, 1136.88f, 228.32f, 1136.88f, 228.32f);
                mPath.close();
                mPath.moveTo(1136.88f, 228.32f);
                break;
            case 18:
                mPath.moveTo(1178.51f, 311.86f);
                mPath.cubicTo(1172.87f, 313.3f, 1174.38f, 311.46f, 1169.51f, 307.66f);
                mPath.cubicTo(1165.05f, 313.69f, 1168.63f, 314.47f, 1166.06f, 320.25f);
                mPath.cubicTo(1164.14f, 324.57f, 1162.35f, 323.57f, 1160.07f, 325.48f);
                mPath.cubicTo(1157.89f, 327.3f, 1158.2f, 329.85f, 1155.63f, 331.87f);
                mPath.cubicTo(1152.15f, 334.61f, 1145.03f, 332.3f, 1140.71f, 332.26f);
                mPath.cubicTo(1140.43f, 334.39f, 1140.26f, 336.94f, 1138.23f, 338.16f);
                mPath.cubicTo(1136.8f, 339.01f, 1135.3f, 338.63f, 1133.57f, 339.82f);
                mPath.cubicTo(1131.64f, 341.14f, 1129.78f, 344.46f, 1128.01f, 345.7f);
                mPath.cubicTo(1125.89f, 347.2f, 1124.51f, 346.11f, 1122.12f, 347.62f);
                mPath.cubicTo(1122.12f, 347.62f, 1116.12f, 352.9f, 1116.12f, 352.9f);
                mPath.cubicTo(1111.47f, 356.36f, 1105.95f, 358.76f, 1101.83f, 362.97f);
                mPath.cubicTo(1099.84f, 365.0f, 1095.85f, 372.11f, 1094.52f, 374.87f);
                mPath.cubicTo(1093.4f, 373.75f, 1091.5f, 371.93f, 1090.68f, 370.67f);
                mPath.cubicTo(1089.51f, 368.87f, 1089.87f, 367.82f, 1088.34f, 365.89f);
                mPath.cubicTo(1087.29f, 364.58f, 1085.7f, 363.42f, 1084.32f, 362.48f);
                mPath.cubicTo(1084.32f, 362.48f, 1081.32f, 360.62f, 1081.32f, 360.62f);
                mPath.cubicTo(1078.69f, 359.29f, 1075.38f, 360.33f, 1075.11f, 363.49f);
                mPath.cubicTo(1074.97f, 365.07f, 1076.51f, 367.06f, 1076.65f, 373.07f);
                mPath.cubicTo(1076.52f, 374.84f, 1076.4f, 379.41f, 1076.65f, 380.87f);
                mPath.cubicTo(1077.46f, 383.48f, 1079.49f, 384.78f, 1079.31f, 386.87f);
                mPath.cubicTo(1079.19f, 388.27f, 1077.24f, 390.83f, 1076.52f, 392.27f);
                mPath.cubicTo(1076.52f, 392.27f, 1072.77f, 401.87f, 1072.77f, 401.87f);
                mPath.cubicTo(1071.77f, 403.94f, 1070.32f, 406.09f, 1070.97f, 408.47f);
                mPath.cubicTo(1072.07f, 412.55f, 1074.42f, 413.19f, 1077.72f, 414.78f);
                mPath.cubicTo(1079.09f, 415.43f, 1079.8f, 415.92f, 1081.32f, 416.4f);
                mPath.cubicTo(1082.87f, 416.89f, 1084.63f, 416.89f, 1085.96f, 417.92f);
                mPath.cubicTo(1087.5f, 419.1f, 1087.71f, 420.85f, 1089.36f, 422.77f);
                mPath.cubicTo(1089.36f, 422.77f, 1093.15f, 426.5f, 1093.15f, 426.5f);
                mPath.cubicTo(1093.15f, 426.5f, 1098.12f, 432.48f, 1098.12f, 432.48f);
                mPath.cubicTo(1102.47f, 429.73f, 1108.74f, 425.06f, 1111.16f, 420.48f);
                mPath.cubicTo(1111.16f, 420.48f, 1113.38f, 414.48f, 1113.38f, 414.48f);
                mPath.cubicTo(1114.61f, 412.13f, 1116.11f, 411.18f, 1117.24f, 408.47f);
                mPath.cubicTo(1118.55f, 405.35f, 1118.58f, 402.84f, 1121.58f, 400.45f);
                mPath.cubicTo(1122.94f, 399.37f, 1126.02f, 397.79f, 1127.77f, 397.52f);
                mPath.cubicTo(1130.03f, 397.43f, 1131.56f, 398.27f, 1134.11f, 397.52f);
                mPath.cubicTo(1135.57f, 396.92f, 1138.6f, 394.82f, 1139.84f, 395.09f);
                mPath.cubicTo(1141.08f, 395.35f, 1142.73f, 397.86f, 1143.49f, 398.87f);
                mPath.cubicTo(1146.3f, 402.61f, 1149.9f, 405.95f, 1149.68f, 410.87f);
                mPath.cubicTo(1149.55f, 414.01f, 1144.38f, 423.97f, 1142.28f, 426.38f);
                mPath.cubicTo(1140.62f, 428.28f, 1138.94f, 428.87f, 1137.62f, 431.33f);
                mPath.cubicTo(1135.84f, 434.64f, 1137.15f, 436.1f, 1137.04f, 439.08f);
                mPath.cubicTo(1136.95f, 441.36f, 1135.9f, 443.5f, 1135.31f, 445.68f);
                mPath.cubicTo(1135.31f, 445.68f, 1146.11f, 444.48f, 1146.11f, 444.48f);
                mPath.cubicTo(1144.93f, 445.97f, 1143.62f, 447.48f, 1142.94f, 449.28f);
                mPath.cubicTo(1141.38f, 453.37f, 1143.11f, 455.67f, 1137.11f, 455.88f);
                mPath.cubicTo(1137.11f, 455.88f, 1135.91f, 464.28f, 1135.91f, 464.28f);
                mPath.cubicTo(1135.91f, 464.28f, 1140.48f, 463.67f, 1140.48f, 463.67f);
                mPath.cubicTo(1140.48f, 463.67f, 1144.94f, 458.86f, 1144.94f, 458.86f);
                mPath.cubicTo(1144.94f, 458.86f, 1152.28f, 453.31f, 1152.28f, 453.31f);
                mPath.cubicTo(1152.28f, 453.31f, 1156.12f, 445.09f, 1156.12f, 445.09f);
                mPath.cubicTo(1156.12f, 445.09f, 1162.86f, 438.98f, 1162.86f, 438.98f);
                mPath.cubicTo(1162.86f, 438.98f, 1166.56f, 435.01f, 1166.56f, 435.01f);
                mPath.cubicTo(1166.56f, 435.01f, 1176.2f, 430.37f, 1176.2f, 430.37f);
                mPath.cubicTo(1176.2f, 430.37f, 1177.91f, 424.68f, 1177.91f, 424.68f);
                mPath.cubicTo(1182.44f, 424.67f, 1193.95f, 422.58f, 1197.65f, 420.39f);
                mPath.cubicTo(1199.13f, 419.52f, 1200.6f, 417.71f, 1201.54f, 416.28f);
                mPath.cubicTo(1204.4f, 411.86f, 1203.98f, 405.44f, 1209.3f, 400.23f);
                mPath.cubicTo(1210.97f, 398.6f, 1212.5f, 398.5f, 1214.03f, 396.84f);
                mPath.cubicTo(1215.55f, 395.18f, 1216.16f, 392.82f, 1217.73f, 391.37f);
                mPath.cubicTo(1219.23f, 389.99f, 1221.32f, 389.64f, 1222.67f, 388.63f);
                mPath.cubicTo(1224.73f, 387.07f, 1228.14f, 380.48f, 1228.14f, 377.87f);
                mPath.cubicTo(1228.12f, 374.04f, 1225.58f, 367.73f, 1223.12f, 364.86f);
                mPath.cubicTo(1223.12f, 364.86f, 1219.41f, 361.56f, 1219.41f, 361.56f);
                mPath.cubicTo(1217.91f, 360.04f, 1214.21f, 354.64f, 1213.49f, 352.66f);
                mPath.cubicTo(1212.55f, 350.1f, 1213.9f, 346.59f, 1212.97f, 343.66f);
                mPath.cubicTo(1212.36f, 341.77f, 1209.2f, 337.68f, 1207.9f, 335.86f);
                mPath.cubicTo(1207.9f, 335.86f, 1199.58f, 324.46f, 1199.58f, 324.46f);
                mPath.cubicTo(1198.51f, 323.04f, 1196.4f, 319.92f, 1195.11f, 318.96f);
                mPath.cubicTo(1193.78f, 317.98f, 1192.08f, 317.62f, 1190.5f, 317.26f);
                mPath.cubicTo(1190.5f, 317.26f, 1187.51f, 323.26f, 1187.51f, 323.26f);
                mPath.cubicTo(1187.51f, 323.26f, 1178.51f, 311.86f, 1178.51f, 311.86f);
                mPath.cubicTo(1178.51f, 311.86f, 1178.51f, 311.86f, 1178.51f, 311.86f);
                mPath.close();
                mPath.moveTo(1178.51f, 311.86f);
                break;
            case 19:
                mPath.moveTo(992.54f, 1021.78f);
                mPath.cubicTo(992.54f, 1021.78f, 995.54f, 1023.3f, 995.54f, 1023.3f);
                mPath.cubicTo(1001.79f, 1025.13f, 999.06f, 1016.78f, 998.54f, 1013.98f);
                mPath.cubicTo(994.27f, 1014.32f, 993.41f, 1018.08f, 992.54f, 1021.78f);
                mPath.close();
                mPath.moveTo(992.54f, 1021.78f);
                break;
        }
    }

    private void renderByProvince3(int index) {
        switch (index) {
            case 20:
                mPath.moveTo(1047.26f, 29.21f);
                mPath.cubicTo(1043.76f, 35.29f, 1042.56f, 32.0f, 1043.53f, 39.41f);
                mPath.cubicTo(1046.56f, 39.01f, 1053.46f, 37.88f, 1055.77f, 40.35f);
                mPath.cubicTo(1057.21f, 41.89f, 1056.64f, 46.29f, 1056.78f, 48.41f);
                mPath.cubicTo(1056.78f, 48.41f, 1057.27f, 52.61f, 1057.27f, 52.61f);
                mPath.cubicTo(1057.63f, 59.0f, 1055.6f, 59.66f, 1052.25f, 64.01f);
                mPath.cubicTo(1052.25f, 64.01f, 1048.47f, 70.01f, 1048.47f, 70.01f);
                mPath.cubicTo(1045.97f, 74.44f, 1045.52f, 79.11f, 1044.0f, 83.82f);
                mPath.cubicTo(1042.59f, 88.19f, 1041.85f, 87.38f, 1040.32f, 94.02f);
                mPath.cubicTo(1039.86f, 96.03f, 1039.56f, 98.11f, 1038.76f, 100.02f);
                mPath.cubicTo(1036.89f, 104.48f, 1032.55f, 108.91f, 1039.33f, 111.42f);
                mPath.cubicTo(1039.33f, 111.42f, 1037.18f, 119.63f, 1037.18f, 119.63f);
                mPath.cubicTo(1037.18f, 119.63f, 1026.16f, 125.48f, 1026.16f, 125.48f);
                mPath.cubicTo(1026.16f, 125.48f, 1021.74f, 130.57f, 1021.74f, 130.57f);
                mPath.cubicTo(1021.74f, 130.57f, 1010.53f, 139.61f, 1010.53f, 139.61f);
                mPath.cubicTo(1010.53f, 139.61f, 1003.94f, 138.62f, 1003.94f, 138.62f);
                mPath.cubicTo(1003.94f, 138.62f, 999.14f, 138.23f, 999.14f, 138.23f);
                mPath.cubicTo(999.14f, 138.23f, 987.14f, 133.63f, 987.14f, 133.63f);
                mPath.cubicTo(987.14f, 133.63f, 978.4f, 165.43f, 978.4f, 165.43f);
                mPath.cubicTo(978.4f, 165.43f, 973.17f, 175.03f, 973.17f, 175.03f);
                mPath.cubicTo(973.17f, 175.03f, 974.2f, 184.03f, 974.2f, 184.03f);
                mPath.cubicTo(974.2f, 184.03f, 970.34f, 196.04f, 970.34f, 196.04f);
                mPath.cubicTo(972.12f, 196.98f, 977.1f, 200.43f, 978.74f, 200.23f);
                mPath.cubicTo(980.64f, 200.0f, 982.4f, 197.49f, 984.14f, 196.4f);
                mPath.cubicTo(986.18f, 195.11f, 987.45f, 195.69f, 989.54f, 195.02f);
                mPath.cubicTo(991.87f, 194.27f, 992.51f, 193.13f, 995.54f, 193.08f);
                mPath.cubicTo(1002.47f, 192.98f, 1003.95f, 197.21f, 1009.33f, 199.64f);
                mPath.cubicTo(1010.56f, 196.8f, 1014.63f, 189.13f, 1016.73f, 187.22f);
                mPath.cubicTo(1018.32f, 185.78f, 1019.41f, 185.99f, 1021.33f, 185.64f);
                mPath.cubicTo(1025.36f, 184.92f, 1028.02f, 184.02f, 1032.08f, 186.09f);
                mPath.cubicTo(1035.05f, 187.61f, 1035.3f, 190.39f, 1039.93f, 193.2f);
                mPath.cubicTo(1039.93f, 193.2f, 1047.73f, 197.7f, 1047.73f, 197.7f);
                mPath.cubicTo(1047.73f, 197.7f, 1053.73f, 202.44f, 1053.73f, 202.44f);
                mPath.cubicTo(1056.84f, 204.59f, 1057.75f, 203.96f, 1060.52f, 207.45f);
                mPath.cubicTo(1064.35f, 212.26f, 1065.1f, 216.86f, 1066.93f, 222.44f);
                mPath.cubicTo(1061.89f, 223.88f, 1060.45f, 225.89f, 1054.33f, 226.04f);
                mPath.cubicTo(1048.86f, 226.16f, 1047.95f, 225.14f, 1044.73f, 224.97f);
                mPath.cubicTo(1044.73f, 224.97f, 1034.53f, 226.17f, 1034.53f, 226.17f);
                mPath.cubicTo(1029.37f, 226.95f, 1024.7f, 232.02f, 1023.13f, 232.66f);
                mPath.cubicTo(1021.29f, 233.4f, 1020.09f, 232.24f, 1018.33f, 232.0f);
                mPath.cubicTo(1016.86f, 231.81f, 1015.01f, 232.35f, 1013.53f, 232.64f);
                mPath.cubicTo(1013.53f, 232.64f, 1013.53f, 239.84f, 1013.53f, 239.84f);
                mPath.cubicTo(1011.01f, 240.05f, 1001.52f, 241.16f, 999.84f, 242.33f);
                mPath.cubicTo(997.4f, 244.03f, 993.16f, 251.91f, 992.32f, 254.85f);
                mPath.cubicTo(991.64f, 257.24f, 992.29f, 258.92f, 991.33f, 260.85f);
                mPath.cubicTo(989.95f, 263.59f, 986.44f, 265.72f, 984.14f, 267.64f);
                mPath.cubicTo(982.02f, 269.42f, 978.99f, 272.92f, 976.94f, 274.09f);
                mPath.cubicTo(975.58f, 274.86f, 968.07f, 275.92f, 966.14f, 276.19f);
                mPath.cubicTo(963.15f, 276.43f, 961.81f, 274.96f, 959.55f, 276.19f);
                mPath.cubicTo(956.87f, 277.81f, 954.83f, 282.78f, 952.8f, 285.45f);
                mPath.cubicTo(947.53f, 292.43f, 946.94f, 290.42f, 942.75f, 293.98f);
                mPath.cubicTo(941.25f, 295.25f, 939.03f, 297.86f, 937.35f, 298.6f);
                mPath.cubicTo(936.15f, 299.03f, 932.87f, 298.66f, 931.35f, 298.6f);
                mPath.cubicTo(928.83f, 298.64f, 919.46f, 297.77f, 917.55f, 296.84f);
                mPath.cubicTo(914.3f, 295.26f, 912.61f, 291.55f, 905.55f, 291.45f);
                mPath.cubicTo(903.32f, 291.43f, 900.94f, 291.26f, 899.01f, 292.59f);
                mPath.cubicTo(897.12f, 293.88f, 896.2f, 296.07f, 895.2f, 298.05f);
                mPath.cubicTo(892.7f, 303.07f, 889.04f, 314.49f, 891.97f, 319.66f);
                mPath.cubicTo(894.44f, 324.02f, 898.88f, 326.28f, 900.43f, 328.24f);
                mPath.cubicTo(901.78f, 330.27f, 902.19f, 333.7f, 900.43f, 335.69f);
                mPath.cubicTo(900.43f, 335.69f, 894.13f, 341.96f, 894.13f, 341.96f);
                mPath.cubicTo(890.67f, 344.26f, 886.32f, 345.12f, 882.94f, 348.57f);
                mPath.cubicTo(878.83f, 352.77f, 876.15f, 358.7f, 873.63f, 361.67f);
                mPath.cubicTo(871.92f, 363.68f, 865.7f, 369.98f, 863.56f, 371.08f);
                mPath.cubicTo(861.1f, 372.34f, 859.87f, 371.36f, 856.96f, 372.8f);
                mPath.cubicTo(853.5f, 374.52f, 850.55f, 377.6f, 846.76f, 378.69f);
                mPath.cubicTo(844.75f, 379.27f, 840.63f, 379.05f, 838.36f, 379.07f);
                mPath.cubicTo(838.36f, 379.07f, 830.56f, 379.92f, 830.56f, 379.92f);
                mPath.cubicTo(830.56f, 379.92f, 825.16f, 379.3f, 825.16f, 379.3f);
                mPath.cubicTo(825.16f, 379.3f, 811.37f, 381.42f, 811.37f, 381.42f);
                mPath.cubicTo(807.67f, 381.64f, 805.19f, 380.35f, 802.97f, 380.61f);
                mPath.cubicTo(802.97f, 380.61f, 792.77f, 384.53f, 792.77f, 384.53f);
                mPath.cubicTo(789.84f, 385.42f, 788.31f, 384.78f, 786.17f, 385.37f);
                mPath.cubicTo(786.17f, 385.37f, 775.37f, 390.92f, 775.37f, 390.92f);
                mPath.cubicTo(775.37f, 390.92f, 756.78f, 400.22f, 756.78f, 400.22f);
                mPath.cubicTo(751.71f, 402.76f, 746.99f, 405.4f, 741.18f, 405.47f);
                mPath.cubicTo(741.18f, 405.47f, 734.58f, 405.47f, 734.58f, 405.47f);
                mPath.cubicTo(734.58f, 405.47f, 734.58f, 398.87f, 734.58f, 398.87f);
                mPath.cubicTo(734.58f, 398.87f, 726.18f, 400.49f, 726.18f, 400.49f);
                mPath.cubicTo(721.31f, 401.19f, 713.34f, 400.35f, 708.78f, 398.51f);
                mPath.cubicTo(708.78f, 398.51f, 693.79f, 389.76f, 693.79f, 389.76f);
                mPath.cubicTo(690.8f, 388.7f, 685.09f, 389.78f, 680.01f, 387.21f);
                mPath.cubicTo(676.33f, 385.36f, 676.91f, 381.66f, 673.33f, 379.15f);
                mPath.cubicTo(670.59f, 377.23f, 666.36f, 376.87f, 663.19f, 375.74f);
                mPath.cubicTo(659.08f, 374.27f, 657.68f, 372.79f, 652.39f, 371.67f);
                mPath.cubicTo(649.67f, 371.09f, 644.55f, 371.24f, 641.59f, 371.27f);
                mPath.cubicTo(641.59f, 371.27f, 636.2f, 371.59f, 636.2f, 371.59f);
                mPath.cubicTo(634.14f, 371.77f, 633.15f, 371.18f, 630.8f, 371.59f);
                mPath.cubicTo(626.37f, 371.98f, 625.13f, 373.47f, 619.4f, 373.01f);
                mPath.cubicTo(619.4f, 373.01f, 614.0f, 371.98f, 614.0f, 371.98f);
                mPath.cubicTo(614.0f, 371.98f, 602.0f, 370.99f, 602.0f, 370.99f);
                mPath.cubicTo(602.0f, 370.99f, 594.8f, 369.14f, 594.8f, 369.14f);
                mPath.cubicTo(594.8f, 369.14f, 587.6f, 368.33f, 587.6f, 368.33f);
                mPath.cubicTo(587.6f, 368.33f, 568.41f, 363.47f, 568.41f, 363.47f);
                mPath.cubicTo(568.41f, 363.47f, 576.61f, 387.47f, 576.61f, 387.47f);
                mPath.cubicTo(576.61f, 387.47f, 580.03f, 398.27f, 580.03f, 398.27f);
                mPath.cubicTo(580.03f, 398.27f, 576.89f, 409.07f, 576.89f, 409.07f);
                mPath.cubicTo(576.89f, 409.07f, 580.33f, 413.88f, 580.33f, 413.88f);
                mPath.cubicTo(580.33f, 413.88f, 587.27f, 422.28f, 587.27f, 422.28f);
                mPath.cubicTo(587.27f, 422.28f, 590.28f, 426.48f, 590.28f, 426.48f);
                mPath.cubicTo(590.28f, 426.48f, 588.2f, 436.08f, 588.2f, 436.08f);
                mPath.cubicTo(588.2f, 436.08f, 592.4f, 436.08f, 592.4f, 436.08f);
                mPath.cubicTo(598.92f, 436.04f, 597.78f, 433.79f, 602.03f, 430.24f);
                mPath.cubicTo(604.83f, 427.9f, 616.98f, 424.73f, 620.6f, 424.97f);
                mPath.cubicTo(622.08f, 425.07f, 624.52f, 425.98f, 626.0f, 426.48f);
                mPath.cubicTo(627.46f, 426.97f, 629.48f, 427.53f, 630.62f, 428.58f);
                mPath.cubicTo(633.07f, 430.83f, 633.73f, 435.65f, 632.15f, 438.48f);
                mPath.cubicTo(632.15f, 438.48f, 627.2f, 446.27f, 627.2f, 446.27f);
                mPath.cubicTo(623.11f, 452.72f, 618.86f, 449.57f, 615.2f, 457.68f);
                mPath.cubicTo(617.02f, 457.68f, 619.58f, 457.49f, 621.2f, 458.3f);
                mPath.cubicTo(623.22f, 459.31f, 624.94f, 461.79f, 627.2f, 463.17f);
                mPath.cubicTo(628.83f, 464.18f, 630.84f, 464.3f, 632.21f, 465.74f);
                mPath.cubicTo(634.01f, 467.64f, 633.37f, 469.49f, 636.82f, 472.23f);
                mPath.cubicTo(636.82f, 472.23f, 646.58f, 477.91f, 646.58f, 477.91f);
                mPath.cubicTo(648.22f, 479.86f, 645.74f, 482.79f, 647.28f, 485.89f);
                mPath.cubicTo(648.96f, 489.29f, 655.12f, 492.69f, 658.39f, 494.94f);
                mPath.cubicTo(663.31f, 498.3f, 668.74f, 500.38f, 673.35f, 495.48f);
                mPath.cubicTo(674.36f, 494.41f, 675.23f, 493.43f, 675.29f, 491.89f);
                mPath.cubicTo(675.35f, 490.44f, 674.0f, 487.28f, 673.39f, 485.89f);
                mPath.cubicTo(673.39f, 485.89f, 678.19f, 483.79f, 678.19f, 483.79f);
                mPath.cubicTo(680.07f, 483.34f, 687.03f, 483.33f, 688.99f, 483.79f);
                mPath.cubicTo(691.52f, 484.21f, 695.7f, 486.55f, 697.99f, 486.17f);
                mPath.cubicTo(701.35f, 485.61f, 704.7f, 480.94f, 707.58f, 479.2f);
                mPath.cubicTo(707.58f, 479.2f, 721.38f, 475.09f, 721.38f, 475.09f);
                mPath.cubicTo(721.97f, 477.59f, 722.87f, 480.0f, 724.08f, 482.29f);
                mPath.cubicTo(724.95f, 483.94f, 726.41f, 485.71f, 725.97f, 487.69f);
                mPath.cubicTo(725.67f, 489.0f, 723.66f, 491.7f, 722.89f, 493.09f);
                mPath.cubicTo(721.21f, 496.12f, 720.51f, 499.38f, 718.25f, 502.09f);
                mPath.cubicTo(716.22f, 504.53f, 710.74f, 508.82f, 710.22f, 511.69f);
                mPath.cubicTo(709.94f, 513.32f, 710.67f, 515.56f, 711.18f, 517.09f);
                mPath.cubicTo(707.09f, 518.88f, 706.21f, 519.15f, 706.91f, 523.69f);
                mPath.cubicTo(707.07f, 524.78f, 707.16f, 525.96f, 708.03f, 526.76f);
                mPath.cubicTo(709.28f, 527.91f, 711.21f, 527.37f, 713.41f, 529.28f);
                mPath.cubicTo(715.27f, 530.9f, 716.77f, 533.62f, 719.04f, 535.21f);
                mPath.cubicTo(720.71f, 536.38f, 727.25f, 539.42f, 729.18f, 539.29f);
                mPath.cubicTo(730.99f, 539.16f, 732.18f, 537.86f, 735.18f, 537.56f);
                mPath.cubicTo(738.6f, 537.22f, 742.07f, 537.32f, 745.38f, 536.1f);
                mPath.cubicTo(745.38f, 536.1f, 751.98f, 532.77f, 751.98f, 532.77f);
                mPath.cubicTo(756.9f, 530.86f, 762.37f, 532.47f, 764.21f, 527.84f);
                mPath.cubicTo(764.71f, 526.6f, 764.56f, 523.92f, 764.57f, 522.49f);
                mPath.cubicTo(764.66f, 515.82f, 766.96f, 517.46f, 766.97f, 509.29f);
                mPath.cubicTo(766.99f, 501.0f, 768.44f, 492.31f, 774.3f, 485.94f);
                mPath.cubicTo(778.76f, 481.09f, 786.53f, 475.24f, 790.81f, 483.49f);
                mPath.cubicTo(791.25f, 484.32f, 791.83f, 485.57f, 792.0f, 486.49f);
                mPath.cubicTo(792.34f, 488.5f, 790.86f, 491.73f, 790.12f, 493.69f);
                mPath.cubicTo(786.94f, 502.04f, 787.57f, 498.03f, 785.81f, 507.49f);
                mPath.cubicTo(785.52f, 508.99f, 784.74f, 511.89f, 785.33f, 513.26f);
                mPath.cubicTo(787.15f, 517.57f, 794.74f, 515.76f, 798.77f, 517.57f);
                mPath.cubicTo(801.79f, 518.94f, 802.94f, 521.16f, 805.97f, 522.85f);
                mPath.cubicTo(805.97f, 522.85f, 817.34f, 526.95f, 817.34f, 526.95f);
                mPath.cubicTo(820.28f, 528.45f, 820.67f, 531.08f, 822.39f, 532.06f);
                mPath.cubicTo(823.98f, 532.96f, 827.94f, 531.69f, 829.96f, 531.44f);
                mPath.cubicTo(829.96f, 531.44f, 834.63f, 531.44f, 834.63f, 531.44f);
                mPath.cubicTo(837.15f, 530.57f, 836.96f, 526.38f, 838.02f, 524.32f);
                mPath.cubicTo(839.22f, 521.98f, 841.4f, 521.34f, 843.76f, 520.69f);
                mPath.cubicTo(843.21f, 518.33f, 841.98f, 515.91f, 842.09f, 513.49f);
                mPath.cubicTo(842.3f, 508.85f, 845.54f, 505.29f, 847.84f, 501.49f);
                mPath.cubicTo(849.31f, 499.05f, 850.85f, 495.8f, 852.87f, 493.89f);
                mPath.cubicTo(854.92f, 491.95f, 856.58f, 491.67f, 859.26f, 488.86f);
                mPath.cubicTo(859.26f, 488.86f, 866.78f, 480.49f, 866.78f, 480.49f);
                mPath.cubicTo(867.91f, 478.9f, 868.64f, 476.73f, 870.28f, 475.67f);
                mPath.cubicTo(871.48f, 474.91f, 875.05f, 474.41f, 876.76f, 473.89f);
                mPath.cubicTo(876.76f, 473.89f, 879.76f, 478.69f, 879.76f, 478.69f);
                mPath.cubicTo(879.76f, 478.69f, 890.55f, 468.48f, 890.55f, 468.48f);
                mPath.cubicTo(890.55f, 468.48f, 892.35f, 473.89f, 892.35f, 473.89f);
                mPath.cubicTo(894.15f, 473.37f, 895.93f, 472.81f, 897.11f, 471.25f);
                mPath.cubicTo(898.15f, 469.88f, 898.45f, 467.75f, 899.85f, 466.59f);
                mPath.cubicTo(902.06f, 464.77f, 908.13f, 464.88f, 910.95f, 464.88f);
                mPath.cubicTo(911.66f, 459.66f, 913.37f, 455.89f, 915.4f, 451.08f);
                mPath.cubicTo(916.66f, 448.11f, 917.43f, 445.89f, 920.55f, 444.38f);
                mPath.cubicTo(924.74f, 442.47f, 925.89f, 445.24f, 928.29f, 444.38f);
                mPath.cubicTo(929.53f, 443.88f, 930.87f, 442.04f, 932.0f, 441.13f);
                mPath.cubicTo(933.29f, 440.09f, 936.93f, 438.4f, 938.55f, 437.99f);
                mPath.cubicTo(941.92f, 437.15f, 944.07f, 439.36f, 946.34f, 439.01f);
                mPath.cubicTo(948.0f, 438.76f, 949.27f, 437.29f, 950.54f, 436.31f);
                mPath.cubicTo(953.5f, 434.06f, 957.71f, 432.87f, 958.94f, 431.04f);
                mPath.cubicTo(959.44f, 430.29f, 959.63f, 429.16f, 959.78f, 428.28f);
                mPath.cubicTo(960.86f, 421.98f, 956.02f, 420.67f, 954.05f, 415.68f);
                mPath.cubicTo(953.2f, 413.49f, 953.54f, 404.2f, 953.54f, 401.27f);
                mPath.cubicTo(953.54f, 401.27f, 958.94f, 400.67f, 958.94f, 400.67f);
                mPath.cubicTo(958.94f, 394.83f, 959.95f, 389.35f, 963.52f, 384.48f);
                mPath.cubicTo(965.09f, 382.35f, 967.53f, 379.79f, 970.33f, 381.24f);
                mPath.cubicTo(975.07f, 383.7f, 973.33f, 387.85f, 975.65f, 391.66f);
                mPath.cubicTo(977.8f, 395.18f, 979.95f, 394.92f, 983.54f, 395.87f);
                mPath.cubicTo(986.17f, 391.85f, 992.44f, 383.82f, 997.34f, 382.77f);
                mPath.cubicTo(999.77f, 382.25f, 1002.08f, 384.25f, 1004.54f, 383.86f);
                mPath.cubicTo(1008.22f, 383.27f, 1007.15f, 380.9f, 1014.73f, 380.87f);
                mPath.cubicTo(1015.51f, 377.02f, 1018.97f, 366.9f, 1021.57f, 364.3f);
                mPath.cubicTo(1022.77f, 363.09f, 1025.18f, 361.98f, 1026.73f, 360.93f);
                mPath.cubicTo(1029.4f, 359.13f, 1032.2f, 356.54f, 1035.73f, 357.3f);
                mPath.cubicTo(1041.83f, 358.62f, 1041.43f, 364.49f, 1044.36f, 367.3f);
                mPath.cubicTo(1046.68f, 369.52f, 1049.82f, 369.91f, 1051.93f, 373.09f);
                mPath.cubicTo(1055.78f, 378.92f, 1052.04f, 381.03f, 1052.27f, 385.07f);
                mPath.cubicTo(1052.38f, 387.06f, 1054.76f, 390.63f, 1056.32f, 391.84f);
                mPath.cubicTo(1059.64f, 394.4f, 1062.48f, 392.69f, 1065.73f, 392.62f);
                mPath.cubicTo(1070.4f, 392.53f, 1076.97f, 395.63f, 1079.31f, 388.07f);
                mPath.cubicTo(1080.21f, 385.15f, 1077.54f, 383.41f, 1076.77f, 380.27f);
                mPath.cubicTo(1076.77f, 380.27f, 1076.47f, 370.07f, 1076.47f, 370.07f);
                mPath.cubicTo(1076.25f, 367.43f, 1075.18f, 364.67f, 1074.12f, 362.27f);
                mPath.cubicTo(1074.12f, 362.27f, 1078.92f, 358.67f, 1078.92f, 358.67f);
                mPath.cubicTo(1082.46f, 361.25f, 1084.79f, 362.28f, 1087.79f, 365.87f);
                mPath.cubicTo(1091.37f, 370.15f, 1088.94f, 370.9f, 1095.12f, 374.87f);
                mPath.cubicTo(1097.26f, 370.74f, 1098.37f, 366.96f, 1101.77f, 363.52f);
                mPath.cubicTo(1103.37f, 361.91f, 1108.74f, 357.83f, 1110.72f, 356.7f);
                mPath.cubicTo(1110.72f, 356.7f, 1115.94f, 354.04f, 1115.94f, 354.04f);
                mPath.cubicTo(1120.29f, 350.62f, 1120.72f, 345.82f, 1127.52f, 347.26f);
                mPath.cubicTo(1127.52f, 347.26f, 1133.52f, 339.65f, 1133.52f, 339.65f);
                mPath.cubicTo(1133.52f, 339.65f, 1138.61f, 337.65f, 1138.61f, 337.65f);
                mPath.cubicTo(1138.61f, 337.65f, 1141.31f, 332.26f, 1141.31f, 332.26f);
                mPath.cubicTo(1145.22f, 333.46f, 1154.01f, 334.73f, 1157.02f, 331.28f);
                mPath.cubicTo(1158.31f, 329.8f, 1158.56f, 326.79f, 1159.81f, 325.32f);
                mPath.cubicTo(1161.31f, 323.55f, 1163.43f, 324.06f, 1165.01f, 322.75f);
                mPath.cubicTo(1168.34f, 319.99f, 1167.16f, 314.83f, 1166.51f, 311.26f);
                mPath.cubicTo(1166.51f, 311.26f, 1156.91f, 307.66f, 1156.91f, 307.66f);
                mPath.cubicTo(1157.89f, 306.64f, 1159.29f, 305.35f, 1159.87f, 304.06f);
                mPath.cubicTo(1161.97f, 299.47f, 1156.2f, 294.58f, 1154.58f, 290.85f);
                mPath.cubicTo(1153.12f, 287.5f, 1151.75f, 282.2f, 1147.31f, 281.54f);
                mPath.cubicTo(1142.72f, 280.86f, 1140.8f, 285.25f, 1137.71f, 287.51f);
                mPath.cubicTo(1135.02f, 289.47f, 1132.44f, 289.05f, 1129.31f, 289.05f);
                mPath.cubicTo(1129.31f, 287.3f, 1129.51f, 284.64f, 1128.7f, 283.11f);
                mPath.cubicTo(1127.68f, 281.18f, 1125.94f, 280.74f, 1125.3f, 278.25f);
                mPath.cubicTo(1124.91f, 276.69f, 1125.4f, 275.44f, 1124.55f, 272.85f);
                mPath.cubicTo(1123.86f, 270.79f, 1122.06f, 267.7f, 1122.06f, 265.65f);
                mPath.cubicTo(1122.06f, 263.02f, 1124.11f, 260.8f, 1123.28f, 257.85f);
                mPath.cubicTo(1122.39f, 254.66f, 1120.21f, 253.48f, 1118.04f, 251.45f);
                mPath.cubicTo(1115.69f, 249.24f, 1115.09f, 246.86f, 1113.49f, 245.86f);
                mPath.cubicTo(1112.17f, 245.04f, 1109.3f, 245.25f, 1107.72f, 245.25f);
                mPath.cubicTo(1111.22f, 240.88f, 1114.56f, 236.32f, 1120.32f, 240.44f);
                mPath.cubicTo(1120.32f, 240.44f, 1124.26f, 237.83f, 1124.26f, 237.83f);
                mPath.cubicTo(1124.26f, 237.83f, 1131.11f, 241.04f, 1131.11f, 241.04f);
                mPath.cubicTo(1132.03f, 239.36f, 1132.75f, 238.23f, 1132.66f, 236.24f);
                mPath.cubicTo(1132.75f, 234.89f, 1132.05f, 232.93f, 1132.66f, 231.76f);
                mPath.cubicTo(1133.41f, 229.88f, 1138.16f, 228.8f, 1138.28f, 224.84f);
                mPath.cubicTo(1138.36f, 221.88f, 1133.99f, 218.96f, 1134.46f, 216.46f);
                mPath.cubicTo(1134.74f, 214.96f, 1137.74f, 212.79f, 1138.89f, 211.62f);
                mPath.cubicTo(1141.46f, 209.0f, 1142.29f, 207.35f, 1143.11f, 203.84f);
                mPath.cubicTo(1143.11f, 203.84f, 1138.91f, 202.64f, 1138.91f, 202.64f);
                mPath.cubicTo(1138.91f, 202.64f, 1137.5f, 205.56f, 1137.5f, 205.56f);
                mPath.cubicTo(1136.62f, 206.87f, 1135.67f, 207.55f, 1134.11f, 207.85f);
                mPath.cubicTo(1129.79f, 208.69f, 1130.15f, 205.03f, 1125.7f, 200.9f);
                mPath.cubicTo(1121.69f, 197.16f, 1118.89f, 198.38f, 1118.38f, 191.84f);
                mPath.cubicTo(1117.78f, 184.02f, 1123.73f, 182.83f, 1127.99f, 178.01f);
                mPath.cubicTo(1130.35f, 175.33f, 1130.26f, 173.68f, 1131.71f, 171.46f);
                mPath.cubicTo(1133.35f, 168.94f, 1135.24f, 168.35f, 1137.05f, 165.93f);
                mPath.cubicTo(1137.05f, 165.93f, 1144.18f, 154.08f, 1144.18f, 154.08f);
                mPath.cubicTo(1145.7f, 152.14f, 1147.8f, 150.75f, 1149.71f, 149.23f);
                mPath.cubicTo(1150.4f, 154.3f, 1151.0f, 156.62f, 1155.11f, 160.03f);
                mPath.cubicTo(1155.11f, 160.03f, 1155.11f, 142.03f, 1155.11f, 142.03f);
                mPath.cubicTo(1155.11f, 142.03f, 1156.91f, 126.42f, 1156.91f, 126.42f);
                mPath.cubicTo(1162.89f, 127.14f, 1163.26f, 124.73f, 1162.86f, 119.22f);
                mPath.cubicTo(1162.86f, 119.22f, 1158.79f, 99.43f, 1158.79f, 99.43f);
                mPath.cubicTo(1158.33f, 95.32f, 1159.6f, 95.07f, 1161.42f, 91.62f);
                mPath.cubicTo(1161.42f, 91.62f, 1165.93f, 80.82f, 1165.93f, 80.82f);
                mPath.cubicTo(1166.62f, 78.57f, 1165.49f, 76.98f, 1165.93f, 74.82f);
                mPath.cubicTo(1166.27f, 72.86f, 1169.02f, 69.05f, 1167.1f, 65.21f);
                mPath.cubicTo(1166.08f, 63.19f, 1158.47f, 56.9f, 1156.31f, 55.17f);
                mPath.cubicTo(1155.21f, 54.3f, 1154.6f, 53.97f, 1153.31f, 53.45f);
                mPath.cubicTo(1144.74f, 49.96f, 1145.99f, 56.91f, 1138.91f, 61.33f);
                mPath.cubicTo(1136.71f, 62.71f, 1131.26f, 65.04f, 1128.71f, 65.2f);
                mPath.cubicTo(1126.12f, 65.59f, 1124.81f, 64.54f, 1122.72f, 65.2f);
                mPath.cubicTo(1118.43f, 66.2f, 1118.76f, 69.43f, 1111.32f, 69.41f);
                mPath.cubicTo(1110.2f, 69.41f, 1108.76f, 69.44f, 1107.72f, 69.05f);
                mPath.cubicTo(1103.98f, 67.67f, 1102.66f, 63.71f, 1101.2f, 60.41f);
                mPath.cubicTo(1099.72f, 57.05f, 1095.39f, 49.45f, 1095.55f, 46.01f);
                mPath.cubicTo(1095.61f, 44.66f, 1096.4f, 43.06f, 1096.92f, 41.81f);
                mPath.cubicTo(1090.56f, 42.43f, 1092.75f, 39.44f, 1083.72f, 37.01f);
                mPath.cubicTo(1082.52f, 39.8f, 1081.05f, 44.26f, 1077.15f, 43.41f);
                mPath.cubicTo(1074.9f, 42.93f, 1074.38f, 41.05f, 1072.22f, 39.62f);
                mPath.cubicTo(1069.89f, 38.1f, 1066.64f, 37.39f, 1063.93f, 37.01f);
                mPath.cubicTo(1068.48f, 32.41f, 1072.07f, 28.92f, 1071.67f, 22.01f);
                mPath.cubicTo(1071.48f, 18.87f, 1070.43f, 15.4f, 1066.93f, 14.6f);
                mPath.cubicTo(1065.17f, 14.2f, 1063.75f, 15.18f, 1062.13f, 15.63f);
                mPath.cubicTo(1059.87f, 16.24f, 1057.76f, 15.88f, 1055.63f, 17.26f);
                mPath.cubicTo(1053.27f, 18.79f, 1048.83f, 26.48f, 1047.26f, 29.21f);
                mPath.cubicTo(1047.26f, 29.21f, 1047.26f, 29.21f, 1047.26f, 29.21f);
                mPath.close();
                mPath.moveTo(1047.26f, 29.21f);
                break;
            case 21:
                mPath.moveTo(741.18f, 537.55f);
                mPath.cubicTo(737.49f, 538.18f, 733.49f, 537.54f, 730.38f, 539.9f);
                mPath.cubicTo(730.38f, 539.9f, 739.38f, 541.1f, 739.38f, 541.1f);
                mPath.cubicTo(739.38f, 541.1f, 736.38f, 545.9f, 736.38f, 545.9f);
                mPath.cubicTo(742.62f, 546.43f, 741.66f, 547.87f, 745.56f, 551.62f);
                mPath.cubicTo(748.77f, 554.71f, 752.35f, 557.61f, 753.02f, 562.45f);
                mPath.cubicTo(753.51f, 564.58f, 752.26f, 566.84f, 753.02f, 569.3f);
                mPath.cubicTo(753.87f, 573.26f, 756.12f, 572.93f, 756.67f, 580.7f);
                mPath.cubicTo(756.98f, 585.16f, 754.44f, 587.29f, 755.51f, 590.31f);
                mPath.cubicTo(756.76f, 593.8f, 765.88f, 599.55f, 769.37f, 600.69f);
                mPath.cubicTo(770.9f, 601.19f, 772.59f, 601.1f, 774.17f, 601.11f);
                mPath.cubicTo(774.17f, 601.11f, 770.57f, 603.51f, 770.57f, 603.51f);
                mPath.cubicTo(770.57f, 603.51f, 775.37f, 604.47f, 775.37f, 604.47f);
                mPath.cubicTo(775.37f, 604.47f, 780.77f, 608.31f, 780.77f, 608.31f);
                mPath.cubicTo(783.62f, 601.8f, 782.26f, 601.43f, 781.97f, 595.11f);
                mPath.cubicTo(783.69f, 595.11f, 786.4f, 595.25f, 787.97f, 594.67f);
                mPath.cubicTo(789.16f, 594.23f, 790.56f, 593.21f, 791.49f, 592.33f);
                mPath.cubicTo(792.63f, 591.26f, 793.08f, 590.59f, 793.54f, 589.1f);
                mPath.cubicTo(794.65f, 585.57f, 793.74f, 581.85f, 790.74f, 579.5f);
                mPath.cubicTo(788.29f, 577.58f, 784.63f, 577.92f, 783.41f, 572.3f);
                mPath.cubicTo(783.03f, 570.57f, 782.99f, 567.35f, 783.77f, 565.76f);
                mPath.cubicTo(784.47f, 564.33f, 785.52f, 563.81f, 785.99f, 562.05f);
                mPath.cubicTo(785.99f, 562.05f, 786.42f, 556.1f, 786.42f, 556.1f);
                mPath.cubicTo(786.7f, 554.95f, 787.16f, 554.12f, 787.74f, 553.1f);
                mPath.cubicTo(791.55f, 546.43f, 795.22f, 549.02f, 801.22f, 550.7f);
                mPath.cubicTo(801.22f, 550.7f, 801.22f, 544.7f, 801.22f, 544.7f);
                mPath.cubicTo(801.22f, 544.7f, 805.99f, 531.5f, 805.99f, 531.5f);
                mPath.cubicTo(805.99f, 531.5f, 810.17f, 524.89f, 810.17f, 524.89f);
                mPath.cubicTo(802.6f, 522.25f, 803.78f, 520.16f, 799.37f, 518.17f);
                mPath.cubicTo(795.42f, 516.4f, 792.72f, 517.64f, 789.77f, 516.67f);
                mPath.cubicTo(787.85f, 516.05f, 785.01f, 514.44f, 784.66f, 512.27f);
                mPath.cubicTo(784.49f, 511.19f, 785.21f, 508.14f, 785.42f, 506.89f);
                mPath.cubicTo(786.69f, 499.62f, 787.92f, 498.57f, 790.45f, 491.89f);
                mPath.cubicTo(791.82f, 488.07f, 792.49f, 487.36f, 790.45f, 483.5f);
                mPath.cubicTo(789.95f, 482.4f, 789.39f, 481.29f, 788.34f, 480.57f);
                mPath.cubicTo(783.97f, 477.55f, 777.23f, 482.8f, 774.4f, 485.99f);
                mPath.cubicTo(768.66f, 492.45f, 767.62f, 501.07f, 767.57f, 509.29f);
                mPath.cubicTo(767.54f, 516.5f, 765.26f, 515.4f, 765.08f, 521.89f);
                mPath.cubicTo(765.16f, 523.09f, 765.25f, 525.65f, 765.08f, 526.7f);
                mPath.cubicTo(763.4f, 532.97f, 755.98f, 531.59f, 751.38f, 533.37f);
                mPath.cubicTo(746.76f, 535.15f, 747.35f, 536.5f, 741.18f, 537.55f);
                mPath.cubicTo(741.18f, 537.55f, 741.18f, 537.55f, 741.18f, 537.55f);
                mPath.close();
                mPath.moveTo(741.18f, 537.55f);
                break;
            case 22:
                mPath.moveTo(399.83f, 476.2f);
                mPath.cubicTo(397.16f, 476.71f, 396.15f, 479.33f, 389.64f, 481.09f);
                mPath.cubicTo(389.64f, 481.09f, 390.98f, 491.89f, 390.98f, 491.89f);
                mPath.cubicTo(390.98f, 491.89f, 392.56f, 497.12f, 392.56f, 497.12f);
                mPath.cubicTo(392.8f, 499.53f, 390.42f, 501.42f, 391.86f, 503.71f);
                mPath.cubicTo(392.68f, 505.03f, 396.03f, 507.06f, 397.41f, 508.28f);
                mPath.cubicTo(399.09f, 509.77f, 404.96f, 518.47f, 406.23f, 520.69f);
                mPath.cubicTo(406.88f, 521.82f, 408.2f, 524.22f, 408.1f, 525.5f);
                mPath.cubicTo(407.99f, 526.71f, 407.18f, 527.63f, 406.39f, 528.48f);
                mPath.cubicTo(402.37f, 532.84f, 396.21f, 531.62f, 394.9f, 536.9f);
                mPath.cubicTo(393.64f, 542.02f, 402.6f, 548.55f, 399.22f, 554.85f);
                mPath.cubicTo(398.59f, 556.03f, 397.25f, 557.09f, 396.24f, 557.95f);
                mPath.cubicTo(394.71f, 559.23f, 393.75f, 559.91f, 392.04f, 560.9f);
                mPath.cubicTo(389.72f, 555.53f, 388.21f, 556.84f, 383.64f, 555.37f);
                mPath.cubicTo(383.64f, 555.37f, 377.64f, 552.62f, 377.64f, 552.62f);
                mPath.cubicTo(374.82f, 552.0f, 373.14f, 554.49f, 370.69f, 554.85f);
                mPath.cubicTo(370.69f, 554.85f, 366.24f, 554.38f, 366.24f, 554.38f);
                mPath.cubicTo(366.24f, 554.38f, 360.24f, 554.9f, 360.24f, 554.9f);
                mPath.cubicTo(361.36f, 560.87f, 365.41f, 563.63f, 363.23f, 570.5f);
                mPath.cubicTo(362.76f, 571.97f, 362.22f, 573.41f, 361.19f, 574.58f);
                mPath.cubicTo(360.05f, 575.87f, 357.55f, 577.31f, 356.04f, 578.3f);
                mPath.cubicTo(357.45f, 584.07f, 355.63f, 587.56f, 362.04f, 590.31f);
                mPath.cubicTo(361.44f, 592.37f, 359.86f, 598.01f, 359.85f, 599.91f);
                mPath.cubicTo(359.83f, 602.82f, 362.04f, 608.89f, 358.74f, 612.93f);
                mPath.cubicTo(357.79f, 614.09f, 356.07f, 615.23f, 354.84f, 616.11f);
                mPath.cubicTo(355.4f, 618.39f, 355.73f, 622.76f, 356.65f, 624.51f);
                mPath.cubicTo(357.85f, 626.81f, 359.98f, 627.87f, 361.61f, 631.11f);
                mPath.cubicTo(365.77f, 639.34f, 363.18f, 639.2f, 371.64f, 646.54f);
                mPath.cubicTo(372.84f, 647.59f, 374.94f, 649.38f, 376.44f, 649.83f);
                mPath.cubicTo(378.18f, 650.35f, 380.62f, 649.53f, 382.44f, 649.29f);
                mPath.cubicTo(388.26f, 648.53f, 388.73f, 649.4f, 395.04f, 646.72f);
                mPath.cubicTo(397.97f, 655.68f, 396.22f, 653.95f, 403.43f, 661.12f);
                mPath.cubicTo(406.16f, 663.83f, 406.69f, 665.09f, 410.63f, 664.86f);
                mPath.cubicTo(415.66f, 664.57f, 414.36f, 667.46f, 420.83f, 669.72f);
                mPath.cubicTo(420.83f, 669.72f, 431.63f, 672.8f, 431.63f, 672.8f);
                mPath.cubicTo(431.63f, 672.8f, 444.23f, 677.69f, 444.23f, 677.69f);
                mPath.cubicTo(444.23f, 677.69f, 450.23f, 678.08f, 450.23f, 678.08f);
                mPath.cubicTo(453.98f, 678.85f, 456.7f, 682.8f, 461.62f, 683.47f);
                mPath.cubicTo(466.05f, 684.07f, 471.65f, 679.25f, 474.82f, 680.14f);
                mPath.cubicTo(479.36f, 681.4f, 481.69f, 687.79f, 484.52f, 691.05f);
                mPath.cubicTo(487.27f, 694.22f, 489.04f, 692.04f, 491.39f, 693.54f);
                mPath.cubicTo(492.42f, 694.2f, 493.02f, 695.48f, 493.56f, 696.53f);
                mPath.cubicTo(496.36f, 701.9f, 495.82f, 702.7f, 495.82f, 708.53f);
                mPath.cubicTo(495.82f, 708.53f, 512.62f, 713.33f, 512.62f, 713.33f);
                mPath.cubicTo(512.62f, 713.33f, 513.22f, 706.73f, 513.22f, 706.73f);
                mPath.cubicTo(523.04f, 709.6f, 519.92f, 712.92f, 528.81f, 714.53f);
                mPath.cubicTo(529.86f, 709.95f, 530.45f, 708.6f, 534.21f, 705.65f);
                mPath.cubicTo(535.55f, 704.61f, 536.72f, 703.68f, 538.41f, 703.22f);
                mPath.cubicTo(539.43f, 703.08f, 541.5f, 703.13f, 542.61f, 703.22f);
                mPath.cubicTo(542.77f, 699.66f, 544.75f, 691.15f, 548.14f, 689.68f);
                mPath.cubicTo(549.35f, 689.16f, 553.67f, 689.32f, 555.21f, 689.32f);
                mPath.cubicTo(553.03f, 686.83f, 549.0f, 684.12f, 547.94f, 681.52f);
                mPath.cubicTo(546.22f, 677.32f, 548.51f, 675.71f, 550.65f, 672.52f);
                mPath.cubicTo(550.65f, 672.52f, 557.01f, 661.12f, 557.01f, 661.12f);
                mPath.cubicTo(556.05f, 660.56f, 554.35f, 659.64f, 553.65f, 658.94f);
                mPath.cubicTo(549.62f, 655.36f, 550.68f, 650.42f, 553.65f, 646.77f);
                mPath.cubicTo(554.59f, 645.73f, 556.32f, 644.11f, 557.61f, 643.69f);
                mPath.cubicTo(560.18f, 642.85f, 561.93f, 645.66f, 564.21f, 646.34f);
                mPath.cubicTo(566.89f, 647.15f, 568.29f, 645.11f, 572.61f, 647.21f);
                mPath.cubicTo(574.65f, 648.21f, 579.27f, 651.53f, 580.42f, 653.42f);
                mPath.cubicTo(581.48f, 655.19f, 581.32f, 657.39f, 581.89f, 659.32f);
                mPath.cubicTo(581.89f, 659.32f, 585.61f, 666.52f, 585.61f, 666.52f);
                mPath.cubicTo(586.4f, 668.19f, 587.63f, 671.61f, 588.69f, 672.89f);
                mPath.cubicTo(589.79f, 674.22f, 592.08f, 675.22f, 593.6f, 676.16f);
                mPath.cubicTo(596.67f, 678.05f, 602.97f, 683.64f, 606.2f, 683.47f);
                mPath.cubicTo(607.86f, 683.39f, 609.51f, 682.82f, 610.83f, 681.82f);
                mPath.cubicTo(611.98f, 680.95f, 612.94f, 679.39f, 614.61f, 679.84f);
                mPath.cubicTo(617.53f, 680.63f, 619.48f, 685.41f, 621.56f, 687.16f);
                mPath.cubicTo(623.08f, 688.45f, 625.89f, 688.12f, 627.8f, 688.12f);
                mPath.cubicTo(627.8f, 688.12f, 627.2f, 696.53f, 627.2f, 696.53f);
                mPath.cubicTo(632.04f, 696.51f, 632.82f, 696.36f, 634.4f, 690.52f);
                mPath.cubicTo(637.36f, 691.31f, 643.64f, 692.77f, 645.81f, 689.74f);
                mPath.cubicTo(648.3f, 686.24f, 645.32f, 681.61f, 645.36f, 679.89f);
                mPath.cubicTo(645.43f, 676.13f, 650.77f, 673.4f, 654.19f, 673.96f);
                mPath.cubicTo(655.52f, 674.18f, 657.56f, 675.5f, 658.99f, 676.12f);
                mPath.cubicTo(659.05f, 673.53f, 659.35f, 670.8f, 660.13f, 668.32f);
                mPath.cubicTo(660.76f, 666.33f, 662.12f, 664.37f, 660.97f, 662.33f);
                mPath.cubicTo(658.48f, 657.9f, 655.13f, 660.69f, 651.79f, 658.78f);
                mPath.cubicTo(647.62f, 656.4f, 641.77f, 650.14f, 640.21f, 645.52f);
                mPath.cubicTo(639.6f, 643.7f, 639.24f, 639.7f, 639.2f, 637.71f);
                mPath.cubicTo(645.03f, 637.71f, 647.55f, 638.3f, 652.99f, 640.64f);
                mPath.cubicTo(657.29f, 642.48f, 661.21f, 645.37f, 666.19f, 644.13f);
                mPath.cubicTo(667.77f, 643.73f, 668.62f, 642.95f, 669.79f, 641.88f);
                mPath.cubicTo(670.87f, 640.89f, 673.39f, 638.51f, 673.72f, 637.11f);
                mPath.cubicTo(674.09f, 635.57f, 672.81f, 634.04f, 671.91f, 632.91f);
                mPath.cubicTo(668.76f, 628.98f, 666.92f, 627.62f, 661.99f, 626.91f);
                mPath.cubicTo(661.99f, 626.91f, 667.61f, 624.62f, 667.61f, 624.62f);
                mPath.cubicTo(669.24f, 623.25f, 669.51f, 620.57f, 672.25f, 618.14f);
                mPath.cubicTo(675.53f, 615.23f, 678.3f, 614.82f, 679.09f, 609.51f);
                mPath.cubicTo(679.29f, 606.95f, 677.89f, 604.95f, 679.09f, 603.29f);
                mPath.cubicTo(680.88f, 601.14f, 688.3f, 599.45f, 689.13f, 596.78f);
                mPath.cubicTo(689.47f, 595.64f, 688.65f, 592.79f, 688.39f, 591.51f);
                mPath.cubicTo(688.39f, 591.51f, 694.39f, 590.31f, 694.39f, 590.31f);
                mPath.cubicTo(693.02f, 584.74f, 693.31f, 584.25f, 693.87f, 578.9f);
                mPath.cubicTo(694.27f, 575.15f, 691.88f, 574.34f, 690.25f, 570.5f);
                mPath.cubicTo(688.22f, 565.76f, 687.99f, 560.96f, 687.25f, 559.1f);
                mPath.cubicTo(686.17f, 556.34f, 683.92f, 555.25f, 683.94f, 553.1f);
                mPath.cubicTo(683.94f, 553.1f, 685.99f, 547.7f, 685.99f, 547.7f);
                mPath.cubicTo(679.25f, 544.45f, 680.74f, 543.77f, 677.41f, 540.73f);
                mPath.cubicTo(677.41f, 540.73f, 673.1f, 537.72f, 673.1f, 537.72f);
                mPath.cubicTo(671.93f, 536.54f, 671.11f, 533.73f, 670.39f, 532.1f);
                mPath.cubicTo(670.39f, 532.1f, 668.59f, 536.9f, 668.59f, 536.9f);
                mPath.cubicTo(664.51f, 534.3f, 664.12f, 533.25f, 660.79f, 530.49f);
                mPath.cubicTo(660.79f, 530.49f, 654.19f, 525.78f, 654.19f, 525.78f);
                mPath.cubicTo(654.19f, 525.78f, 649.39f, 521.76f, 649.39f, 521.76f);
                mPath.cubicTo(649.39f, 521.76f, 639.92f, 516.12f, 639.92f, 516.12f);
                mPath.cubicTo(637.97f, 514.47f, 637.8f, 512.66f, 635.96f, 511.03f);
                mPath.cubicTo(632.68f, 508.13f, 632.12f, 509.74f, 628.4f, 503.89f);
                mPath.cubicTo(628.4f, 503.89f, 625.4f, 510.49f, 625.4f, 510.49f);
                mPath.cubicTo(619.81f, 507.27f, 615.39f, 504.13f, 611.19f, 499.09f);
                mPath.cubicTo(606.63f, 493.62f, 605.7f, 489.43f, 598.4f, 485.56f);
                mPath.cubicTo(593.8f, 483.12f, 593.61f, 486.31f, 590.6f, 486.37f);
                mPath.cubicTo(589.39f, 486.39f, 586.29f, 484.62f, 584.6f, 484.09f);
                mPath.cubicTo(583.97f, 485.07f, 583.38f, 486.1f, 582.52f, 486.9f);
                mPath.cubicTo(580.01f, 489.24f, 576.33f, 488.38f, 573.81f, 486.57f);
                mPath.cubicTo(570.54f, 484.24f, 562.97f, 476.97f, 558.81f, 477.56f);
                mPath.cubicTo(556.34f, 477.91f, 554.54f, 480.65f, 554.05f, 482.89f);
                mPath.cubicTo(554.05f, 482.89f, 551.01f, 503.29f, 551.01f, 503.29f);
                mPath.cubicTo(543.57f, 501.28f, 544.43f, 499.25f, 539.61f, 495.88f);
                mPath.cubicTo(536.86f, 493.95f, 533.61f, 493.55f, 530.61f, 491.13f);
                mPath.cubicTo(530.61f, 491.13f, 519.04f, 478.96f, 519.04f, 478.96f);
                mPath.cubicTo(516.03f, 476.14f, 511.63f, 473.99f, 507.82f, 472.45f);
                mPath.cubicTo(507.82f, 472.45f, 496.42f, 468.61f, 496.42f, 468.61f);
                mPath.cubicTo(494.73f, 467.93f, 490.71f, 465.98f, 489.22f, 465.91f);
                mPath.cubicTo(487.0f, 465.8f, 484.88f, 467.4f, 482.02f, 467.29f);
                mPath.cubicTo(479.1f, 467.18f, 475.75f, 465.39f, 472.42f, 465.68f);
                mPath.cubicTo(468.24f, 466.04f, 464.41f, 468.14f, 462.22f, 468.44f);
                mPath.cubicTo(460.3f, 468.69f, 458.72f, 468.0f, 456.83f, 467.99f);
                mPath.cubicTo(456.83f, 467.99f, 444.83f, 469.4f, 444.83f, 469.4f);
                mPath.cubicTo(444.83f, 469.4f, 439.43f, 471.17f, 439.43f, 471.17f);
                mPath.cubicTo(439.43f, 471.17f, 431.63f, 472.26f, 431.63f, 472.26f);
                mPath.cubicTo(431.63f, 472.26f, 419.63f, 474.64f, 419.63f, 474.64f);
                mPath.cubicTo(415.52f, 475.42f, 413.19f, 476.78f, 408.83f, 476.88f);
                mPath.cubicTo(408.83f, 476.88f, 399.83f, 476.2f, 399.83f, 476.2f);
                mPath.cubicTo(399.83f, 476.2f, 399.83f, 476.2f, 399.83f, 476.2f);
                mPath.close();
                mPath.moveTo(399.83f, 476.2f);
                break;
            case 23:
                mPath.moveTo(890.55f, 469.09f);
                mPath.cubicTo(886.33f, 470.74f, 882.61f, 475.43f, 880.36f, 479.29f);
                mPath.cubicTo(880.36f, 479.29f, 876.76f, 474.49f, 876.76f, 474.49f);
                mPath.cubicTo(875.12f, 474.89f, 871.04f, 475.43f, 869.94f, 476.26f);
                mPath.cubicTo(868.98f, 476.98f, 867.85f, 479.32f, 866.92f, 480.49f);
                mPath.cubicTo(866.92f, 480.49f, 859.48f, 488.83f, 859.48f, 488.83f);
                mPath.cubicTo(856.48f, 492.22f, 854.61f, 492.19f, 852.48f, 494.49f);
                mPath.cubicTo(851.15f, 495.9f, 849.22f, 499.62f, 848.07f, 501.49f);
                mPath.cubicTo(845.33f, 505.98f, 841.94f, 509.59f, 842.69f, 515.29f);
                mPath.cubicTo(842.9f, 516.88f, 843.82f, 519.11f, 844.36f, 520.69f);
                mPath.cubicTo(842.98f, 521.17f, 840.32f, 522.01f, 839.3f, 522.98f);
                mPath.cubicTo(837.83f, 524.37f, 836.86f, 530.0f, 836.56f, 532.18f);
                mPath.cubicTo(836.56f, 532.18f, 828.16f, 532.18f, 828.16f, 532.18f);
                mPath.cubicTo(826.59f, 532.47f, 824.29f, 533.23f, 822.83f, 532.58f);
                mPath.cubicTo(821.14f, 531.84f, 820.49f, 529.94f, 819.3f, 528.68f);
                mPath.cubicTo(817.85f, 527.13f, 812.79f, 525.28f, 810.79f, 526.16f);
                mPath.cubicTo(808.82f, 527.03f, 806.88f, 530.18f, 806.0f, 532.1f);
                mPath.cubicTo(803.5f, 537.52f, 801.67f, 542.27f, 801.77f, 548.3f);
                mPath.cubicTo(801.88f, 554.38f, 806.05f, 557.41f, 811.37f, 559.17f);
                mPath.cubicTo(812.98f, 559.7f, 816.05f, 560.13f, 817.24f, 560.89f);
                mPath.cubicTo(819.15f, 562.11f, 819.78f, 564.56f, 821.33f, 565.81f);
                mPath.cubicTo(822.68f, 566.89f, 824.44f, 566.82f, 826.36f, 567.63f);
                mPath.cubicTo(831.6f, 569.87f, 829.12f, 571.08f, 836.56f, 571.1f);
                mPath.cubicTo(836.56f, 571.1f, 838.21f, 578.85f, 838.21f, 578.85f);
                mPath.cubicTo(838.55f, 581.55f, 836.95f, 582.57f, 836.0f, 584.91f);
                mPath.cubicTo(835.24f, 586.78f, 835.23f, 590.08f, 835.42f, 592.11f);
                mPath.cubicTo(835.87f, 596.89f, 838.03f, 596.34f, 836.99f, 602.91f);
                mPath.cubicTo(836.84f, 603.92f, 836.59f, 605.43f, 835.97f, 606.25f);
                mPath.cubicTo(834.91f, 607.69f, 832.24f, 608.04f, 830.56f, 608.29f);
                mPath.cubicTo(830.56f, 608.29f, 825.16f, 608.29f, 825.16f, 608.29f);
                mPath.cubicTo(819.91f, 608.73f, 820.88f, 610.0f, 815.06f, 608.29f);
                mPath.cubicTo(815.0f, 609.67f, 815.46f, 613.32f, 815.06f, 614.26f);
                mPath.cubicTo(813.72f, 618.69f, 803.9f, 620.77f, 799.97f, 619.35f);
                mPath.cubicTo(796.99f, 618.28f, 796.87f, 615.91f, 790.97f, 615.57f);
                mPath.cubicTo(788.91f, 615.45f, 787.0f, 615.84f, 784.97f, 616.11f);
                mPath.cubicTo(785.06f, 617.89f, 785.57f, 620.57f, 785.33f, 622.11f);
                mPath.cubicTo(784.74f, 625.86f, 782.24f, 628.19f, 780.17f, 631.11f);
                mPath.cubicTo(780.17f, 631.11f, 790.37f, 637.71f, 790.37f, 637.71f);
                mPath.cubicTo(790.37f, 637.71f, 784.98f, 642.69f, 784.98f, 642.69f);
                mPath.cubicTo(784.98f, 642.69f, 784.37f, 648.52f, 784.37f, 648.52f);
                mPath.cubicTo(784.37f, 648.52f, 783.92f, 656.32f, 783.92f, 656.32f);
                mPath.cubicTo(783.92f, 656.32f, 786.77f, 663.56f, 786.77f, 663.56f);
                mPath.cubicTo(786.77f, 663.56f, 781.37f, 663.56f, 781.37f, 663.56f);
                mPath.cubicTo(775.59f, 664.2f, 776.99f, 665.37f, 770.57f, 663.56f);
                mPath.cubicTo(769.9f, 665.1f, 768.0f, 668.61f, 768.06f, 670.12f);
                mPath.cubicTo(768.16f, 672.31f, 770.13f, 673.48f, 770.34f, 676.12f);
                mPath.cubicTo(770.66f, 680.21f, 767.83f, 684.13f, 763.97f, 685.39f);
                mPath.cubicTo(762.74f, 685.79f, 761.08f, 685.72f, 759.78f, 685.72f);
                mPath.cubicTo(759.78f, 685.72f, 761.58f, 690.52f, 761.58f, 690.52f);
                mPath.cubicTo(764.06f, 689.21f, 769.41f, 685.75f, 772.25f, 686.74f);
                mPath.cubicTo(773.98f, 687.34f, 774.71f, 689.61f, 775.91f, 690.87f);
                mPath.cubicTo(777.17f, 692.19f, 779.01f, 692.55f, 780.77f, 692.74f);
                mPath.cubicTo(783.92f, 693.08f, 789.93f, 691.32f, 793.37f, 690.79f);
                mPath.cubicTo(795.12f, 690.51f, 797.63f, 690.21f, 799.06f, 691.48f);
                mPath.cubicTo(800.28f, 692.56f, 801.23f, 696.1f, 801.77f, 697.73f);
                mPath.cubicTo(801.77f, 697.73f, 808.97f, 695.33f, 808.97f, 695.33f);
                mPath.cubicTo(811.53f, 702.26f, 813.09f, 700.68f, 816.77f, 702.76f);
                mPath.cubicTo(821.29f, 705.31f, 820.03f, 705.65f, 825.76f, 705.52f);
                mPath.cubicTo(829.02f, 705.44f, 831.43f, 704.51f, 834.76f, 705.05f);
                mPath.cubicTo(838.93f, 705.73f, 847.83f, 710.95f, 852.16f, 713.18f);
                mPath.cubicTo(858.18f, 716.28f, 857.97f, 719.18f, 860.66f, 720.15f);
                mPath.cubicTo(862.27f, 720.73f, 865.53f, 719.83f, 867.16f, 719.33f);
                mPath.cubicTo(864.97f, 710.38f, 866.87f, 709.15f, 866.73f, 705.53f);
                mPath.cubicTo(866.64f, 703.08f, 865.06f, 701.76f, 864.66f, 700.13f);
                mPath.cubicTo(864.0f, 697.47f, 866.93f, 694.78f, 868.96f, 693.51f);
                mPath.cubicTo(872.54f, 691.29f, 874.04f, 693.02f, 876.76f, 692.64f);
                mPath.cubicTo(878.0f, 692.46f, 879.76f, 691.63f, 880.96f, 691.12f);
                mPath.cubicTo(880.96f, 691.12f, 876.39f, 683.92f, 876.39f, 683.92f);
                mPath.cubicTo(876.39f, 683.92f, 872.08f, 682.36f, 872.08f, 682.36f);
                mPath.cubicTo(872.08f, 682.36f, 867.98f, 676.69f, 867.98f, 676.69f);
                mPath.cubicTo(867.98f, 676.69f, 861.16f, 674.92f, 861.16f, 674.92f);
                mPath.cubicTo(862.23f, 673.69f, 863.94f, 671.43f, 865.38f, 670.79f);
                mPath.cubicTo(865.38f, 670.79f, 877.36f, 671.32f, 877.36f, 671.32f);
                mPath.cubicTo(877.36f, 671.32f, 883.96f, 671.81f, 883.96f, 671.81f);
                mPath.cubicTo(883.96f, 671.81f, 888.15f, 671.05f, 888.15f, 671.05f);
                mPath.cubicTo(890.47f, 671.16f, 891.57f, 673.52f, 893.55f, 673.7f);
                mPath.cubicTo(894.72f, 673.81f, 895.67f, 673.09f, 896.55f, 672.44f);
                mPath.cubicTo(900.7f, 669.34f, 900.23f, 667.65f, 900.15f, 662.92f);
                mPath.cubicTo(900.05f, 657.03f, 896.77f, 658.8f, 892.27f, 651.52f);
                mPath.cubicTo(890.09f, 647.99f, 891.02f, 645.59f, 889.77f, 643.14f);
                mPath.cubicTo(888.47f, 640.6f, 885.69f, 639.5f, 884.57f, 637.54f);
                mPath.cubicTo(883.58f, 635.82f, 883.69f, 629.79f, 882.94f, 627.51f);
                mPath.cubicTo(882.08f, 624.89f, 880.02f, 623.25f, 880.0f, 620.31f);
                mPath.cubicTo(879.99f, 617.37f, 881.77f, 608.14f, 882.79f, 605.31f);
                mPath.cubicTo(883.93f, 602.14f, 886.35f, 596.52f, 886.28f, 593.31f);
                mPath.cubicTo(886.18f, 588.76f, 883.72f, 585.03f, 882.77f, 580.7f);
                mPath.cubicTo(881.68f, 575.73f, 882.55f, 571.19f, 882.05f, 566.3f);
                mPath.cubicTo(882.05f, 566.3f, 879.96f, 554.9f, 879.96f, 554.9f);
                mPath.cubicTo(879.94f, 551.05f, 881.75f, 548.1f, 883.08f, 544.7f);
                mPath.cubicTo(884.42f, 541.25f, 886.55f, 532.69f, 886.28f, 529.1f);
                mPath.cubicTo(885.96f, 524.73f, 880.43f, 517.72f, 880.55f, 514.69f);
                mPath.cubicTo(880.55f, 514.69f, 886.23f, 502.69f, 886.23f, 502.69f);
                mPath.cubicTo(886.23f, 502.69f, 889.66f, 493.09f, 889.66f, 493.09f);
                mPath.cubicTo(889.66f, 493.09f, 891.11f, 485.89f, 891.11f, 485.89f);
                mPath.cubicTo(891.74f, 483.6f, 893.18f, 481.53f, 893.16f, 479.29f);
                mPath.cubicTo(893.15f, 476.37f, 891.33f, 471.97f, 890.55f, 469.09f);
                mPath.cubicTo(890.55f, 469.09f, 890.55f, 469.09f, 890.55f, 469.09f);
                mPath.close();
                mPath.moveTo(890.55f, 469.09f);
                break;
            case 24:
                mPath.moveTo(1186.31f, 714.41f);
                mPath.cubicTo(1190.16f, 713.02f, 1191.27f, 711.37f, 1194.1f, 708.53f);
                mPath.cubicTo(1192.8f, 706.26f, 1189.86f, 701.99f, 1188.0f, 700.26f);
                mPath.cubicTo(1186.34f, 698.72f, 1184.75f, 698.19f, 1182.71f, 697.37f);
                mPath.cubicTo(1180.91f, 696.64f, 1177.35f, 694.87f, 1175.52f, 695.36f);
                mPath.cubicTo(1172.65f, 696.14f, 1171.25f, 699.99f, 1170.42f, 702.53f);
                mPath.cubicTo(1169.9f, 704.09f, 1168.4f, 709.51f, 1168.6f, 710.93f);
                mPath.cubicTo(1169.14f, 714.7f, 1176.37f, 718.69f, 1178.51f, 718.76f);
                mPath.cubicTo(1181.21f, 718.86f, 1181.86f, 716.0f, 1186.31f, 714.41f);
                mPath.cubicTo(1186.31f, 714.41f, 1186.31f, 714.41f, 1186.31f, 714.41f);
                mPath.close();
                mPath.moveTo(1186.31f, 714.41f);
                break;
            case 25:
                mPath.moveTo(1005.89f, 573.58f);
                mPath.cubicTo(1007.61f, 573.65f, 1009.98f, 574.24f, 1011.73f, 573.58f);
                mPath.cubicTo(1014.92f, 572.6f, 1014.52f, 570.8f, 1020.73f, 569.9f);
                mPath.cubicTo(1019.35f, 572.33f, 1018.68f, 574.12f, 1016.47f, 575.96f);
                mPath.cubicTo(1016.47f, 575.96f, 1009.75f, 580.48f, 1009.75f, 580.48f);
                mPath.cubicTo(1008.05f, 582.32f, 1008.37f, 584.88f, 1005.77f, 588.51f);
                mPath.cubicTo(1002.09f, 593.64f, 1000.28f, 592.17f, 998.58f, 594.2f);
                mPath.cubicTo(997.37f, 595.64f, 995.07f, 603.09f, 994.34f, 605.31f);
                mPath.cubicTo(1000.09f, 605.31f, 1002.82f, 604.31f, 1007.52f, 608.2f);
                mPath.cubicTo(1013.97f, 613.52f, 1008.96f, 616.7f, 1016.53f, 616.71f);
                mPath.cubicTo(1021.71f, 616.72f, 1022.28f, 615.84f, 1026.13f, 615.57f);
                mPath.cubicTo(1028.8f, 615.38f, 1030.99f, 615.87f, 1033.24f, 613.97f);
                mPath.cubicTo(1035.81f, 611.8f, 1034.72f, 609.68f, 1035.49f, 607.76f);
                mPath.cubicTo(1036.28f, 605.81f, 1040.32f, 603.12f, 1042.33f, 602.63f);
                mPath.cubicTo(1047.18f, 601.45f, 1049.82f, 605.45f, 1052.11f, 608.91f);
                mPath.cubicTo(1052.82f, 609.98f, 1053.84f, 611.87f, 1055.05f, 612.37f);
                mPath.cubicTo(1056.57f, 613.0f, 1057.9f, 611.78f, 1059.73f, 611.92f);
                mPath.cubicTo(1062.77f, 612.15f, 1064.49f, 615.26f, 1068.72f, 613.49f);
                mPath.cubicTo(1072.55f, 611.89f, 1074.03f, 608.68f, 1076.52f, 608.65f);
                mPath.cubicTo(1078.39f, 608.63f, 1082.73f, 612.04f, 1086.12f, 613.11f);
                mPath.cubicTo(1086.3f, 610.91f, 1086.48f, 608.42f, 1088.11f, 606.74f);
                mPath.cubicTo(1089.75f, 605.05f, 1092.56f, 604.57f, 1093.68f, 602.67f);
                mPath.cubicTo(1094.74f, 600.88f, 1094.47f, 595.62f, 1097.75f, 592.34f);
                mPath.cubicTo(1100.36f, 589.72f, 1105.57f, 589.35f, 1107.4f, 586.56f);
                mPath.cubicTo(1107.4f, 586.56f, 1113.62f, 571.87f, 1113.62f, 571.87f);
                mPath.cubicTo(1115.36f, 569.61f, 1117.9f, 570.13f, 1119.55f, 567.42f);
                mPath.cubicTo(1119.55f, 567.42f, 1123.49f, 557.9f, 1123.49f, 557.9f);
                mPath.cubicTo(1123.98f, 555.58f, 1122.79f, 553.67f, 1123.49f, 552.03f);
                mPath.cubicTo(1124.11f, 550.64f, 1126.24f, 549.64f, 1127.52f, 548.9f);
                mPath.cubicTo(1127.52f, 548.9f, 1128.71f, 554.3f, 1128.71f, 554.3f);
                mPath.cubicTo(1128.71f, 554.3f, 1136.51f, 550.7f, 1136.51f, 550.7f);
                mPath.cubicTo(1136.51f, 550.7f, 1135.31f, 542.3f, 1135.31f, 542.3f);
                mPath.cubicTo(1135.31f, 542.3f, 1140.11f, 542.3f, 1140.11f, 542.3f);
                mPath.cubicTo(1140.9f, 537.8f, 1140.79f, 537.58f, 1136.51f, 535.7f);
                mPath.cubicTo(1143.47f, 532.74f, 1142.5f, 534.36f, 1150.31f, 529.28f);
                mPath.cubicTo(1150.31f, 529.28f, 1159.91f, 521.85f, 1159.91f, 521.85f);
                mPath.cubicTo(1161.6f, 520.89f, 1163.16f, 520.92f, 1164.71f, 520.27f);
                mPath.cubicTo(1166.23f, 519.64f, 1167.67f, 518.28f, 1168.91f, 518.31f);
                mPath.cubicTo(1170.2f, 518.34f, 1172.56f, 520.48f, 1173.71f, 521.29f);
                mPath.cubicTo(1173.71f, 521.29f, 1174.81f, 514.09f, 1174.81f, 514.09f);
                mPath.cubicTo(1174.81f, 514.09f, 1177.78f, 508.69f, 1177.78f, 508.69f);
                mPath.cubicTo(1177.78f, 508.69f, 1177.78f, 502.69f, 1177.78f, 502.69f);
                mPath.cubicTo(1177.78f, 502.69f, 1170.71f, 504.2f, 1170.71f, 504.2f);
                mPath.cubicTo(1168.02f, 504.14f, 1164.75f, 502.29f, 1161.11f, 502.89f);
                mPath.cubicTo(1157.37f, 503.5f, 1154.32f, 506.36f, 1152.11f, 505.9f);
                mPath.cubicTo(1150.44f, 505.55f, 1149.2f, 503.68f, 1147.31f, 503.08f);
                mPath.cubicTo(1144.37f, 502.12f, 1144.55f, 504.52f, 1138.91f, 501.12f);
                mPath.cubicTo(1136.44f, 499.62f, 1133.45f, 496.5f, 1130.51f, 497.3f);
                mPath.cubicTo(1127.9f, 498.02f, 1121.71f, 502.47f, 1119.95f, 504.55f);
                mPath.cubicTo(1119.95f, 504.55f, 1117.09f, 508.69f, 1117.09f, 508.69f);
                mPath.cubicTo(1115.91f, 510.22f, 1114.83f, 511.12f, 1113.88f, 512.89f);
                mPath.cubicTo(1112.08f, 516.27f, 1111.54f, 521.65f, 1107.06f, 524.11f);
                mPath.cubicTo(1104.68f, 525.43f, 1097.63f, 526.04f, 1095.12f, 525.14f);
                mPath.cubicTo(1093.31f, 524.48f, 1092.19f, 523.0f, 1090.32f, 522.08f);
                mPath.cubicTo(1088.94f, 521.4f, 1086.48f, 520.99f, 1084.92f, 520.69f);
                mPath.cubicTo(1086.69f, 514.14f, 1087.5f, 511.55f, 1086.27f, 504.49f);
                mPath.cubicTo(1085.92f, 502.52f, 1085.3f, 499.66f, 1083.49f, 498.5f);
                mPath.cubicTo(1082.41f, 497.81f, 1080.77f, 497.9f, 1079.52f, 497.89f);
                mPath.cubicTo(1077.38f, 497.88f, 1073.01f, 497.73f, 1071.12f, 498.27f);
                mPath.cubicTo(1071.12f, 498.27f, 1065.73f, 500.83f, 1065.73f, 500.83f);
                mPath.cubicTo(1062.55f, 501.7f, 1062.22f, 497.93f, 1058.53f, 497.16f);
                mPath.cubicTo(1055.68f, 496.56f, 1054.96f, 498.92f, 1053.67f, 500.89f);
                mPath.cubicTo(1051.92f, 503.6f, 1050.07f, 506.18f, 1047.13f, 507.67f);
                mPath.cubicTo(1047.13f, 507.67f, 1033.94f, 511.88f, 1033.94f, 511.88f);
                mPath.cubicTo(1029.52f, 515.28f, 1028.0f, 520.79f, 1025.9f, 522.72f);
                mPath.cubicTo(1023.01f, 525.35f, 1018.73f, 525.39f, 1016.41f, 529.16f);
                mPath.cubicTo(1012.53f, 535.44f, 1014.07f, 538.08f, 1010.98f, 542.9f);
                mPath.cubicTo(1008.66f, 546.53f, 1002.24f, 552.37f, 1001.85f, 556.7f);
                mPath.cubicTo(1001.57f, 559.69f, 1004.98f, 562.95f, 1005.89f, 565.7f);
                mPath.cubicTo(1006.93f, 568.05f, 1006.06f, 571.05f, 1005.89f, 573.58f);
                mPath.close();
                mPath.moveTo(1005.89f, 573.58f);
                break;
            case 26:
                mPath.moveTo(964.04f, 432.42f);
                mPath.cubicTo(964.04f, 432.42f, 960.74f, 426.48f, 960.74f, 426.48f);
                mPath.cubicTo(960.36f, 427.94f, 960.09f, 429.96f, 959.19f, 431.15f);
                mPath.cubicTo(957.7f, 433.1f, 953.38f, 434.6f, 951.14f, 436.06f);
                mPath.cubicTo(949.73f, 436.97f, 947.5f, 439.32f, 946.09f, 439.5f);
                mPath.cubicTo(944.96f, 439.64f, 942.52f, 438.45f, 940.95f, 438.25f);
                mPath.cubicTo(938.3f, 437.9f, 932.84f, 440.3f, 931.04f, 442.21f);
                mPath.cubicTo(929.96f, 443.35f, 929.55f, 444.28f, 928.95f, 445.68f);
                mPath.cubicTo(926.44f, 444.97f, 924.44f, 443.66f, 921.75f, 444.36f);
                mPath.cubicTo(917.66f, 445.43f, 916.95f, 448.15f, 915.51f, 451.68f);
                mPath.cubicTo(913.48f, 456.67f, 911.8f, 459.98f, 911.55f, 465.48f);
                mPath.cubicTo(908.73f, 465.48f, 903.33f, 465.27f, 900.88f, 466.5f);
                mPath.cubicTo(898.72f, 467.59f, 898.69f, 469.65f, 897.33f, 471.36f);
                mPath.cubicTo(896.01f, 473.03f, 894.32f, 473.44f, 893.51f, 474.72f);
                mPath.cubicTo(892.77f, 476.27f, 893.93f, 478.01f, 893.51f, 480.49f);
                mPath.cubicTo(893.51f, 480.49f, 891.71f, 485.29f, 891.71f, 485.29f);
                mPath.cubicTo(891.71f, 485.29f, 889.9f, 493.69f, 889.9f, 493.69f);
                mPath.cubicTo(888.72f, 497.29f, 886.65f, 502.97f, 884.99f, 506.29f);
                mPath.cubicTo(884.11f, 508.07f, 881.15f, 512.66f, 880.9f, 514.09f);
                mPath.cubicTo(880.3f, 517.56f, 886.71f, 525.17f, 886.84f, 529.7f);
                mPath.cubicTo(887.09f, 538.15f, 881.54f, 546.83f, 880.62f, 553.1f);
                mPath.cubicTo(880.1f, 556.68f, 881.9f, 561.92f, 882.62f, 565.7f);
                mPath.cubicTo(882.62f, 565.7f, 882.62f, 575.9f, 882.62f, 575.9f);
                mPath.cubicTo(882.86f, 584.6f, 887.06f, 588.55f, 886.79f, 593.91f);
                mPath.cubicTo(886.66f, 596.49f, 884.11f, 602.59f, 883.18f, 605.31f);
                mPath.cubicTo(882.31f, 607.83f, 880.19f, 619.17f, 880.54f, 621.51f);
                mPath.cubicTo(880.82f, 623.32f, 882.45f, 625.82f, 883.36f, 627.51f);
                mPath.cubicTo(886.87f, 626.49f, 890.86f, 625.81f, 894.15f, 624.33f);
                mPath.cubicTo(898.24f, 622.47f, 900.12f, 620.46f, 901.95f, 619.67f);
                mPath.cubicTo(904.92f, 618.41f, 906.16f, 620.07f, 910.35f, 617.76f);
                mPath.cubicTo(914.8f, 615.31f, 916.3f, 612.73f, 918.75f, 611.02f);
                mPath.cubicTo(921.18f, 609.31f, 922.68f, 609.83f, 924.69f, 608.47f);
                mPath.cubicTo(926.58f, 607.2f, 927.2f, 605.5f, 929.55f, 604.37f);
                mPath.cubicTo(933.69f, 602.39f, 938.93f, 603.48f, 943.35f, 602.1f);
                mPath.cubicTo(947.51f, 600.8f, 950.35f, 598.58f, 953.54f, 595.65f);
                mPath.cubicTo(953.54f, 595.65f, 958.7f, 590.8f, 958.7f, 590.8f);
                mPath.cubicTo(961.49f, 587.46f, 962.52f, 580.77f, 962.54f, 576.5f);
                mPath.cubicTo(962.55f, 573.94f, 962.91f, 567.12f, 961.93f, 565.1f);
                mPath.cubicTo(960.71f, 562.6f, 955.74f, 557.55f, 956.79f, 554.43f);
                mPath.cubicTo(957.38f, 552.67f, 959.51f, 552.69f, 960.86f, 550.04f);
                mPath.cubicTo(960.86f, 550.04f, 965.42f, 533.9f, 965.42f, 533.9f);
                mPath.cubicTo(966.24f, 531.84f, 968.91f, 526.68f, 968.78f, 524.89f);
                mPath.cubicTo(968.61f, 522.56f, 964.07f, 516.1f, 962.76f, 513.49f);
                mPath.cubicTo(961.9f, 511.76f, 961.17f, 509.18f, 959.84f, 507.87f);
                mPath.cubicTo(958.49f, 506.53f, 953.05f, 504.48f, 952.43f, 499.09f);
                mPath.cubicTo(951.81f, 493.8f, 955.75f, 492.38f, 957.17f, 488.89f);
                mPath.cubicTo(958.78f, 484.93f, 954.88f, 482.68f, 960.42f, 478.45f);
                mPath.cubicTo(962.44f, 476.9f, 964.58f, 477.84f, 966.74f, 477.3f);
                mPath.cubicTo(971.03f, 476.23f, 971.53f, 472.79f, 971.54f, 469.09f);
                mPath.cubicTo(971.55f, 464.72f, 972.04f, 455.68f, 967.78f, 452.98f);
                mPath.cubicTo(967.78f, 452.98f, 961.94f, 451.35f, 961.94f, 451.35f);
                mPath.cubicTo(961.94f, 451.35f, 957.14f, 449.28f, 957.14f, 449.28f);
                mPath.cubicTo(961.15f, 440.31f, 964.26f, 442.83f, 970.34f, 437.28f);
                mPath.cubicTo(970.34f, 437.28f, 964.04f, 432.42f, 964.04f, 432.42f);
                mPath.cubicTo(964.04f, 432.42f, 964.04f, 432.42f, 964.04f, 432.42f);
                mPath.close();
                mPath.moveTo(964.04f, 432.42f);
                break;
            case 27:
                mPath.moveTo(698.68f, 649.72f);
                mPath.cubicTo(697.73f, 647.48f, 692.69f, 641.22f, 690.79f, 639.52f);
                mPath.cubicTo(683.4f, 646.87f, 685.02f, 643.46f, 679.39f, 646.57f);
                mPath.cubicTo(679.39f, 646.57f, 673.99f, 650.32f, 673.99f, 650.32f);
                mPath.cubicTo(673.99f, 650.32f, 679.15f, 662.75f, 679.15f, 662.75f);
                mPath.cubicTo(679.15f, 662.75f, 676.95f, 667.12f, 676.95f, 667.12f);
                mPath.cubicTo(676.95f, 667.12f, 673.26f, 673.11f, 673.26f, 673.11f);
                mPath.cubicTo(673.26f, 673.11f, 667.39f, 673.72f, 667.39f, 673.72f);
                mPath.cubicTo(667.34f, 668.67f, 667.34f, 665.9f, 661.99f, 664.12f);
                mPath.cubicTo(661.99f, 664.12f, 658.99f, 677.32f, 658.99f, 677.32f);
                mPath.cubicTo(657.88f, 676.3f, 656.86f, 675.2f, 655.39f, 674.68f);
                mPath.cubicTo(652.07f, 673.5f, 646.75f, 675.28f, 645.9f, 679.12f);
                mPath.cubicTo(645.45f, 681.16f, 646.9f, 682.96f, 647.17f, 685.12f);
                mPath.cubicTo(648.19f, 693.25f, 640.27f, 692.52f, 635.0f, 691.12f);
                mPath.cubicTo(632.07f, 696.77f, 633.19f, 697.12f, 626.6f, 697.13f);
                mPath.cubicTo(626.6f, 697.13f, 627.2f, 688.72f, 627.2f, 688.72f);
                mPath.cubicTo(625.0f, 688.72f, 623.15f, 688.96f, 621.43f, 687.34f);
                mPath.cubicTo(619.92f, 685.93f, 617.33f, 680.64f, 614.62f, 679.93f);
                mPath.cubicTo(612.03f, 679.24f, 610.95f, 683.87f, 606.2f, 683.88f);
                mPath.cubicTo(603.99f, 683.88f, 602.49f, 682.54f, 600.8f, 681.3f);
                mPath.cubicTo(600.8f, 681.3f, 588.5f, 673.0f, 588.5f, 673.0f);
                mPath.cubicTo(587.17f, 671.44f, 585.95f, 667.9f, 585.01f, 665.92f);
                mPath.cubicTo(585.01f, 665.92f, 581.49f, 659.32f, 581.49f, 659.32f);
                mPath.cubicTo(580.76f, 657.34f, 580.93f, 654.68f, 579.83f, 652.98f);
                mPath.cubicTo(578.74f, 651.3f, 575.04f, 648.71f, 573.21f, 647.81f);
                mPath.cubicTo(569.02f, 645.77f, 567.03f, 647.42f, 564.81f, 646.87f);
                mPath.cubicTo(561.89f, 646.14f, 560.35f, 642.53f, 557.01f, 644.14f);
                mPath.cubicTo(550.79f, 647.14f, 548.09f, 657.79f, 557.61f, 660.52f);
                mPath.cubicTo(557.61f, 660.52f, 551.25f, 671.92f, 551.25f, 671.92f);
                mPath.cubicTo(549.59f, 674.41f, 547.49f, 675.89f, 547.81f, 679.12f);
                mPath.cubicTo(548.75f, 688.41f, 562.1f, 690.57f, 566.53f, 695.35f);
                mPath.cubicTo(568.3f, 697.27f, 572.27f, 705.89f, 572.89f, 708.53f);
                mPath.cubicTo(573.4f, 710.69f, 573.19f, 712.84f, 574.09f, 715.13f);
                mPath.cubicTo(574.09f, 715.13f, 580.04f, 724.55f, 580.04f, 724.55f);
                mPath.cubicTo(580.04f, 724.55f, 584.0f, 728.33f, 584.0f, 728.33f);
                mPath.cubicTo(584.0f, 728.33f, 578.61f, 728.93f, 578.61f, 728.93f);
                mPath.cubicTo(578.61f, 728.93f, 578.92f, 736.73f, 578.92f, 736.73f);
                mPath.cubicTo(578.92f, 736.73f, 583.26f, 748.73f, 583.26f, 748.73f);
                mPath.cubicTo(583.26f, 748.73f, 584.11f, 763.74f, 584.11f, 763.74f);
                mPath.cubicTo(584.11f, 763.74f, 586.07f, 772.74f, 586.07f, 772.74f);
                mPath.cubicTo(586.07f, 772.74f, 584.03f, 781.74f, 584.03f, 781.74f);
                mPath.cubicTo(584.03f, 781.74f, 586.36f, 800.34f, 586.36f, 800.34f);
                mPath.cubicTo(586.36f, 800.34f, 586.36f, 806.94f, 586.36f, 806.94f);
                mPath.cubicTo(586.36f, 806.94f, 585.57f, 813.55f, 585.57f, 813.55f);
                mPath.cubicTo(585.57f, 813.55f, 588.05f, 824.95f, 588.05f, 824.95f);
                mPath.cubicTo(588.05f, 824.95f, 591.2f, 830.35f, 591.2f, 830.35f);
                mPath.cubicTo(591.2f, 830.35f, 592.77f, 823.75f, 592.77f, 823.75f);
                mPath.cubicTo(592.77f, 823.75f, 598.4f, 810.55f, 598.4f, 810.55f);
                mPath.cubicTo(598.4f, 810.55f, 604.21f, 816.55f, 604.21f, 816.55f);
                mPath.cubicTo(604.21f, 816.55f, 608.19f, 821.95f, 608.19f, 821.95f);
                mPath.cubicTo(608.19f, 821.95f, 612.42f, 826.74f, 612.42f, 826.74f);
                mPath.cubicTo(613.92f, 829.66f, 609.91f, 829.81f, 610.36f, 833.35f);
                mPath.cubicTo(610.5f, 834.45f, 611.48f, 836.61f, 612.09f, 837.55f);
                mPath.cubicTo(615.83f, 843.32f, 622.31f, 842.95f, 628.4f, 842.95f);
                mPath.cubicTo(629.66f, 849.95f, 634.05f, 854.14f, 636.59f, 860.35f);
                mPath.cubicTo(637.75f, 863.2f, 637.67f, 867.89f, 639.04f, 869.78f);
                mPath.cubicTo(640.14f, 871.31f, 646.51f, 875.82f, 647.64f, 878.19f);
                mPath.cubicTo(648.67f, 880.34f, 645.78f, 881.89f, 646.29f, 884.33f);
                mPath.cubicTo(646.62f, 885.95f, 648.8f, 887.44f, 649.93f, 888.61f);
                mPath.cubicTo(652.75f, 891.54f, 654.28f, 895.51f, 657.79f, 897.92f);
                mPath.cubicTo(659.48f, 899.07f, 660.67f, 898.92f, 662.59f, 898.68f);
                mPath.cubicTo(670.88f, 897.66f, 671.82f, 893.31f, 676.29f, 892.05f);
                mPath.cubicTo(679.09f, 891.25f, 679.74f, 894.88f, 683.59f, 893.98f);
                mPath.cubicTo(686.2f, 893.38f, 687.59f, 892.05f, 688.83f, 889.75f);
                mPath.cubicTo(693.1f, 881.85f, 687.29f, 878.31f, 687.19f, 870.56f);
                mPath.cubicTo(687.16f, 868.65f, 686.92f, 863.78f, 687.8f, 862.28f);
                mPath.cubicTo(688.94f, 860.35f, 691.36f, 860.07f, 692.99f, 858.73f);
                mPath.cubicTo(694.57f, 857.44f, 696.05f, 854.4f, 697.58f, 852.55f);
                mPath.cubicTo(699.14f, 850.66f, 703.13f, 847.15f, 703.95f, 845.35f);
                mPath.cubicTo(704.81f, 843.46f, 703.68f, 837.99f, 703.38f, 835.75f);
                mPath.cubicTo(707.51f, 835.11f, 710.83f, 834.22f, 713.0f, 830.35f);
                mPath.cubicTo(715.44f, 826.02f, 713.01f, 820.58f, 718.98f, 820.81f);
                mPath.cubicTo(721.11f, 820.9f, 725.62f, 822.16f, 726.43f, 824.43f);
                mPath.cubicTo(726.73f, 825.72f, 725.95f, 827.49f, 726.43f, 828.97f);
                mPath.cubicTo(727.24f, 830.77f, 729.35f, 831.41f, 729.87f, 833.4f);
                mPath.cubicTo(730.21f, 834.87f, 729.24f, 836.25f, 729.87f, 838.75f);
                mPath.cubicTo(731.87f, 846.25f, 737.15f, 845.18f, 742.38f, 841.78f);
                mPath.cubicTo(744.41f, 840.45f, 746.07f, 838.65f, 747.78f, 836.95f);
                mPath.cubicTo(747.78f, 836.95f, 754.38f, 849.55f, 754.38f, 849.55f);
                mPath.cubicTo(755.45f, 849.09f, 757.86f, 847.89f, 758.92f, 847.88f);
                mPath.cubicTo(760.71f, 847.87f, 763.37f, 850.18f, 765.77f, 850.41f);
                mPath.cubicTo(767.7f, 850.59f, 770.43f, 849.3f, 772.37f, 848.81f);
                mPath.cubicTo(772.37f, 848.81f, 778.14f, 848.01f, 778.14f, 848.01f);
                mPath.cubicTo(779.07f, 847.58f, 779.64f, 846.77f, 780.14f, 845.92f);
                mPath.cubicTo(782.19f, 842.43f, 780.73f, 839.83f, 779.57f, 836.35f);
                mPath.cubicTo(779.57f, 836.35f, 773.15f, 836.84f, 773.15f, 836.84f);
                mPath.cubicTo(773.15f, 836.84f, 769.71f, 833.69f, 769.71f, 833.69f);
                mPath.cubicTo(769.71f, 833.69f, 764.57f, 832.15f, 764.57f, 832.15f);
                mPath.cubicTo(764.38f, 830.7f, 763.59f, 826.78f, 763.9f, 825.6f);
                mPath.cubicTo(764.45f, 823.55f, 772.07f, 818.38f, 774.17f, 818.47f);
                mPath.cubicTo(775.81f, 818.55f, 779.33f, 821.35f, 782.57f, 822.55f);
                mPath.cubicTo(780.81f, 818.14f, 779.41f, 814.05f, 774.77f, 811.84f);
                mPath.cubicTo(772.22f, 810.62f, 770.24f, 811.7f, 768.42f, 810.19f);
                mPath.cubicTo(766.58f, 808.64f, 767.21f, 806.55f, 763.35f, 803.0f);
                mPath.cubicTo(761.5f, 801.3f, 755.85f, 796.57f, 755.37f, 794.34f);
                mPath.cubicTo(755.04f, 792.81f, 756.53f, 790.21f, 757.35f, 788.94f);
                mPath.cubicTo(759.75f, 785.26f, 763.31f, 782.83f, 764.56f, 778.15f);
                mPath.cubicTo(765.52f, 774.6f, 761.64f, 774.34f, 763.15f, 771.71f);
                mPath.cubicTo(763.7f, 770.75f, 768.98f, 765.57f, 770.0f, 765.21f);
                mPath.cubicTo(773.64f, 763.91f, 776.78f, 767.77f, 779.57f, 769.14f);
                mPath.cubicTo(782.63f, 770.66f, 783.66f, 768.08f, 786.17f, 769.14f);
                mPath.cubicTo(787.78f, 769.8f, 793.72f, 776.83f, 799.37f, 775.33f);
                mPath.cubicTo(803.29f, 774.28f, 806.26f, 767.76f, 808.2f, 764.34f);
                mPath.cubicTo(809.01f, 762.92f, 810.14f, 761.1f, 810.52f, 759.54f);
                mPath.cubicTo(811.1f, 757.12f, 810.23f, 755.28f, 811.72f, 752.94f);
                mPath.cubicTo(815.58f, 746.89f, 820.68f, 753.35f, 825.22f, 747.22f);
                mPath.cubicTo(826.21f, 745.88f, 827.28f, 740.15f, 828.11f, 737.93f);
                mPath.cubicTo(830.92f, 730.49f, 832.74f, 727.97f, 838.36f, 722.33f);
                mPath.cubicTo(836.47f, 719.34f, 832.9f, 714.81f, 834.35f, 710.93f);
                mPath.cubicTo(834.78f, 709.78f, 836.88f, 707.37f, 837.76f, 706.13f);
                mPath.cubicTo(837.76f, 706.13f, 831.76f, 705.33f, 831.76f, 705.33f);
                mPath.cubicTo(831.76f, 705.33f, 821.57f, 705.79f, 821.57f, 705.79f);
                mPath.cubicTo(821.57f, 705.79f, 816.77f, 703.03f, 816.77f, 703.03f);
                mPath.cubicTo(816.77f, 703.03f, 812.16f, 700.99f, 812.16f, 700.99f);
                mPath.cubicTo(812.16f, 700.99f, 807.71f, 696.59f, 807.71f, 696.59f);
                mPath.cubicTo(807.71f, 696.59f, 801.17f, 698.33f, 801.17f, 698.33f);
                mPath.cubicTo(801.17f, 698.33f, 799.37f, 691.21f, 799.37f, 691.21f);
                mPath.cubicTo(799.37f, 691.21f, 793.37f, 691.21f, 793.37f, 691.21f);
                mPath.cubicTo(789.9f, 691.75f, 783.89f, 693.61f, 780.77f, 693.24f);
                mPath.cubicTo(778.76f, 693.0f, 777.14f, 692.52f, 775.74f, 690.99f);
                mPath.cubicTo(774.61f, 689.76f, 773.95f, 687.93f, 772.27f, 687.31f);
                mPath.cubicTo(769.16f, 686.16f, 763.66f, 689.7f, 760.98f, 691.12f);
                mPath.cubicTo(760.98f, 691.12f, 759.18f, 685.72f, 759.18f, 685.72f);
                mPath.cubicTo(756.79f, 688.13f, 754.46f, 692.5f, 751.92f, 693.73f);
                mPath.cubicTo(744.69f, 697.25f, 731.15f, 690.34f, 726.78f, 684.52f);
                mPath.cubicTo(726.78f, 684.52f, 730.98f, 682.12f, 730.98f, 682.12f);
                mPath.cubicTo(729.71f, 676.58f, 725.56f, 664.02f, 720.18f, 661.68f);
                mPath.cubicTo(718.26f, 660.84f, 715.71f, 661.23f, 713.58f, 661.02f);
                mPath.cubicTo(710.42f, 660.7f, 704.16f, 658.82f, 701.67f, 656.94f);
                mPath.cubicTo(699.02f, 654.93f, 699.82f, 652.39f, 698.68f, 649.72f);
                mPath.cubicTo(698.68f, 649.72f, 698.68f, 649.72f, 698.68f, 649.72f);
                mPath.close();
                mPath.moveTo(698.68f, 649.72f);
                break;
            case 28:
                mPath.moveTo(1222.6f, 890.78f);
                mPath.cubicTo(1221.03f, 889.32f, 1216.07f, 887.86f, 1213.9f, 887.36f);
                mPath.cubicTo(1212.74f, 889.36f, 1212.09f, 890.8f, 1210.24f, 892.29f);
                mPath.cubicTo(1207.24f, 894.7f, 1203.07f, 896.09f, 1200.92f, 899.46f);
                mPath.cubicTo(1198.42f, 903.39f, 1200.32f, 906.91f, 1198.89f, 909.46f);
                mPath.cubicTo(1197.7f, 911.59f, 1195.26f, 912.03f, 1193.4f, 915.57f);
                mPath.cubicTo(1193.4f, 915.57f, 1190.25f, 925.77f, 1190.25f, 925.77f);
                mPath.cubicTo(1188.57f, 930.25f, 1183.61f, 940.45f, 1183.43f, 944.37f);
                mPath.cubicTo(1183.29f, 947.43f, 1184.83f, 949.12f, 1185.09f, 951.32f);
                mPath.cubicTo(1185.33f, 953.3f, 1184.27f, 955.05f, 1184.75f, 957.57f);
                mPath.cubicTo(1184.75f, 957.57f, 1187.75f, 964.77f, 1187.75f, 964.77f);
                mPath.cubicTo(1189.08f, 968.83f, 1188.77f, 971.46f, 1191.68f, 975.51f);
                mPath.cubicTo(1194.1f, 978.87f, 1199.36f, 980.32f, 1202.44f, 983.01f);
                mPath.cubicTo(1206.21f, 986.29f, 1203.64f, 987.38f, 1211.43f, 991.18f);
                mPath.cubicTo(1211.48f, 985.19f, 1209.55f, 982.24f, 1211.43f, 976.17f);
                mPath.cubicTo(1213.05f, 970.55f, 1214.34f, 969.86f, 1216.93f, 965.37f);
                mPath.cubicTo(1217.9f, 963.68f, 1221.11f, 955.8f, 1221.47f, 953.97f);
                mPath.cubicTo(1221.47f, 953.97f, 1221.8f, 947.97f, 1221.8f, 947.97f);
                mPath.cubicTo(1222.23f, 943.71f, 1222.89f, 943.75f, 1222.9f, 938.37f);
                mPath.cubicTo(1222.92f, 926.62f, 1222.57f, 930.13f, 1224.65f, 918.56f);
                mPath.cubicTo(1224.65f, 918.56f, 1227.19f, 907.76f, 1227.19f, 907.76f);
                mPath.cubicTo(1227.15f, 905.35f, 1225.67f, 903.77f, 1225.36f, 900.56f);
                mPath.cubicTo(1225.05f, 897.3f, 1225.26f, 893.25f, 1222.6f, 890.78f);
                mPath.cubicTo(1222.6f, 890.78f, 1222.6f, 890.78f, 1222.6f, 890.78f);
                mPath.close();
                mPath.moveTo(1222.6f, 890.78f);
                break;
            case 29:
                mPath.moveTo(1034.53f, 440.88f);
                mPath.cubicTo(1034.45f, 445.55f, 1035.14f, 448.38f, 1035.73f, 452.77f);
                mPath.cubicTo(1034.15f, 452.59f, 1029.68f, 451.32f, 1028.54f, 452.77f);
                mPath.cubicTo(1026.44f, 455.17f, 1030.54f, 462.59f, 1030.75f, 465.48f);
                mPath.cubicTo(1030.75f, 465.48f, 1029.23f, 476.29f, 1029.23f, 476.29f);
                mPath.cubicTo(1029.14f, 477.52f, 1029.15f, 478.73f, 1029.74f, 479.86f);
                mPath.cubicTo(1030.82f, 481.91f, 1035.83f, 485.05f, 1038.13f, 485.33f);
                mPath.cubicTo(1039.84f, 485.53f, 1046.75f, 483.9f, 1048.98f, 483.49f);
                mPath.cubicTo(1048.98f, 483.49f, 1048.98f, 477.49f, 1048.98f, 477.49f);
                mPath.cubicTo(1049.42f, 474.28f, 1051.86f, 466.02f, 1054.45f, 464.13f);
                mPath.cubicTo(1055.62f, 463.27f, 1056.56f, 463.24f, 1057.93f, 463.08f);
                mPath.cubicTo(1057.93f, 463.08f, 1053.73f, 451.68f, 1053.73f, 451.68f);
                mPath.cubicTo(1053.73f, 451.68f, 1048.93f, 452.88f, 1048.93f, 452.88f);
                mPath.cubicTo(1048.93f, 452.88f, 1045.61f, 446.88f, 1045.61f, 446.88f);
                mPath.cubicTo(1045.61f, 446.88f, 1044.13f, 439.68f, 1044.13f, 439.68f);
                mPath.cubicTo(1044.13f, 439.68f, 1048.33f, 438.48f, 1048.33f, 438.48f);
                mPath.cubicTo(1044.75f, 434.42f, 1037.63f, 430.46f, 1034.89f, 437.88f);
                mPath.cubicTo(1034.54f, 438.82f, 1034.55f, 439.9f, 1034.53f, 440.88f);
                mPath.cubicTo(1034.53f, 440.88f, 1034.53f, 440.88f, 1034.53f, 440.88f);
                mPath.close();
                mPath.moveTo(1034.53f, 440.88f);
                break;

        }
    }

    private void renderByProvince4(int index) {
        switch (index) {
            case 30:
                mPath.moveTo(282.85f, 180.19f);
                mPath.cubicTo(281.55f, 179.71f, 278.91f, 179.83f, 277.45f, 179.83f);
                mPath.cubicTo(275.8f, 185.95f, 274.38f, 185.87f, 271.66f, 190.64f);
                mPath.cubicTo(267.23f, 198.37f, 268.53f, 197.55f, 262.38f, 205.64f);
                mPath.cubicTo(260.14f, 208.58f, 256.76f, 211.52f, 255.29f, 214.64f);
                mPath.cubicTo(253.88f, 217.62f, 252.64f, 222.75f, 252.92f, 226.04f);
                mPath.cubicTo(253.14f, 228.6f, 254.11f, 229.61f, 254.37f, 231.44f);
                mPath.cubicTo(254.62f, 233.21f, 253.92f, 235.71f, 253.46f, 237.44f);
                mPath.cubicTo(248.59f, 233.84f, 248.2f, 235.82f, 245.77f, 234.43f);
                mPath.cubicTo(243.97f, 233.41f, 242.96f, 230.81f, 240.84f, 229.4f);
                mPath.cubicTo(239.1f, 228.24f, 236.87f, 228.4f, 234.86f, 228.45f);
                mPath.cubicTo(234.86f, 228.45f, 218.66f, 230.22f, 218.66f, 230.22f);
                mPath.cubicTo(218.66f, 230.22f, 210.87f, 230.22f, 210.87f, 230.22f);
                mPath.cubicTo(210.87f, 230.22f, 206.07f, 229.51f, 206.07f, 229.51f);
                mPath.cubicTo(203.04f, 229.28f, 198.26f, 230.09f, 197.84f, 233.84f);
                mPath.cubicTo(197.47f, 237.1f, 202.38f, 238.78f, 202.73f, 242.84f);
                mPath.cubicTo(202.73f, 242.84f, 200.72f, 262.05f, 200.72f, 262.05f);
                mPath.cubicTo(200.72f, 262.05f, 200.72f, 269.25f, 200.72f, 269.25f);
                mPath.cubicTo(201.2f, 273.51f, 201.86f, 273.47f, 201.87f, 278.85f);
                mPath.cubicTo(201.87f, 278.85f, 201.87f, 291.45f, 201.87f, 291.45f);
                mPath.cubicTo(199.34f, 290.95f, 195.8f, 289.58f, 194.43f, 292.77f);
                mPath.cubicTo(193.7f, 294.45f, 194.61f, 296.58f, 192.68f, 298.14f);
                mPath.cubicTo(191.35f, 299.22f, 184.97f, 300.46f, 183.63f, 303.58f);
                mPath.cubicTo(182.69f, 305.75f, 184.28f, 311.76f, 180.98f, 315.9f);
                mPath.cubicTo(179.63f, 317.59f, 177.33f, 318.08f, 175.47f, 319.05f);
                mPath.cubicTo(175.47f, 319.05f, 170.07f, 322.45f, 170.07f, 322.45f);
                mPath.cubicTo(163.49f, 326.12f, 162.95f, 324.37f, 157.47f, 325.34f);
                mPath.cubicTo(157.47f, 325.34f, 145.48f, 328.28f, 145.48f, 328.28f);
                mPath.cubicTo(145.48f, 328.28f, 134.08f, 331.19f, 134.08f, 331.19f);
                mPath.cubicTo(130.88f, 330.97f, 129.19f, 326.61f, 124.48f, 326.52f);
                mPath.cubicTo(121.26f, 326.46f, 119.93f, 329.19f, 117.28f, 329.92f);
                mPath.cubicTo(117.28f, 329.92f, 108.28f, 330.46f, 108.28f, 330.46f);
                mPath.cubicTo(108.28f, 330.46f, 107.68f, 336.46f, 107.68f, 336.46f);
                mPath.cubicTo(102.11f, 335.32f, 101.37f, 333.83f, 99.28f, 333.46f);
                mPath.cubicTo(92.53f, 332.24f, 90.29f, 342.22f, 84.29f, 346.98f);
                mPath.cubicTo(79.28f, 350.93f, 77.51f, 347.8f, 72.89f, 348.18f);
                mPath.cubicTo(70.44f, 348.39f, 66.26f, 349.87f, 64.3f, 347.53f);
                mPath.cubicTo(63.3f, 346.33f, 63.91f, 343.99f, 63.85f, 342.46f);
                mPath.cubicTo(63.78f, 340.06f, 63.07f, 338.59f, 62.09f, 336.46f);
                mPath.cubicTo(62.09f, 336.46f, 52.24f, 339.28f, 52.24f, 339.28f);
                mPath.cubicTo(52.24f, 339.28f, 45.29f, 335.86f, 45.29f, 335.86f);
                mPath.cubicTo(45.29f, 335.86f, 45.29f, 341.26f, 45.29f, 341.26f);
                mPath.cubicTo(37.48f, 338.41f, 36.77f, 342.77f, 32.09f, 343.52f);
                mPath.cubicTo(30.19f, 343.82f, 29.13f, 342.77f, 27.3f, 342.7f);
                mPath.cubicTo(23.9f, 342.58f, 19.35f, 345.15f, 17.4f, 347.86f);
                mPath.cubicTo(15.45f, 350.61f, 16.29f, 352.66f, 14.39f, 354.75f);
                mPath.cubicTo(12.18f, 357.2f, 8.46f, 357.81f, 6.14f, 362.27f);
                mPath.cubicTo(4.65f, 365.14f, 6.63f, 366.36f, 6.82f, 368.62f);
                mPath.cubicTo(7.17f, 372.8f, 3.47f, 376.45f, 0.3f, 378.47f);
                mPath.cubicTo(1.43f, 381.09f, 3.76f, 386.8f, 6.32f, 388.03f);
                mPath.cubicTo(8.88f, 389.26f, 11.5f, 386.91f, 13.85f, 386.88f);
                mPath.cubicTo(16.98f, 386.84f, 22.39f, 391.68f, 24.09f, 394.07f);
                mPath.cubicTo(26.44f, 397.4f, 23.68f, 401.47f, 22.92f, 404.87f);
                mPath.cubicTo(22.17f, 407.77f, 23.21f, 409.15f, 22.92f, 412.07f);
                mPath.cubicTo(22.92f, 412.07f, 20.35f, 423.48f, 20.35f, 423.48f);
                mPath.cubicTo(20.13f, 427.4f, 24.94f, 429.05f, 19.92f, 433.53f);
                mPath.cubicTo(16.16f, 436.7f, 13.61f, 433.71f, 11.1f, 433.53f);
                mPath.cubicTo(9.99f, 433.61f, 7.05f, 434.57f, 5.7f, 434.88f);
                mPath.cubicTo(5.7f, 434.88f, 15.9f, 443.29f, 15.9f, 443.29f);
                mPath.cubicTo(15.9f, 443.29f, 20.7f, 445.93f, 20.7f, 445.93f);
                mPath.cubicTo(25.28f, 449.41f, 25.14f, 452.03f, 26.69f, 453.79f);
                mPath.cubicTo(28.14f, 455.43f, 29.82f, 454.89f, 31.71f, 457.17f);
                mPath.cubicTo(34.87f, 460.98f, 35.27f, 469.4f, 33.49f, 473.89f);
                mPath.cubicTo(32.77f, 475.69f, 31.49f, 477.19f, 30.3f, 478.69f);
                mPath.cubicTo(33.38f, 483.08f, 33.87f, 482.19f, 33.89f, 487.69f);
                mPath.cubicTo(41.53f, 487.72f, 40.13f, 490.42f, 44.55f, 495.29f);
                mPath.cubicTo(46.41f, 497.36f, 48.56f, 498.01f, 50.59f, 499.89f);
                mPath.cubicTo(52.25f, 501.42f, 53.14f, 503.18f, 54.99f, 504.51f);
                mPath.cubicTo(58.74f, 507.22f, 66.53f, 507.98f, 71.09f, 509.62f);
                mPath.cubicTo(72.98f, 510.3f, 74.72f, 511.36f, 76.49f, 512.29f);
                mPath.cubicTo(73.6f, 515.67f, 72.13f, 517.89f, 73.12f, 522.49f);
                mPath.cubicTo(73.12f, 522.49f, 74.74f, 527.3f, 74.74f, 527.3f);
                mPath.cubicTo(74.74f, 527.3f, 74.1f, 536.29f, 74.1f, 536.29f);
                mPath.cubicTo(74.26f, 540.52f, 75.98f, 539.23f, 80.69f, 543.55f);
                mPath.cubicTo(82.64f, 545.35f, 87.75f, 551.0f, 89.69f, 551.83f);
                mPath.cubicTo(91.63f, 552.67f, 94.71f, 551.5f, 96.88f, 551.5f);
                mPath.cubicTo(96.88f, 551.5f, 107.68f, 553.24f, 107.68f, 553.24f);
                mPath.cubicTo(110.74f, 553.31f, 112.91f, 549.28f, 114.64f, 547.1f);
                mPath.cubicTo(114.64f, 547.1f, 121.54f, 537.55f, 121.54f, 537.55f);
                mPath.cubicTo(121.54f, 537.55f, 126.28f, 533.27f, 126.28f, 533.27f);
                mPath.cubicTo(127.53f, 532.08f, 129.58f, 529.82f, 131.08f, 529.13f);
                mPath.cubicTo(134.93f, 527.37f, 139.43f, 531.63f, 142.48f, 533.37f);
                mPath.cubicTo(144.83f, 534.71f, 147.58f, 535.73f, 150.28f, 536.12f);
                mPath.cubicTo(151.78f, 536.33f, 154.44f, 536.18f, 155.61f, 536.66f);
                mPath.cubicTo(157.73f, 537.52f, 157.93f, 539.49f, 159.51f, 540.49f);
                mPath.cubicTo(160.69f, 541.23f, 162.7f, 541.1f, 164.07f, 541.1f);
                mPath.cubicTo(165.97f, 541.1f, 169.0f, 541.32f, 170.67f, 540.49f);
                mPath.cubicTo(173.23f, 539.21f, 180.34f, 530.8f, 187.12f, 532.17f);
                mPath.cubicTo(190.26f, 532.81f, 195.54f, 535.87f, 197.06f, 538.7f);
                mPath.cubicTo(197.87f, 540.22f, 198.13f, 542.98f, 198.27f, 544.7f);
                mPath.cubicTo(205.72f, 545.31f, 204.81f, 547.41f, 209.07f, 548.98f);
                mPath.cubicTo(214.3f, 550.91f, 217.1f, 549.27f, 219.86f, 549.56f);
                mPath.cubicTo(221.69f, 549.75f, 223.05f, 550.87f, 224.66f, 550.82f);
                mPath.cubicTo(226.88f, 550.75f, 230.61f, 547.71f, 233.06f, 546.92f);
                mPath.cubicTo(235.68f, 546.07f, 239.78f, 546.85f, 242.66f, 546.27f);
                mPath.cubicTo(245.19f, 545.77f, 248.53f, 543.81f, 251.06f, 543.76f);
                mPath.cubicTo(255.63f, 543.65f, 259.31f, 549.65f, 262.46f, 549.33f);
                mPath.cubicTo(265.2f, 549.06f, 273.53f, 543.69f, 275.6f, 541.64f);
                mPath.cubicTo(277.49f, 539.78f, 278.92f, 537.17f, 281.65f, 536.48f);
                mPath.cubicTo(281.65f, 536.48f, 293.05f, 535.47f, 293.05f, 535.47f);
                mPath.cubicTo(295.15f, 535.63f, 295.92f, 536.3f, 298.45f, 536.1f);
                mPath.cubicTo(298.45f, 536.1f, 308.65f, 534.65f, 308.65f, 534.65f);
                mPath.cubicTo(310.56f, 534.96f, 311.64f, 536.5f, 313.45f, 537.14f);
                mPath.cubicTo(314.8f, 537.62f, 317.91f, 537.52f, 319.45f, 537.5f);
                mPath.cubicTo(319.45f, 537.5f, 330.25f, 536.3f, 330.25f, 536.3f);
                mPath.cubicTo(333.85f, 536.22f, 336.79f, 536.68f, 339.66f, 539.08f);
                mPath.cubicTo(341.21f, 540.37f, 342.06f, 542.05f, 343.55f, 542.89f);
                mPath.cubicTo(345.6f, 544.04f, 346.2f, 542.66f, 351.24f, 545.15f);
                mPath.cubicTo(351.24f, 545.15f, 362.64f, 552.24f, 362.64f, 552.24f);
                mPath.cubicTo(364.94f, 553.25f, 369.17f, 554.86f, 371.64f, 554.2f);
                mPath.cubicTo(373.42f, 553.72f, 375.27f, 552.06f, 376.79f, 552.04f);
                mPath.cubicTo(378.05f, 552.04f, 380.46f, 553.75f, 381.84f, 554.33f);
                mPath.cubicTo(381.84f, 554.33f, 388.41f, 556.2f, 388.41f, 556.2f);
                mPath.cubicTo(390.02f, 557.07f, 391.43f, 558.93f, 392.64f, 560.3f);
                mPath.cubicTo(394.17f, 559.41f, 395.47f, 558.54f, 396.8f, 557.35f);
                mPath.cubicTo(399.75f, 554.69f, 400.09f, 549.96f, 398.25f, 546.5f);
                mPath.cubicTo(396.99f, 544.15f, 394.06f, 540.37f, 394.5f, 537.5f);
                mPath.cubicTo(395.3f, 532.38f, 402.75f, 531.21f, 404.63f, 529.95f);
                mPath.cubicTo(406.28f, 528.84f, 408.04f, 527.03f, 407.77f, 524.89f);
                mPath.cubicTo(407.41f, 522.1f, 403.54f, 517.07f, 401.95f, 514.69f);
                mPath.cubicTo(400.66f, 512.77f, 399.55f, 510.49f, 397.91f, 508.88f);
                mPath.cubicTo(396.34f, 507.35f, 392.81f, 505.35f, 391.83f, 503.79f);
                mPath.cubicTo(389.95f, 501.14f, 392.73f, 499.72f, 391.83f, 496.09f);
                mPath.cubicTo(391.2f, 492.84f, 388.45f, 485.71f, 389.5f, 482.37f);
                mPath.cubicTo(390.11f, 480.39f, 392.78f, 479.81f, 394.44f, 478.97f);
                mPath.cubicTo(396.14f, 478.12f, 398.3f, 476.32f, 399.83f, 475.91f);
                mPath.cubicTo(399.83f, 475.91f, 408.83f, 476.29f, 408.83f, 476.29f);
                mPath.cubicTo(413.97f, 476.23f, 415.56f, 474.92f, 420.23f, 474.04f);
                mPath.cubicTo(420.23f, 474.04f, 432.23f, 471.66f, 432.23f, 471.66f);
                mPath.cubicTo(432.23f, 471.66f, 440.03f, 470.57f, 440.03f, 470.57f);
                mPath.cubicTo(440.03f, 470.57f, 444.83f, 468.95f, 444.83f, 468.95f);
                mPath.cubicTo(447.56f, 468.2f, 454.5f, 468.61f, 456.38f, 466.79f);
                mPath.cubicTo(457.62f, 465.59f, 458.07f, 459.48f, 457.97f, 457.68f);
                mPath.cubicTo(457.97f, 457.68f, 456.27f, 444.73f, 456.27f, 444.73f);
                mPath.cubicTo(456.66f, 442.91f, 459.13f, 440.35f, 460.02f, 437.88f);
                mPath.cubicTo(460.74f, 435.84f, 461.51f, 427.18f, 461.62f, 424.68f);
                mPath.cubicTo(464.21f, 425.26f, 468.16f, 426.78f, 470.62f, 426.57f);
                mPath.cubicTo(479.21f, 425.84f, 479.3f, 421.77f, 483.54f, 416.28f);
                mPath.cubicTo(483.54f, 416.28f, 492.82f, 406.73f, 492.82f, 406.73f);
                mPath.cubicTo(500.02f, 400.01f, 509.18f, 391.27f, 519.21f, 389.53f);
                mPath.cubicTo(524.48f, 388.61f, 525.47f, 389.76f, 530.01f, 389.87f);
                mPath.cubicTo(531.22f, 389.89f, 533.1f, 389.93f, 534.21f, 389.51f);
                mPath.cubicTo(543.55f, 386.07f, 539.07f, 373.51f, 542.32f, 367.19f);
                mPath.cubicTo(543.37f, 365.14f, 547.14f, 363.76f, 549.21f, 362.87f);
                mPath.cubicTo(548.77f, 360.5f, 548.37f, 357.77f, 547.18f, 355.66f);
                mPath.cubicTo(547.18f, 355.66f, 539.7f, 344.86f, 539.7f, 344.86f);
                mPath.cubicTo(538.71f, 342.7f, 539.22f, 341.05f, 538.78f, 338.86f);
                mPath.cubicTo(538.78f, 338.86f, 536.47f, 332.26f, 536.47f, 332.26f);
                mPath.cubicTo(534.55f, 325.86f, 536.03f, 321.86f, 528.21f, 320.26f);
                mPath.cubicTo(528.21f, 320.26f, 529.41f, 312.34f, 529.41f, 312.34f);
                mPath.cubicTo(528.41f, 312.43f, 527.41f, 312.44f, 526.41f, 312.34f);
                mPath.cubicTo(526.41f, 312.34f, 516.45f, 308.35f, 516.45f, 308.35f);
                mPath.cubicTo(515.06f, 307.28f, 514.65f, 305.65f, 513.44f, 304.43f);
                mPath.cubicTo(513.44f, 304.43f, 509.25f, 301.42f, 509.25f, 301.42f);
                mPath.cubicTo(509.25f, 301.42f, 506.24f, 297.16f, 506.24f, 297.16f);
                mPath.cubicTo(506.24f, 297.16f, 495.22f, 288.23f, 495.22f, 288.23f);
                mPath.cubicTo(491.01f, 285.24f, 481.21f, 282.52f, 476.02f, 282.31f);
                mPath.cubicTo(473.68f, 282.43f, 471.11f, 282.59f, 468.82f, 282.31f);
                mPath.cubicTo(463.07f, 281.14f, 462.24f, 278.85f, 457.43f, 277.93f);
                mPath.cubicTo(457.43f, 277.93f, 452.63f, 277.29f, 452.63f, 277.29f);
                mPath.cubicTo(450.74f, 276.61f, 449.72f, 275.09f, 447.83f, 274.41f);
                mPath.cubicTo(447.83f, 274.41f, 443.63f, 273.74f, 443.63f, 273.74f);
                mPath.cubicTo(443.63f, 273.74f, 440.03f, 272.15f, 440.03f, 272.15f);
                mPath.cubicTo(437.65f, 271.27f, 435.82f, 272.09f, 434.71f, 269.21f);
                mPath.cubicTo(433.96f, 267.25f, 432.04f, 259.65f, 432.55f, 257.85f);
                mPath.cubicTo(434.31f, 251.58f, 440.03f, 249.73f, 441.43f, 242.84f);
                mPath.cubicTo(442.22f, 239.52f, 440.79f, 237.74f, 441.43f, 235.39f);
                mPath.cubicTo(441.43f, 235.39f, 443.85f, 229.04f, 443.85f, 229.04f);
                mPath.cubicTo(444.57f, 226.44f, 444.3f, 220.22f, 443.42f, 217.64f);
                mPath.cubicTo(442.21f, 214.06f, 438.87f, 212.68f, 437.21f, 206.84f);
                mPath.cubicTo(435.72f, 201.6f, 437.17f, 197.17f, 435.44f, 193.7f);
                mPath.cubicTo(434.27f, 191.35f, 432.45f, 191.29f, 430.82f, 189.31f);
                mPath.cubicTo(429.61f, 187.85f, 429.25f, 185.96f, 428.21f, 185.25f);
                mPath.cubicTo(426.84f, 184.32f, 425.29f, 185.57f, 423.55f, 184.25f);
                mPath.cubicTo(422.11f, 183.16f, 421.43f, 180.61f, 419.01f, 179.43f);
                mPath.cubicTo(416.06f, 177.99f, 415.02f, 180.31f, 411.83f, 177.89f);
                mPath.cubicTo(411.83f, 177.89f, 402.05f, 169.58f, 402.05f, 169.58f);
                mPath.cubicTo(400.57f, 167.53f, 400.58f, 165.17f, 398.93f, 163.34f);
                mPath.cubicTo(397.42f, 161.67f, 394.3f, 160.39f, 393.25f, 158.64f);
                mPath.cubicTo(392.16f, 156.83f, 393.02f, 154.11f, 392.29f, 152.42f);
                mPath.cubicTo(392.29f, 152.42f, 386.64f, 145.63f, 386.64f, 145.63f);
                mPath.cubicTo(386.64f, 145.63f, 390.24f, 143.83f, 390.24f, 143.83f);
                mPath.cubicTo(390.24f, 143.83f, 389.04f, 137.23f, 389.04f, 137.23f);
                mPath.cubicTo(386.71f, 137.69f, 384.22f, 138.52f, 381.84f, 138.35f);
                mPath.cubicTo(378.75f, 138.14f, 368.41f, 132.49f, 367.12f, 139.63f);
                mPath.cubicTo(367.12f, 139.63f, 367.12f, 143.83f, 367.12f, 143.83f);
                mPath.cubicTo(366.7f, 146.9f, 363.61f, 150.67f, 360.84f, 151.97f);
                mPath.cubicTo(359.72f, 152.5f, 352.72f, 154.1f, 351.49f, 154.07f);
                mPath.cubicTo(347.31f, 153.96f, 343.97f, 152.31f, 340.54f, 156.5f);
                mPath.cubicTo(336.71f, 161.16f, 337.27f, 162.56f, 336.74f, 167.83f);
                mPath.cubicTo(336.74f, 167.83f, 335.7f, 174.43f, 335.7f, 174.43f);
                mPath.cubicTo(335.48f, 177.5f, 335.96f, 180.39f, 335.19f, 183.43f);
                mPath.cubicTo(334.27f, 187.05f, 332.29f, 191.94f, 328.45f, 193.27f);
                mPath.cubicTo(325.37f, 194.33f, 321.34f, 191.72f, 318.25f, 191.54f);
                mPath.cubicTo(316.27f, 191.42f, 314.96f, 192.24f, 312.85f, 192.02f);
                mPath.cubicTo(312.85f, 192.02f, 305.65f, 190.14f, 305.65f, 190.14f);
                mPath.cubicTo(302.1f, 189.72f, 300.54f, 190.49f, 296.65f, 188.87f);
                mPath.cubicTo(296.65f, 188.87f, 288.85f, 184.93f, 288.85f, 184.93f);
                mPath.cubicTo(286.86f, 183.51f, 285.08f, 181.02f, 282.85f, 180.19f);
                mPath.cubicTo(282.85f, 180.19f, 282.85f, 180.19f, 282.85f, 180.19f);
                mPath.close();
                mPath.moveTo(282.85f, 180.19f);
                break;
            case 31:
                mPath.moveTo(108.87f, 696.29f);
                mPath.cubicTo(109.81f, 697.64f, 111.63f, 698.3f, 113.08f, 698.93f);
                mPath.cubicTo(114.41f, 697.15f, 116.9f, 693.93f, 118.53f, 692.56f);
                mPath.cubicTo(122.32f, 689.38f, 124.1f, 690.18f, 128.08f, 692.17f);
                mPath.cubicTo(129.34f, 692.81f, 131.02f, 693.59f, 132.08f, 694.5f);
                mPath.cubicTo(134.74f, 696.81f, 136.9f, 702.39f, 138.76f, 705.47f);
                mPath.cubicTo(140.51f, 708.4f, 142.09f, 708.67f, 144.04f, 710.98f);
                mPath.cubicTo(146.43f, 713.81f, 145.75f, 715.31f, 150.28f, 718.93f);
                mPath.cubicTo(153.02f, 721.11f, 157.82f, 723.28f, 159.5f, 725.39f);
                mPath.cubicTo(162.33f, 728.97f, 162.99f, 734.51f, 167.68f, 738.14f);
                mPath.cubicTo(171.78f, 741.32f, 172.14f, 738.29f, 175.47f, 738.74f);
                mPath.cubicTo(178.09f, 739.1f, 181.99f, 742.04f, 182.91f, 744.53f);
                mPath.cubicTo(183.38f, 745.79f, 183.26f, 747.96f, 183.27f, 749.33f);
                mPath.cubicTo(183.32f, 756.71f, 187.51f, 757.61f, 192.21f, 761.57f);
                mPath.cubicTo(193.65f, 762.78f, 194.71f, 764.49f, 196.49f, 765.18f);
                mPath.cubicTo(198.27f, 765.86f, 200.64f, 765.14f, 202.23f, 766.15f);
                mPath.cubicTo(205.21f, 768.05f, 205.45f, 774.46f, 207.01f, 775.75f);
                mPath.cubicTo(207.75f, 776.36f, 216.32f, 778.37f, 219.1f, 780.53f);
                mPath.cubicTo(221.08f, 782.08f, 221.34f, 784.97f, 222.41f, 787.14f);
                mPath.cubicTo(223.46f, 789.3f, 225.13f, 791.15f, 226.46f, 793.14f);
                mPath.cubicTo(226.46f, 793.14f, 228.86f, 788.94f, 228.86f, 788.94f);
                mPath.cubicTo(230.85f, 790.36f, 234.77f, 794.64f, 236.66f, 794.8f);
                mPath.cubicTo(240.24f, 795.1f, 240.45f, 791.06f, 246.27f, 793.51f);
                mPath.cubicTo(248.69f, 794.53f, 251.43f, 796.19f, 253.22f, 798.12f);
                mPath.cubicTo(254.19f, 799.16f, 255.03f, 800.86f, 256.09f, 801.53f);
                mPath.cubicTo(257.82f, 802.62f, 262.49f, 801.87f, 264.86f, 802.38f);
                mPath.cubicTo(267.0f, 802.84f, 268.63f, 804.12f, 270.26f, 804.15f);
                mPath.cubicTo(272.44f, 804.17f, 273.63f, 802.35f, 275.65f, 802.26f);
                mPath.cubicTo(275.65f, 802.26f, 279.85f, 803.14f, 279.85f, 803.14f);
                mPath.cubicTo(281.6f, 803.48f, 285.9f, 803.38f, 287.65f, 803.14f);
                mPath.cubicTo(292.61f, 802.17f, 294.24f, 799.98f, 297.25f, 801.53f);
                mPath.cubicTo(306.35f, 806.2f, 299.84f, 812.21f, 299.66f, 818.95f);
                mPath.cubicTo(299.53f, 823.77f, 300.54f, 825.61f, 304.45f, 828.55f);
                mPath.cubicTo(305.42f, 824.94f, 306.96f, 818.57f, 309.32f, 815.95f);
                mPath.cubicTo(311.97f, 812.99f, 314.03f, 811.99f, 316.35f, 809.77f);
                mPath.cubicTo(319.74f, 806.51f, 320.19f, 804.02f, 325.45f, 802.52f);
                mPath.cubicTo(328.33f, 801.71f, 336.2f, 802.73f, 338.64f, 804.3f);
                mPath.cubicTo(340.65f, 805.59f, 342.11f, 807.86f, 344.64f, 809.17f);
                mPath.cubicTo(344.64f, 809.17f, 354.24f, 812.41f, 354.24f, 812.41f);
                mPath.cubicTo(357.06f, 813.64f, 358.03f, 815.26f, 360.24f, 815.75f);
                mPath.cubicTo(360.24f, 815.75f, 367.44f, 815.35f, 367.44f, 815.35f);
                mPath.cubicTo(372.06f, 815.3f, 373.19f, 815.11f, 375.38f, 819.55f);
                mPath.cubicTo(375.99f, 820.78f, 376.45f, 821.75f, 376.68f, 823.15f);
                mPath.cubicTo(376.7f, 825.19f, 375.49f, 827.68f, 376.68f, 829.43f);
                mPath.cubicTo(379.48f, 832.94f, 386.04f, 832.7f, 387.39f, 836.97f);
                mPath.cubicTo(389.67f, 843.19f, 384.65f, 845.36f, 387.39f, 850.72f);
                mPath.cubicTo(387.86f, 851.92f, 388.36f, 852.6f, 389.7f, 853.06f);
                mPath.cubicTo(390.47f, 853.18f, 392.38f, 853.17f, 393.24f, 853.06f);
                mPath.cubicTo(393.24f, 853.06f, 401.03f, 852.43f, 401.03f, 852.43f);
                mPath.cubicTo(401.03f, 852.43f, 405.23f, 853.98f, 405.23f, 853.98f);
                mPath.cubicTo(405.23f, 853.98f, 410.63f, 854.67f, 410.63f, 854.67f);
                mPath.cubicTo(410.63f, 854.67f, 416.63f, 856.35f, 416.63f, 856.35f);
                mPath.cubicTo(416.63f, 856.35f, 423.83f, 855.58f, 423.83f, 855.58f);
                mPath.cubicTo(426.5f, 855.46f, 430.27f, 855.58f, 432.75f, 854.43f);
                mPath.cubicTo(435.16f, 853.32f, 435.08f, 851.11f, 436.73f, 849.01f);
                mPath.cubicTo(436.73f, 849.01f, 446.63f, 840.21f, 446.63f, 840.21f);
                mPath.cubicTo(451.02f, 836.97f, 454.8f, 839.12f, 459.22f, 837.34f);
                mPath.cubicTo(463.0f, 835.83f, 474.82f, 830.57f, 477.82f, 828.57f);
                mPath.cubicTo(482.24f, 825.61f, 482.27f, 822.15f, 489.22f, 820.95f);
                mPath.cubicTo(495.52f, 819.85f, 496.58f, 822.0f, 501.82f, 823.93f);
                mPath.cubicTo(505.87f, 825.42f, 510.46f, 826.44f, 513.82f, 829.27f);
                mPath.cubicTo(513.82f, 829.27f, 518.02f, 833.12f, 518.02f, 833.12f);
                mPath.cubicTo(518.02f, 833.12f, 522.79f, 836.48f, 522.79f, 836.48f);
                mPath.cubicTo(523.76f, 837.32f, 525.26f, 839.21f, 526.52f, 839.41f);
                mPath.cubicTo(529.17f, 839.83f, 531.56f, 835.91f, 532.56f, 833.95f);
                mPath.cubicTo(534.99f, 829.14f, 537.66f, 820.13f, 543.2f, 817.95f);
                mPath.cubicTo(546.25f, 816.75f, 546.95f, 820.95f, 549.92f, 823.37f);
                mPath.cubicTo(551.09f, 824.32f, 556.99f, 828.1f, 558.21f, 828.06f);
                mPath.cubicTo(559.49f, 828.03f, 562.34f, 826.23f, 563.61f, 825.55f);
                mPath.cubicTo(564.27f, 826.81f, 564.98f, 828.4f, 566.29f, 829.13f);
                mPath.cubicTo(567.85f, 830.0f, 572.14f, 828.81f, 572.81f, 827.1f);
                mPath.cubicTo(573.37f, 825.68f, 571.47f, 816.58f, 571.36f, 814.25f);
                mPath.cubicTo(571.24f, 811.66f, 573.57f, 807.64f, 574.41f, 804.54f);
                mPath.cubicTo(574.41f, 804.54f, 580.4f, 808.15f, 580.4f, 808.15f);
                mPath.cubicTo(580.4f, 808.15f, 582.93f, 801.54f, 582.93f, 801.54f);
                mPath.cubicTo(582.93f, 801.54f, 585.5f, 796.74f, 585.5f, 796.74f);
                mPath.cubicTo(585.5f, 796.74f, 583.46f, 782.94f, 583.46f, 782.94f);
                mPath.cubicTo(583.46f, 782.94f, 585.64f, 773.34f, 585.64f, 773.34f);
                mPath.cubicTo(585.64f, 773.34f, 583.54f, 764.34f, 583.54f, 764.34f);
                mPath.cubicTo(583.54f, 764.34f, 583.54f, 755.34f, 583.54f, 755.34f);
                mPath.cubicTo(583.54f, 755.34f, 582.34f, 746.93f, 582.34f, 746.93f);
                mPath.cubicTo(582.34f, 746.93f, 578.06f, 734.33f, 578.06f, 734.33f);
                mPath.cubicTo(578.06f, 734.33f, 578.97f, 729.28f, 578.97f, 729.28f);
                mPath.cubicTo(578.97f, 729.28f, 582.8f, 727.73f, 582.8f, 727.73f);
                mPath.cubicTo(582.8f, 727.73f, 579.43f, 724.08f, 579.43f, 724.08f);
                mPath.cubicTo(579.43f, 724.08f, 573.49f, 714.53f, 573.49f, 714.53f);
                mPath.cubicTo(572.59f, 712.24f, 572.8f, 710.09f, 572.29f, 707.93f);
                mPath.cubicTo(571.59f, 704.92f, 567.64f, 696.26f, 565.38f, 694.36f);
                mPath.cubicTo(562.44f, 691.9f, 556.62f, 689.97f, 552.81f, 689.92f);
                mPath.cubicTo(550.7f, 689.9f, 548.3f, 689.58f, 546.79f, 691.31f);
                mPath.cubicTo(545.48f, 692.82f, 544.14f, 696.35f, 543.7f, 698.33f);
                mPath.cubicTo(543.4f, 699.66f, 543.25f, 701.79f, 542.26f, 702.77f);
                mPath.cubicTo(540.96f, 704.04f, 539.01f, 703.47f, 537.21f, 704.06f);
                mPath.cubicTo(535.67f, 704.57f, 533.7f, 706.09f, 532.54f, 707.21f);
                mPath.cubicTo(529.53f, 710.14f, 530.22f, 713.47f, 528.05f, 714.29f);
                mPath.cubicTo(525.23f, 715.34f, 521.19f, 710.81f, 519.21f, 709.43f);
                mPath.cubicTo(517.5f, 708.23f, 515.78f, 707.9f, 513.82f, 707.33f);
                mPath.cubicTo(513.82f, 707.33f, 512.62f, 714.53f, 512.62f, 714.53f);
                mPath.cubicTo(512.62f, 714.53f, 501.82f, 710.73f, 501.82f, 710.73f);
                mPath.cubicTo(500.27f, 710.21f, 497.23f, 709.4f, 496.18f, 708.22f);
                mPath.cubicTo(494.17f, 705.95f, 496.47f, 703.16f, 493.86f, 697.73f);
                mPath.cubicTo(493.19f, 696.32f, 492.4f, 694.55f, 490.89f, 693.88f);
                mPath.cubicTo(489.14f, 693.12f, 487.49f, 694.15f, 485.3f, 692.14f);
                mPath.cubicTo(481.95f, 689.07f, 479.53f, 681.5f, 474.82f, 680.36f);
                mPath.cubicTo(472.31f, 679.75f, 466.53f, 683.47f, 463.42f, 683.88f);
                mPath.cubicTo(458.31f, 684.55f, 454.95f, 679.52f, 450.83f, 678.68f);
                mPath.cubicTo(448.92f, 678.3f, 446.6f, 678.81f, 444.23f, 678.14f);
                mPath.cubicTo(444.23f, 678.14f, 431.03f, 672.98f, 431.03f, 672.98f);
                mPath.cubicTo(427.29f, 671.83f, 422.54f, 671.23f, 419.03f, 669.36f);
                mPath.cubicTo(416.85f, 668.19f, 415.66f, 666.53f, 414.23f, 665.73f);
                mPath.cubicTo(411.65f, 664.29f, 410.16f, 666.2f, 407.63f, 664.86f);
                mPath.cubicTo(406.42f, 664.21f, 404.47f, 662.15f, 403.43f, 661.12f);
                mPath.cubicTo(397.84f, 655.53f, 396.62f, 655.18f, 395.04f, 647.32f);
                mPath.cubicTo(388.44f, 649.48f, 389.01f, 649.16f, 382.44f, 649.82f);
                mPath.cubicTo(380.84f, 649.98f, 378.53f, 650.66f, 377.04f, 650.31f);
                mPath.cubicTo(375.17f, 649.86f, 372.46f, 647.39f, 371.04f, 646.06f);
                mPath.cubicTo(369.39f, 644.53f, 366.09f, 641.32f, 364.93f, 639.52f);
                mPath.cubicTo(364.93f, 639.52f, 361.01f, 630.51f, 361.01f, 630.51f);
                mPath.cubicTo(358.53f, 625.59f, 356.1f, 626.7f, 355.1f, 620.31f);
                mPath.cubicTo(354.11f, 614.02f, 356.79f, 615.99f, 358.87f, 612.33f);
                mPath.cubicTo(359.51f, 611.21f, 360.05f, 607.85f, 360.11f, 606.51f);
                mPath.cubicTo(360.11f, 606.51f, 359.42f, 599.31f, 359.42f, 599.31f);
                mPath.cubicTo(359.58f, 597.26f, 361.13f, 593.15f, 360.8f, 591.53f);
                mPath.cubicTo(360.4f, 589.48f, 358.35f, 588.7f, 357.25f, 586.68f);
                mPath.cubicTo(356.23f, 584.81f, 356.04f, 580.16f, 355.44f, 577.7f);
                mPath.cubicTo(367.07f, 574.03f, 363.56f, 562.84f, 359.04f, 554.9f);
                mPath.cubicTo(359.04f, 554.9f, 364.44f, 553.7f, 364.44f, 553.7f);
                mPath.cubicTo(364.44f, 553.7f, 360.24f, 551.24f, 360.24f, 551.24f);
                mPath.cubicTo(356.28f, 548.67f, 355.57f, 547.37f, 350.64f, 545.18f);
                mPath.cubicTo(347.09f, 543.59f, 345.96f, 544.48f, 344.07f, 543.49f);
                mPath.cubicTo(342.45f, 542.63f, 341.27f, 540.76f, 339.79f, 539.53f);
                mPath.cubicTo(337.29f, 537.44f, 335.2f, 536.94f, 332.05f, 536.9f);
                mPath.cubicTo(332.05f, 536.9f, 318.85f, 538.1f, 318.85f, 538.1f);
                mPath.cubicTo(317.12f, 538.12f, 315.03f, 538.24f, 313.45f, 537.49f);
                mPath.cubicTo(311.68f, 536.64f, 310.78f, 535.11f, 308.65f, 534.96f);
                mPath.cubicTo(308.65f, 534.96f, 297.85f, 536.62f, 297.85f, 536.62f);
                mPath.cubicTo(297.85f, 536.62f, 292.45f, 535.9f, 292.45f, 535.9f);
                mPath.cubicTo(292.45f, 535.9f, 281.06f, 537.08f, 281.06f, 537.08f);
                mPath.cubicTo(278.48f, 537.75f, 277.18f, 540.34f, 275.39f, 542.11f);
                mPath.cubicTo(273.46f, 544.01f, 265.07f, 549.27f, 262.56f, 549.72f);
                mPath.cubicTo(260.77f, 550.03f, 259.55f, 548.4f, 258.25f, 547.41f);
                mPath.cubicTo(255.98f, 545.68f, 253.42f, 543.96f, 250.46f, 544.29f);
                mPath.cubicTo(247.59f, 544.6f, 245.2f, 546.08f, 242.66f, 546.73f);
                mPath.cubicTo(240.61f, 547.26f, 238.18f, 547.07f, 236.06f, 547.1f);
                mPath.cubicTo(229.77f, 547.19f, 228.79f, 550.36f, 225.26f, 551.02f);
                mPath.cubicTo(223.21f, 551.41f, 221.91f, 550.06f, 219.86f, 549.84f);
                mPath.cubicTo(216.91f, 549.7f, 215.68f, 551.38f, 210.27f, 549.84f);
                mPath.cubicTo(207.36f, 548.9f, 206.23f, 547.19f, 203.67f, 546.18f);
                mPath.cubicTo(201.96f, 545.51f, 199.8f, 545.53f, 198.62f, 544.35f);
                mPath.cubicTo(197.16f, 542.89f, 197.49f, 539.97f, 196.46f, 538.15f);
                mPath.cubicTo(195.03f, 535.61f, 189.71f, 532.99f, 186.87f, 532.64f);
                mPath.cubicTo(179.19f, 531.66f, 172.83f, 539.71f, 170.07f, 541.09f);
                mPath.cubicTo(168.87f, 541.69f, 167.77f, 541.67f, 166.47f, 541.7f);
                mPath.cubicTo(164.79f, 541.73f, 160.85f, 541.94f, 159.51f, 541.09f);
                mPath.cubicTo(157.98f, 540.11f, 157.7f, 538.01f, 156.04f, 537.24f);
                mPath.cubicTo(155.07f, 536.79f, 152.22f, 536.92f, 150.88f, 536.72f);
                mPath.cubicTo(148.44f, 536.37f, 145.84f, 535.46f, 143.68f, 534.3f);
                mPath.cubicTo(140.16f, 532.42f, 135.53f, 527.93f, 131.08f, 529.46f);
                mPath.cubicTo(129.19f, 530.12f, 127.14f, 532.48f, 125.68f, 533.87f);
                mPath.cubicTo(123.69f, 535.77f, 121.83f, 537.04f, 120.22f, 539.3f);
                mPath.cubicTo(118.05f, 542.36f, 112.68f, 550.84f, 109.98f, 552.84f);
                mPath.cubicTo(107.89f, 554.33f, 105.19f, 553.3f, 102.88f, 552.84f);
                mPath.cubicTo(98.91f, 552.12f, 95.48f, 551.56f, 91.49f, 552.84f);
                mPath.cubicTo(88.4f, 553.82f, 87.54f, 556.23f, 85.31f, 558.27f);
                mPath.cubicTo(85.31f, 558.27f, 80.43f, 561.87f, 80.43f, 561.87f);
                mPath.cubicTo(79.37f, 563.08f, 79.22f, 564.78f, 78.88f, 566.3f);
                mPath.cubicTo(78.27f, 569.04f, 76.3f, 573.97f, 76.89f, 576.5f);
                mPath.cubicTo(78.2f, 582.09f, 83.0f, 587.58f, 83.09f, 593.91f);
                mPath.cubicTo(83.18f, 600.9f, 84.39f, 609.36f, 76.49f, 612.55f);
                mPath.cubicTo(75.52f, 612.94f, 73.93f, 613.45f, 72.89f, 613.34f);
                mPath.cubicTo(68.86f, 612.92f, 66.99f, 606.16f, 65.8f, 605.09f);
                mPath.cubicTo(64.31f, 603.76f, 61.39f, 605.04f, 60.65f, 606.67f);
                mPath.cubicTo(60.21f, 607.64f, 60.31f, 609.59f, 60.24f, 610.71f);
                mPath.cubicTo(60.1f, 612.71f, 59.03f, 617.5f, 59.5f, 619.11f);
                mPath.cubicTo(60.04f, 620.95f, 61.75f, 622.02f, 61.89f, 623.56f);
                mPath.cubicTo(62.01f, 624.79f, 60.76f, 626.62f, 60.54f, 628.71f);
                mPath.cubicTo(60.54f, 628.71f, 61.01f, 634.71f, 61.01f, 634.71f);
                mPath.cubicTo(61.01f, 634.71f, 59.46f, 640.72f, 59.46f, 640.72f);
                mPath.cubicTo(59.22f, 642.47f, 61.94f, 652.37f, 63.04f, 653.68f);
                mPath.cubicTo(65.15f, 656.2f, 68.86f, 656.25f, 71.69f, 657.31f);
                mPath.cubicTo(74.78f, 658.48f, 80.3f, 662.72f, 82.3f, 665.32f);
                mPath.cubicTo(84.66f, 668.4f, 83.75f, 671.93f, 86.07f, 674.74f);
                mPath.cubicTo(87.76f, 676.8f, 89.31f, 675.9f, 92.68f, 678.35f);
                mPath.cubicTo(96.21f, 680.9f, 98.76f, 684.42f, 101.85f, 687.4f);
                mPath.cubicTo(101.85f, 687.4f, 106.3f, 690.76f, 106.3f, 690.76f);
                mPath.cubicTo(108.23f, 692.73f, 107.8f, 694.76f, 108.87f, 696.29f);
                mPath.cubicTo(108.87f, 696.29f, 108.87f, 696.29f, 108.87f, 696.29f);
                mPath.close();
                mPath.moveTo(108.87f, 696.29f);
                break;
            case 32:
                mPath.moveTo(585.16f, 812.95f);
                mPath.cubicTo(585.07f, 808.49f, 586.91f, 802.86f, 585.16f, 798.54f);
                mPath.cubicTo(582.7f, 801.89f, 581.64f, 804.63f, 581.0f, 808.75f);
                mPath.cubicTo(581.0f, 808.75f, 574.41f, 805.74f, 574.41f, 805.74f);
                mPath.cubicTo(574.41f, 805.74f, 571.89f, 812.95f, 571.89f, 812.95f);
                mPath.cubicTo(571.89f, 812.95f, 573.81f, 828.55f, 573.81f, 828.55f);
                mPath.cubicTo(567.8f, 829.48f, 567.33f, 831.92f, 563.61f, 826.15f);
                mPath.cubicTo(561.96f, 826.75f, 559.73f, 827.68f, 558.55f, 829.02f);
                mPath.cubicTo(557.46f, 830.27f, 557.62f, 831.8f, 557.61f, 833.35f);
                mPath.cubicTo(557.55f, 843.99f, 559.43f, 840.74f, 561.81f, 849.55f);
                mPath.cubicTo(563.58f, 848.9f, 566.58f, 846.83f, 568.23f, 847.67f);
                mPath.cubicTo(571.1f, 849.14f, 572.74f, 854.28f, 572.34f, 857.35f);
                mPath.cubicTo(571.93f, 860.44f, 571.45f, 860.98f, 571.41f, 864.56f);
                mPath.cubicTo(571.41f, 864.56f, 571.41f, 877.16f, 571.41f, 877.16f);
                mPath.cubicTo(571.41f, 877.16f, 570.21f, 885.56f, 570.21f, 885.56f);
                mPath.cubicTo(570.21f, 885.56f, 570.21f, 890.94f, 570.21f, 890.94f);
                mPath.cubicTo(569.64f, 893.91f, 567.57f, 894.08f, 566.67f, 895.94f);
                mPath.cubicTo(565.59f, 898.2f, 568.05f, 900.74f, 567.09f, 902.73f);
                mPath.cubicTo(566.43f, 904.1f, 563.76f, 905.01f, 562.47f, 905.94f);
                mPath.cubicTo(560.04f, 907.7f, 560.01f, 909.43f, 558.08f, 910.94f);
                mPath.cubicTo(556.35f, 912.3f, 553.88f, 912.5f, 552.46f, 913.67f);
                mPath.cubicTo(550.77f, 915.05f, 550.69f, 917.39f, 548.98f, 918.81f);
                mPath.cubicTo(546.74f, 920.66f, 543.94f, 919.19f, 541.22f, 922.25f);
                mPath.cubicTo(538.09f, 925.76f, 539.4f, 928.86f, 537.91f, 932.37f);
                mPath.cubicTo(536.16f, 936.5f, 532.11f, 939.0f, 532.77f, 944.37f);
                mPath.cubicTo(533.1f, 946.99f, 535.18f, 947.53f, 535.48f, 950.37f);
                mPath.cubicTo(535.94f, 954.81f, 533.25f, 954.99f, 536.61f, 961.17f);
                mPath.cubicTo(542.92f, 959.37f, 544.92f, 956.13f, 552.81f, 955.8f);
                mPath.cubicTo(560.81f, 955.45f, 558.85f, 958.68f, 569.01f, 958.77f);
                mPath.cubicTo(569.01f, 958.77f, 563.61f, 961.77f, 563.61f, 961.77f);
                mPath.cubicTo(566.58f, 968.68f, 568.5f, 972.5f, 568.95f, 980.38f);
                mPath.cubicTo(569.16f, 983.94f, 567.94f, 985.57f, 569.37f, 987.09f);
                mPath.cubicTo(572.37f, 990.26f, 582.25f, 989.98f, 586.4f, 989.98f);
                mPath.cubicTo(584.79f, 995.96f, 582.11f, 998.88f, 581.37f, 1001.38f);
                mPath.cubicTo(580.51f, 1004.44f, 582.17f, 1006.94f, 581.37f, 1008.93f);
                mPath.cubicTo(580.17f, 1011.8f, 575.91f, 1013.26f, 574.41f, 1018.78f);
                mPath.cubicTo(582.71f, 1022.76f, 578.73f, 1020.28f, 584.0f, 1021.42f);
                mPath.cubicTo(588.3f, 1022.34f, 587.95f, 1024.66f, 595.4f, 1022.38f);
                mPath.cubicTo(596.21f, 1024.27f, 597.26f, 1026.37f, 597.6f, 1028.38f);
                mPath.cubicTo(597.98f, 1030.49f, 597.51f, 1032.59f, 598.41f, 1034.39f);
                mPath.cubicTo(599.47f, 1036.46f, 603.86f, 1040.13f, 606.2f, 1040.43f);
                mPath.cubicTo(607.68f, 1040.73f, 608.96f, 1040.01f, 611.0f, 1040.43f);
                mPath.cubicTo(613.56f, 1040.79f, 614.69f, 1042.27f, 617.6f, 1041.32f);
                mPath.cubicTo(621.29f, 1040.12f, 622.81f, 1037.66f, 625.4f, 1035.92f);
                mPath.cubicTo(627.18f, 1034.73f, 629.39f, 1034.45f, 631.4f, 1033.79f);
                mPath.cubicTo(631.4f, 1033.79f, 633.52f, 1041.59f, 633.52f, 1041.59f);
                mPath.cubicTo(633.51f, 1043.73f, 632.41f, 1045.57f, 633.52f, 1047.49f);
                mPath.cubicTo(636.77f, 1052.54f, 640.98f, 1050.35f, 643.23f, 1050.65f);
                mPath.cubicTo(644.4f, 1050.8f, 646.73f, 1052.36f, 648.19f, 1052.99f);
                mPath.cubicTo(648.19f, 1052.99f, 648.77f, 1046.39f, 648.77f, 1046.39f);
                mPath.cubicTo(648.77f, 1046.39f, 651.25f, 1039.79f, 651.25f, 1039.79f);
                mPath.cubicTo(651.25f, 1039.79f, 645.93f, 1019.98f, 645.93f, 1019.98f);
                mPath.cubicTo(645.93f, 1019.98f, 650.59f, 1012.18f, 650.59f, 1012.18f);
                mPath.cubicTo(651.66f, 1013.2f, 652.78f, 1014.46f, 654.19f, 1015.05f);
                mPath.cubicTo(655.28f, 1015.42f, 656.65f, 1015.24f, 657.79f, 1015.05f);
                mPath.cubicTo(663.16f, 1014.44f, 664.56f, 1013.11f, 668.59f, 1009.61f);
                mPath.cubicTo(670.08f, 1008.32f, 672.68f, 1005.27f, 674.59f, 1005.12f);
                mPath.cubicTo(677.06f, 1004.93f, 680.87f, 1008.81f, 682.99f, 1010.1f);
                mPath.cubicTo(685.29f, 1011.49f, 688.72f, 1011.83f, 691.39f, 1012.18f);
                mPath.cubicTo(691.39f, 1012.18f, 697.39f, 1003.18f, 697.39f, 1003.18f);
                mPath.cubicTo(698.82f, 1004.21f, 702.18f, 1007.42f, 703.38f, 1007.71f);
                mPath.cubicTo(705.43f, 1008.21f, 706.67f, 1005.98f, 708.68f, 1006.79f);
                mPath.cubicTo(711.05f, 1007.75f, 710.82f, 1010.48f, 716.58f, 1011.58f);
                mPath.cubicTo(716.86f, 1008.26f, 717.86f, 1005.28f, 721.38f, 1004.09f);
                mPath.cubicTo(724.15f, 1003.15f, 726.16f, 1005.83f, 728.58f, 1005.76f);
                mPath.cubicTo(730.42f, 1005.71f, 731.58f, 1004.17f, 733.38f, 1003.53f);
                mPath.cubicTo(733.38f, 1003.53f, 737.33f, 1002.84f, 737.33f, 1002.84f);
                mPath.cubicTo(739.38f, 1001.83f, 739.1f, 998.55f, 740.91f, 996.23f);
                mPath.cubicTo(744.35f, 991.86f, 747.78f, 989.63f, 753.18f, 988.65f);
                mPath.cubicTo(754.48f, 988.51f, 756.09f, 988.14f, 757.38f, 988.65f);
                mPath.cubicTo(758.83f, 989.03f, 759.89f, 990.18f, 760.98f, 991.18f);
                mPath.cubicTo(763.25f, 989.55f, 764.84f, 988.05f, 766.51f, 985.78f);
                mPath.cubicTo(767.66f, 984.2f, 768.5f, 982.14f, 770.6f, 981.61f);
                mPath.cubicTo(772.09f, 981.4f, 773.68f, 982.27f, 775.19f, 981.61f);
                mPath.cubicTo(777.84f, 980.17f, 780.58f, 972.54f, 780.14f, 970.17f);
                mPath.cubicTo(779.88f, 968.8f, 778.83f, 967.61f, 777.76f, 966.76f);
                mPath.cubicTo(775.11f, 964.66f, 769.7f, 965.41f, 766.37f, 965.37f);
                mPath.cubicTo(762.88f, 965.33f, 753.52f, 964.2f, 751.29f, 961.47f);
                mPath.cubicTo(749.62f, 959.44f, 750.78f, 956.35f, 748.23f, 954.99f);
                mPath.cubicTo(748.23f, 954.99f, 737.58f, 952.65f, 737.58f, 952.65f);
                mPath.cubicTo(736.05f, 952.34f, 733.73f, 952.09f, 732.79f, 950.71f);
                mPath.cubicTo(732.07f, 949.66f, 732.16f, 947.44f, 732.19f, 946.17f);
                mPath.cubicTo(732.35f, 940.06f, 736.79f, 937.25f, 736.97f, 930.57f);
                mPath.cubicTo(737.07f, 926.87f, 736.2f, 922.82f, 733.6f, 920.0f);
                mPath.cubicTo(731.3f, 917.51f, 728.03f, 918.3f, 728.18f, 914.35f);
                mPath.cubicTo(728.34f, 910.3f, 731.45f, 901.91f, 733.25f, 898.16f);
                mPath.cubicTo(734.33f, 895.91f, 736.81f, 892.83f, 736.12f, 890.36f);
                mPath.cubicTo(735.75f, 889.03f, 734.36f, 886.91f, 733.18f, 886.17f);
                mPath.cubicTo(731.64f, 885.19f, 722.58f, 883.67f, 720.78f, 884.08f);
                mPath.cubicTo(718.54f, 884.59f, 716.9f, 886.54f, 714.78f, 886.03f);
                mPath.cubicTo(709.07f, 884.67f, 711.69f, 879.04f, 710.82f, 876.56f);
                mPath.cubicTo(710.08f, 874.45f, 707.96f, 873.23f, 707.92f, 871.16f);
                mPath.cubicTo(707.84f, 866.78f, 714.98f, 861.11f, 718.98f, 860.7f);
                mPath.cubicTo(720.48f, 860.55f, 724.15f, 861.84f, 726.18f, 862.15f);
                mPath.cubicTo(726.18f, 862.15f, 728.58f, 857.95f, 728.58f, 857.95f);
                mPath.cubicTo(731.85f, 859.37f, 737.34f, 863.07f, 740.58f, 863.09f);
                mPath.cubicTo(742.91f, 863.1f, 744.86f, 861.26f, 746.58f, 859.87f);
                mPath.cubicTo(748.01f, 858.72f, 749.44f, 857.54f, 750.65f, 856.15f);
                mPath.cubicTo(756.87f, 848.99f, 751.49f, 844.17f, 747.78f, 837.55f);
                mPath.cubicTo(744.81f, 839.67f, 739.67f, 844.94f, 735.78f, 844.88f);
                mPath.cubicTo(732.43f, 844.84f, 729.36f, 840.25f, 729.27f, 837.2f);
                mPath.cubicTo(729.06f, 835.76f, 729.83f, 834.24f, 729.27f, 832.93f);
                mPath.cubicTo(728.85f, 831.37f, 726.97f, 830.55f, 726.2f, 829.05f);
                mPath.cubicTo(725.52f, 827.65f, 726.1f, 824.82f, 726.2f, 823.15f);
                mPath.cubicTo(719.89f, 821.46f, 722.52f, 821.35f, 715.38f, 821.35f);
                mPath.cubicTo(714.99f, 826.14f, 714.3f, 831.12f, 709.93f, 834.05f);
                mPath.cubicTo(708.62f, 834.93f, 705.59f, 835.82f, 703.98f, 836.35f);
                mPath.cubicTo(704.21f, 838.04f, 705.01f, 842.72f, 704.66f, 844.15f);
                mPath.cubicTo(704.11f, 846.33f, 700.81f, 849.04f, 699.24f, 850.75f);
                mPath.cubicTo(696.28f, 853.98f, 695.77f, 855.93f, 694.07f, 857.89f);
                mPath.cubicTo(690.29f, 862.25f, 687.83f, 858.97f, 687.71f, 865.76f);
                mPath.cubicTo(687.71f, 865.76f, 687.71f, 871.16f, 687.71f, 871.16f);
                mPath.cubicTo(687.9f, 879.06f, 694.64f, 884.5f, 687.71f, 892.03f);
                mPath.cubicTo(686.58f, 893.06f, 684.98f, 894.02f, 683.59f, 894.33f);
                mPath.cubicTo(679.68f, 895.18f, 679.3f, 890.98f, 675.19f, 892.83f);
                mPath.cubicTo(669.78f, 895.25f, 669.56f, 898.26f, 662.59f, 899.15f);
                mPath.cubicTo(661.56f, 899.34f, 660.23f, 899.52f, 659.24f, 899.15f);
                mPath.cubicTo(654.33f, 897.05f, 652.0f, 888.3f, 644.59f, 884.96f);
                mPath.cubicTo(645.42f, 883.58f, 647.55f, 880.48f, 647.45f, 878.96f);
                mPath.cubicTo(647.2f, 875.38f, 639.83f, 872.0f, 638.1f, 868.73f);
                mPath.cubicTo(638.1f, 868.73f, 636.42f, 860.95f, 636.42f, 860.95f);
                mPath.cubicTo(635.34f, 857.43f, 632.15f, 852.89f, 630.39f, 849.55f);
                mPath.cubicTo(629.75f, 848.35f, 628.56f, 845.27f, 627.8f, 844.49f);
                mPath.cubicTo(626.71f, 843.38f, 620.4f, 843.21f, 618.2f, 842.53f);
                mPath.cubicTo(613.12f, 840.95f, 610.33f, 835.79f, 609.2f, 830.95f);
                mPath.cubicTo(609.2f, 830.95f, 613.4f, 828.55f, 613.4f, 828.55f);
                mPath.cubicTo(611.79f, 825.13f, 609.91f, 824.12f, 607.59f, 821.35f);
                mPath.cubicTo(604.42f, 817.54f, 603.27f, 814.05f, 598.4f, 811.75f);
                mPath.cubicTo(594.79f, 820.14f, 592.4f, 822.06f, 592.4f, 831.55f);
                mPath.cubicTo(587.8f, 826.11f, 585.22f, 820.18f, 585.16f, 812.95f);
                mPath.cubicTo(585.16f, 812.95f, 585.16f, 812.95f, 585.16f, 812.95f);
                mPath.close();
                mPath.moveTo(585.16f, 812.95f);
                break;
            case 33:
                mPath.moveTo(1132.54f, 724.13f);
                mPath.cubicTo(1131.33f, 728.95f, 1130.87f, 729.69f, 1125.72f, 730.13f);
                mPath.cubicTo(1125.72f, 730.13f, 1128.65f, 735.52f, 1128.65f, 735.52f);
                mPath.cubicTo(1129.83f, 739.53f, 1120.17f, 742.09f, 1117.32f, 742.73f);
                mPath.cubicTo(1117.99f, 744.79f, 1119.51f, 749.1f, 1119.29f, 751.14f);
                mPath.cubicTo(1118.74f, 756.33f, 1113.73f, 763.79f, 1110.12f, 767.33f);
                mPath.cubicTo(1110.12f, 767.33f, 1104.08f, 772.92f, 1104.08f, 772.92f);
                mPath.cubicTo(1103.18f, 774.27f, 1102.07f, 779.97f, 1101.9f, 781.73f);
                mPath.cubicTo(1101.45f, 786.57f, 1105.41f, 784.81f, 1109.05f, 789.57f);
                mPath.cubicTo(1112.16f, 793.63f, 1113.3f, 800.67f, 1113.72f, 805.74f);
                mPath.cubicTo(1122.09f, 805.74f, 1118.83f, 805.8f, 1125.72f, 809.35f);
                mPath.cubicTo(1125.72f, 809.35f, 1124.88f, 816.55f, 1124.88f, 816.55f);
                mPath.cubicTo(1124.88f, 816.55f, 1128.3f, 821.95f, 1128.3f, 821.95f);
                mPath.cubicTo(1128.3f, 821.95f, 1129.91f, 827.95f, 1129.91f, 827.95f);
                mPath.cubicTo(1132.06f, 828.35f, 1137.79f, 829.81f, 1139.51f, 829.64f);
                mPath.cubicTo(1143.62f, 829.24f, 1147.34f, 824.11f, 1149.11f, 820.75f);
                mPath.cubicTo(1150.63f, 823.42f, 1154.34f, 832.25f, 1158.11f, 831.35f);
                mPath.cubicTo(1159.48f, 831.02f, 1164.79f, 825.88f, 1167.65f, 826.54f);
                mPath.cubicTo(1169.18f, 826.9f, 1173.11f, 831.87f, 1174.91f, 833.35f);
                mPath.cubicTo(1175.98f, 830.86f, 1178.85f, 826.26f, 1178.4f, 823.75f);
                mPath.cubicTo(1178.22f, 822.69f, 1177.47f, 821.5f, 1177.47f, 820.15f);
                mPath.cubicTo(1177.47f, 818.71f, 1178.71f, 816.37f, 1179.15f, 814.75f);
                mPath.cubicTo(1179.15f, 814.75f, 1180.05f, 809.35f, 1180.05f, 809.35f);
                mPath.cubicTo(1181.06f, 805.97f, 1183.75f, 805.66f, 1184.75f, 803.24f);
                mPath.cubicTo(1185.57f, 801.25f, 1183.98f, 794.04f, 1189.13f, 794.07f);
                mPath.cubicTo(1190.45f, 794.07f, 1193.28f, 797.47f, 1194.7f, 798.54f);
                mPath.cubicTo(1195.94f, 794.02f, 1196.78f, 793.62f, 1200.7f, 791.34f);
                mPath.cubicTo(1200.7f, 791.34f, 1197.1f, 781.74f, 1197.1f, 781.74f);
                mPath.cubicTo(1196.79f, 779.27f, 1198.26f, 778.19f, 1198.41f, 775.74f);
                mPath.cubicTo(1198.68f, 771.15f, 1195.87f, 768.52f, 1192.9f, 765.54f);
                mPath.cubicTo(1192.9f, 765.54f, 1198.9f, 765.54f, 1198.9f, 765.54f);
                mPath.cubicTo(1198.9f, 765.54f, 1199.5f, 760.14f, 1199.5f, 760.14f);
                mPath.cubicTo(1199.5f, 760.14f, 1201.9f, 763.74f, 1201.9f, 763.74f);
                mPath.cubicTo(1207.69f, 760.9f, 1204.63f, 755.72f, 1201.9f, 751.74f);
                mPath.cubicTo(1201.9f, 751.74f, 1198.5f, 755.09f, 1198.5f, 755.09f);
                mPath.cubicTo(1198.5f, 755.09f, 1192.9f, 754.74f, 1192.9f, 754.74f);
                mPath.cubicTo(1192.9f, 754.74f, 1196.87f, 751.96f, 1196.87f, 751.96f);
                mPath.cubicTo(1196.87f, 751.96f, 1202.5f, 742.13f, 1202.5f, 742.13f);
                mPath.cubicTo(1199.2f, 742.06f, 1194.98f, 741.63f, 1192.3f, 739.55f);
                mPath.cubicTo(1189.52f, 737.39f, 1186.91f, 733.15f, 1183.31f, 732.62f);
                mPath.cubicTo(1178.61f, 731.93f, 1176.17f, 735.32f, 1172.51f, 737.48f);
                mPath.cubicTo(1169.99f, 738.95f, 1168.1f, 739.2f, 1165.31f, 739.73f);
                mPath.cubicTo(1165.31f, 739.73f, 1167.02f, 732.53f, 1167.02f, 732.53f);
                mPath.cubicTo(1167.02f, 732.53f, 1178.51f, 719.33f, 1178.51f, 719.33f);
                mPath.cubicTo(1176.65f, 718.53f, 1174.76f, 717.73f, 1173.11f, 716.55f);
                mPath.cubicTo(1171.72f, 715.55f, 1169.69f, 713.37f, 1168.31f, 712.85f);
                mPath.cubicTo(1165.67f, 711.86f, 1162.25f, 714.25f, 1160.89f, 716.36f);
                mPath.cubicTo(1160.08f, 717.61f, 1159.75f, 718.54f, 1159.31f, 719.93f);
                mPath.cubicTo(1159.31f, 719.93f, 1147.91f, 716.32f, 1147.91f, 716.32f);
                mPath.cubicTo(1143.82f, 714.18f, 1143.81f, 710.28f, 1138.31f, 711.71f);
                mPath.cubicTo(1137.46f, 711.93f, 1135.59f, 712.44f, 1134.9f, 712.91f);
                mPath.cubicTo(1132.97f, 714.23f, 1133.61f, 717.28f, 1133.46f, 719.33f);
                mPath.cubicTo(1133.33f, 721.09f, 1132.96f, 722.44f, 1132.54f, 724.13f);
                mPath.cubicTo(1132.54f, 724.13f, 1132.54f, 724.13f, 1132.54f, 724.13f);
                mPath.close();
                mPath.moveTo(1132.54f, 724.13f);
                break;
        }
    }

}